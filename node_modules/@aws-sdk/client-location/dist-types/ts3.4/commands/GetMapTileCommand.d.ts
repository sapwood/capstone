import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import {
  LocationClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LocationClient";
import { GetMapTileRequest, GetMapTileResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetMapTileCommandInput extends GetMapTileRequest {}
export type GetMapTileCommandOutputType = Pick<
  GetMapTileResponse,
  Exclude<keyof GetMapTileResponse, "Blob">
> & {
  Blob?: Uint8ArrayBlobAdapter;
};
export interface GetMapTileCommandOutput
  extends GetMapTileCommandOutputType,
    __MetadataBearer {}
export declare class GetMapTileCommand extends $Command<
  GetMapTileCommandInput,
  GetMapTileCommandOutput,
  LocationClientResolvedConfig
> {
  readonly input: GetMapTileCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetMapTileCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LocationClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetMapTileCommandInput, GetMapTileCommandOutput>;
  private serialize;
  private deserialize;
}
