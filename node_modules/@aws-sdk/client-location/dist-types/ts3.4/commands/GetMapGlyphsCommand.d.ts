import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import {
  LocationClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LocationClient";
import { GetMapGlyphsRequest, GetMapGlyphsResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetMapGlyphsCommandInput extends GetMapGlyphsRequest {}
export type GetMapGlyphsCommandOutputType = Pick<
  GetMapGlyphsResponse,
  Exclude<keyof GetMapGlyphsResponse, "Blob">
> & {
  Blob?: Uint8ArrayBlobAdapter;
};
export interface GetMapGlyphsCommandOutput
  extends GetMapGlyphsCommandOutputType,
    __MetadataBearer {}
export declare class GetMapGlyphsCommand extends $Command<
  GetMapGlyphsCommandInput,
  GetMapGlyphsCommandOutput,
  LocationClientResolvedConfig
> {
  readonly input: GetMapGlyphsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetMapGlyphsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LocationClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetMapGlyphsCommandInput, GetMapGlyphsCommandOutput>;
  private serialize;
  private deserialize;
}
