import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  LocationClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LocationClient";
import {
  CalculateRouteRequest,
  CalculateRouteResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CalculateRouteCommandInput extends CalculateRouteRequest {}
export interface CalculateRouteCommandOutput
  extends CalculateRouteResponse,
    __MetadataBearer {}
export declare class CalculateRouteCommand extends $Command<
  CalculateRouteCommandInput,
  CalculateRouteCommandOutput,
  LocationClientResolvedConfig
> {
  readonly input: CalculateRouteCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CalculateRouteCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LocationClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CalculateRouteCommandInput, CalculateRouteCommandOutput>;
  private serialize;
  private deserialize;
}
