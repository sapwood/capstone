import {
  AuthenticatorProvider,
  ComponentClassName,
  FederatedIdentityProviders,
  authenticatorTextUtil,
  censorContactMethod,
  changePassword,
  classNameModifier,
  classNameModifierByFlag,
  classNames,
  countryDialCodes,
  createTheme,
  cssNameTransform,
  defaultDarkModeOverride,
  defaultFormFieldOptions,
  defaultTheme,
  deleteUser,
  getDefaultConfirmPasswordValidators,
  getDefaultPasswordValidators,
  getErrors,
  getLogger,
  getTotpCodeURL,
  isDesignToken,
  isFunction,
  isString,
  isTypedFunction,
  require_baseIsEqual,
  require_isObject,
  require_isSymbol,
  require_root,
  runFieldValidators,
  sanitizeNamespaceImport,
  translate,
  translations,
  useAuthenticator,
  useAuthenticatorInitMachine,
  useDeprecationWarning,
  useSetUserAgent
} from "./chunk-ZFYDVO7N.js";
import "./chunk-5LMEXU6I.js";
import "./chunk-Y7SMNMTU.js";
import {
  AmplifyError,
  AmplifyErrorCode,
  AmplifyUrl,
  AmplifyUrlSearchParams,
  ConsoleLogger,
  Hub,
  __assign,
  __rest,
  __spreadArray,
  composeServiceApi,
  composeTransferHandler,
  extendedEncodeURIComponent,
  getAmplifyUserAgent,
  getCurrentUser,
  getDnsSuffix,
  getHashedPayload,
  getRetryDecider,
  init_tslib_es6,
  jitteredBackoff,
  parseMetadata,
  retryMiddlewareFactory,
  signingMiddlewareFactory,
  userAgentMiddlewareFactory,
  withMemoization
} from "./chunk-6SW32IDD.js";
import "./chunk-73MXYMUK.js";
import {
  require_react_dom
} from "./chunk-GSZ7ISAW.js";
import {
  require_react
} from "./chunk-ZGRSIX2Q.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/lodash/isEqual.js
var require_isEqual = __commonJS({
  "node_modules/lodash/isEqual.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    function isEqual2(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual2;
  }
});

// browser-external:fast-xml-parser
var require_fast_xml_parser = __commonJS({
  "browser-external:fast-xml-parser"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fast-xml-parser" has been externalized for browser compatibility. Cannot access "fast-xml-parser.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:buffer
var require_buffer = __commonJS({
  "browser-external:buffer"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "buffer" has been externalized for browser compatibility. Cannot access "buffer.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index2 = string.length;
      while (index2-- && reWhitespace.test(string.charAt(index2))) {
      }
      return index2;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce2(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce2;
  }
});

// node_modules/qrcode/lib/can-promise.js
var require_can_promise = __commonJS({
  "node_modules/qrcode/lib/can-promise.js"(exports, module) {
    module.exports = function() {
      return typeof Promise === "function" && Promise.prototype && Promise.prototype.then;
    };
  }
});

// node_modules/qrcode/lib/core/utils.js
var require_utils = __commonJS({
  "node_modules/qrcode/lib/core/utils.js"(exports) {
    var toSJISFunction;
    var CODEWORDS_COUNT = [
      0,
      // Not used
      26,
      44,
      70,
      100,
      134,
      172,
      196,
      242,
      292,
      346,
      404,
      466,
      532,
      581,
      655,
      733,
      815,
      901,
      991,
      1085,
      1156,
      1258,
      1364,
      1474,
      1588,
      1706,
      1828,
      1921,
      2051,
      2185,
      2323,
      2465,
      2611,
      2761,
      2876,
      3034,
      3196,
      3362,
      3532,
      3706
    ];
    exports.getSymbolSize = function getSymbolSize(version) {
      if (!version)
        throw new Error('"version" cannot be null or undefined');
      if (version < 1 || version > 40)
        throw new Error('"version" should be in range from 1 to 40');
      return version * 4 + 17;
    };
    exports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {
      return CODEWORDS_COUNT[version];
    };
    exports.getBCHDigit = function(data) {
      let digit = 0;
      while (data !== 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    };
    exports.setToSJISFunction = function setToSJISFunction(f) {
      if (typeof f !== "function") {
        throw new Error('"toSJISFunc" is not a valid function.');
      }
      toSJISFunction = f;
    };
    exports.isKanjiModeEnabled = function() {
      return typeof toSJISFunction !== "undefined";
    };
    exports.toSJIS = function toSJIS(kanji) {
      return toSJISFunction(kanji);
    };
  }
});

// node_modules/qrcode/lib/core/error-correction-level.js
var require_error_correction_level = __commonJS({
  "node_modules/qrcode/lib/core/error-correction-level.js"(exports) {
    exports.L = { bit: 1 };
    exports.M = { bit: 0 };
    exports.Q = { bit: 3 };
    exports.H = { bit: 2 };
    function fromString(string) {
      if (typeof string !== "string") {
        throw new Error("Param is not a string");
      }
      const lcStr = string.toLowerCase();
      switch (lcStr) {
        case "l":
        case "low":
          return exports.L;
        case "m":
        case "medium":
          return exports.M;
        case "q":
        case "quartile":
          return exports.Q;
        case "h":
        case "high":
          return exports.H;
        default:
          throw new Error("Unknown EC Level: " + string);
      }
    }
    exports.isValid = function isValid(level) {
      return level && typeof level.bit !== "undefined" && level.bit >= 0 && level.bit < 4;
    };
    exports.from = function from(value, defaultValue2) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString(value);
      } catch (e) {
        return defaultValue2;
      }
    };
  }
});

// node_modules/qrcode/lib/core/bit-buffer.js
var require_bit_buffer = __commonJS({
  "node_modules/qrcode/lib/core/bit-buffer.js"(exports, module) {
    function BitBuffer() {
      this.buffer = [];
      this.length = 0;
    }
    BitBuffer.prototype = {
      get: function(index2) {
        const bufIndex = Math.floor(index2 / 8);
        return (this.buffer[bufIndex] >>> 7 - index2 % 8 & 1) === 1;
      },
      put: function(num, length) {
        for (let i = 0; i < length; i++) {
          this.putBit((num >>> length - i - 1 & 1) === 1);
        }
      },
      getLengthInBits: function() {
        return this.length;
      },
      putBit: function(bit) {
        const bufIndex = Math.floor(this.length / 8);
        if (this.buffer.length <= bufIndex) {
          this.buffer.push(0);
        }
        if (bit) {
          this.buffer[bufIndex] |= 128 >>> this.length % 8;
        }
        this.length++;
      }
    };
    module.exports = BitBuffer;
  }
});

// node_modules/qrcode/lib/core/bit-matrix.js
var require_bit_matrix = __commonJS({
  "node_modules/qrcode/lib/core/bit-matrix.js"(exports, module) {
    function BitMatrix(size2) {
      if (!size2 || size2 < 1) {
        throw new Error("BitMatrix size must be defined and greater than 0");
      }
      this.size = size2;
      this.data = new Uint8Array(size2 * size2);
      this.reservedBit = new Uint8Array(size2 * size2);
    }
    BitMatrix.prototype.set = function(row, col, value, reserved) {
      const index2 = row * this.size + col;
      this.data[index2] = value;
      if (reserved)
        this.reservedBit[index2] = true;
    };
    BitMatrix.prototype.get = function(row, col) {
      return this.data[row * this.size + col];
    };
    BitMatrix.prototype.xor = function(row, col, value) {
      this.data[row * this.size + col] ^= value;
    };
    BitMatrix.prototype.isReserved = function(row, col) {
      return this.reservedBit[row * this.size + col];
    };
    module.exports = BitMatrix;
  }
});

// node_modules/qrcode/lib/core/alignment-pattern.js
var require_alignment_pattern = __commonJS({
  "node_modules/qrcode/lib/core/alignment-pattern.js"(exports) {
    var getSymbolSize = require_utils().getSymbolSize;
    exports.getRowColCoords = function getRowColCoords(version) {
      if (version === 1)
        return [];
      const posCount = Math.floor(version / 7) + 2;
      const size2 = getSymbolSize(version);
      const intervals = size2 === 145 ? 26 : Math.ceil((size2 - 13) / (2 * posCount - 2)) * 2;
      const positions = [size2 - 7];
      for (let i = 1; i < posCount - 1; i++) {
        positions[i] = positions[i - 1] - intervals;
      }
      positions.push(6);
      return positions.reverse();
    };
    exports.getPositions = function getPositions(version) {
      const coords = [];
      const pos = exports.getRowColCoords(version);
      const posLength = pos.length;
      for (let i = 0; i < posLength; i++) {
        for (let j = 0; j < posLength; j++) {
          if (i === 0 && j === 0 || // top-left
          i === 0 && j === posLength - 1 || // bottom-left
          i === posLength - 1 && j === 0) {
            continue;
          }
          coords.push([pos[i], pos[j]]);
        }
      }
      return coords;
    };
  }
});

// node_modules/qrcode/lib/core/finder-pattern.js
var require_finder_pattern = __commonJS({
  "node_modules/qrcode/lib/core/finder-pattern.js"(exports) {
    var getSymbolSize = require_utils().getSymbolSize;
    var FINDER_PATTERN_SIZE = 7;
    exports.getPositions = function getPositions(version) {
      const size2 = getSymbolSize(version);
      return [
        // top-left
        [0, 0],
        // top-right
        [size2 - FINDER_PATTERN_SIZE, 0],
        // bottom-left
        [0, size2 - FINDER_PATTERN_SIZE]
      ];
    };
  }
});

// node_modules/qrcode/lib/core/mask-pattern.js
var require_mask_pattern = __commonJS({
  "node_modules/qrcode/lib/core/mask-pattern.js"(exports) {
    exports.Patterns = {
      PATTERN000: 0,
      PATTERN001: 1,
      PATTERN010: 2,
      PATTERN011: 3,
      PATTERN100: 4,
      PATTERN101: 5,
      PATTERN110: 6,
      PATTERN111: 7
    };
    var PenaltyScores = {
      N1: 3,
      N2: 3,
      N3: 40,
      N4: 10
    };
    exports.isValid = function isValid(mask) {
      return mask != null && mask !== "" && !isNaN(mask) && mask >= 0 && mask <= 7;
    };
    exports.from = function from(value) {
      return exports.isValid(value) ? parseInt(value, 10) : void 0;
    };
    exports.getPenaltyN1 = function getPenaltyN1(data) {
      const size2 = data.size;
      let points = 0;
      let sameCountCol = 0;
      let sameCountRow = 0;
      let lastCol = null;
      let lastRow = null;
      for (let row = 0; row < size2; row++) {
        sameCountCol = sameCountRow = 0;
        lastCol = lastRow = null;
        for (let col = 0; col < size2; col++) {
          let module2 = data.get(row, col);
          if (module2 === lastCol) {
            sameCountCol++;
          } else {
            if (sameCountCol >= 5)
              points += PenaltyScores.N1 + (sameCountCol - 5);
            lastCol = module2;
            sameCountCol = 1;
          }
          module2 = data.get(col, row);
          if (module2 === lastRow) {
            sameCountRow++;
          } else {
            if (sameCountRow >= 5)
              points += PenaltyScores.N1 + (sameCountRow - 5);
            lastRow = module2;
            sameCountRow = 1;
          }
        }
        if (sameCountCol >= 5)
          points += PenaltyScores.N1 + (sameCountCol - 5);
        if (sameCountRow >= 5)
          points += PenaltyScores.N1 + (sameCountRow - 5);
      }
      return points;
    };
    exports.getPenaltyN2 = function getPenaltyN2(data) {
      const size2 = data.size;
      let points = 0;
      for (let row = 0; row < size2 - 1; row++) {
        for (let col = 0; col < size2 - 1; col++) {
          const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
          if (last === 4 || last === 0)
            points++;
        }
      }
      return points * PenaltyScores.N2;
    };
    exports.getPenaltyN3 = function getPenaltyN3(data) {
      const size2 = data.size;
      let points = 0;
      let bitsCol = 0;
      let bitsRow = 0;
      for (let row = 0; row < size2; row++) {
        bitsCol = bitsRow = 0;
        for (let col = 0; col < size2; col++) {
          bitsCol = bitsCol << 1 & 2047 | data.get(row, col);
          if (col >= 10 && (bitsCol === 1488 || bitsCol === 93))
            points++;
          bitsRow = bitsRow << 1 & 2047 | data.get(col, row);
          if (col >= 10 && (bitsRow === 1488 || bitsRow === 93))
            points++;
        }
      }
      return points * PenaltyScores.N3;
    };
    exports.getPenaltyN4 = function getPenaltyN4(data) {
      let darkCount = 0;
      const modulesCount = data.data.length;
      for (let i = 0; i < modulesCount; i++)
        darkCount += data.data[i];
      const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
      return k * PenaltyScores.N4;
    };
    function getMaskAt(maskPattern, i, j) {
      switch (maskPattern) {
        case exports.Patterns.PATTERN000:
          return (i + j) % 2 === 0;
        case exports.Patterns.PATTERN001:
          return i % 2 === 0;
        case exports.Patterns.PATTERN010:
          return j % 3 === 0;
        case exports.Patterns.PATTERN011:
          return (i + j) % 3 === 0;
        case exports.Patterns.PATTERN100:
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;
        case exports.Patterns.PATTERN101:
          return i * j % 2 + i * j % 3 === 0;
        case exports.Patterns.PATTERN110:
          return (i * j % 2 + i * j % 3) % 2 === 0;
        case exports.Patterns.PATTERN111:
          return (i * j % 3 + (i + j) % 2) % 2 === 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    }
    exports.applyMask = function applyMask(pattern, data) {
      const size2 = data.size;
      for (let col = 0; col < size2; col++) {
        for (let row = 0; row < size2; row++) {
          if (data.isReserved(row, col))
            continue;
          data.xor(row, col, getMaskAt(pattern, row, col));
        }
      }
    };
    exports.getBestMask = function getBestMask(data, setupFormatFunc) {
      const numPatterns = Object.keys(exports.Patterns).length;
      let bestPattern = 0;
      let lowerPenalty = Infinity;
      for (let p = 0; p < numPatterns; p++) {
        setupFormatFunc(p);
        exports.applyMask(p, data);
        const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);
        exports.applyMask(p, data);
        if (penalty < lowerPenalty) {
          lowerPenalty = penalty;
          bestPattern = p;
        }
      }
      return bestPattern;
    };
  }
});

// node_modules/qrcode/lib/core/error-correction-code.js
var require_error_correction_code = __commonJS({
  "node_modules/qrcode/lib/core/error-correction-code.js"(exports) {
    var ECLevel = require_error_correction_level();
    var EC_BLOCKS_TABLE = [
      // L  M  Q  H
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      2,
      2,
      1,
      2,
      2,
      4,
      1,
      2,
      4,
      4,
      2,
      4,
      4,
      4,
      2,
      4,
      6,
      5,
      2,
      4,
      6,
      6,
      2,
      5,
      8,
      8,
      4,
      5,
      8,
      8,
      4,
      5,
      8,
      11,
      4,
      8,
      10,
      11,
      4,
      9,
      12,
      16,
      4,
      9,
      16,
      16,
      6,
      10,
      12,
      18,
      6,
      10,
      17,
      16,
      6,
      11,
      16,
      19,
      6,
      13,
      18,
      21,
      7,
      14,
      21,
      25,
      8,
      16,
      20,
      25,
      8,
      17,
      23,
      25,
      9,
      17,
      23,
      34,
      9,
      18,
      25,
      30,
      10,
      20,
      27,
      32,
      12,
      21,
      29,
      35,
      12,
      23,
      34,
      37,
      12,
      25,
      34,
      40,
      13,
      26,
      35,
      42,
      14,
      28,
      38,
      45,
      15,
      29,
      40,
      48,
      16,
      31,
      43,
      51,
      17,
      33,
      45,
      54,
      18,
      35,
      48,
      57,
      19,
      37,
      51,
      60,
      19,
      38,
      53,
      63,
      20,
      40,
      56,
      66,
      21,
      43,
      59,
      70,
      22,
      45,
      62,
      74,
      24,
      47,
      65,
      77,
      25,
      49,
      68,
      81
    ];
    var EC_CODEWORDS_TABLE = [
      // L  M  Q  H
      7,
      10,
      13,
      17,
      10,
      16,
      22,
      28,
      15,
      26,
      36,
      44,
      20,
      36,
      52,
      64,
      26,
      48,
      72,
      88,
      36,
      64,
      96,
      112,
      40,
      72,
      108,
      130,
      48,
      88,
      132,
      156,
      60,
      110,
      160,
      192,
      72,
      130,
      192,
      224,
      80,
      150,
      224,
      264,
      96,
      176,
      260,
      308,
      104,
      198,
      288,
      352,
      120,
      216,
      320,
      384,
      132,
      240,
      360,
      432,
      144,
      280,
      408,
      480,
      168,
      308,
      448,
      532,
      180,
      338,
      504,
      588,
      196,
      364,
      546,
      650,
      224,
      416,
      600,
      700,
      224,
      442,
      644,
      750,
      252,
      476,
      690,
      816,
      270,
      504,
      750,
      900,
      300,
      560,
      810,
      960,
      312,
      588,
      870,
      1050,
      336,
      644,
      952,
      1110,
      360,
      700,
      1020,
      1200,
      390,
      728,
      1050,
      1260,
      420,
      784,
      1140,
      1350,
      450,
      812,
      1200,
      1440,
      480,
      868,
      1290,
      1530,
      510,
      924,
      1350,
      1620,
      540,
      980,
      1440,
      1710,
      570,
      1036,
      1530,
      1800,
      570,
      1064,
      1590,
      1890,
      600,
      1120,
      1680,
      1980,
      630,
      1204,
      1770,
      2100,
      660,
      1260,
      1860,
      2220,
      720,
      1316,
      1950,
      2310,
      750,
      1372,
      2040,
      2430
    ];
    exports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];
        case ECLevel.M:
          return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];
        case ECLevel.H:
          return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
    exports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {
      switch (errorCorrectionLevel) {
        case ECLevel.L:
          return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];
        case ECLevel.M:
          return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];
        case ECLevel.Q:
          return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];
        case ECLevel.H:
          return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];
        default:
          return void 0;
      }
    };
  }
});

// node_modules/qrcode/lib/core/galois-field.js
var require_galois_field = __commonJS({
  "node_modules/qrcode/lib/core/galois-field.js"(exports) {
    var EXP_TABLE = new Uint8Array(512);
    var LOG_TABLE = new Uint8Array(256);
    (function initTables() {
      let x = 1;
      for (let i = 0; i < 255; i++) {
        EXP_TABLE[i] = x;
        LOG_TABLE[x] = i;
        x <<= 1;
        if (x & 256) {
          x ^= 285;
        }
      }
      for (let i = 255; i < 512; i++) {
        EXP_TABLE[i] = EXP_TABLE[i - 255];
      }
    })();
    exports.log = function log(n) {
      if (n < 1)
        throw new Error("log(" + n + ")");
      return LOG_TABLE[n];
    };
    exports.exp = function exp(n) {
      return EXP_TABLE[n];
    };
    exports.mul = function mul(x, y) {
      if (x === 0 || y === 0)
        return 0;
      return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];
    };
  }
});

// node_modules/qrcode/lib/core/polynomial.js
var require_polynomial = __commonJS({
  "node_modules/qrcode/lib/core/polynomial.js"(exports) {
    var GF = require_galois_field();
    exports.mul = function mul(p1, p2) {
      const coeff = new Uint8Array(p1.length + p2.length - 1);
      for (let i = 0; i < p1.length; i++) {
        for (let j = 0; j < p2.length; j++) {
          coeff[i + j] ^= GF.mul(p1[i], p2[j]);
        }
      }
      return coeff;
    };
    exports.mod = function mod(divident, divisor) {
      let result = new Uint8Array(divident);
      while (result.length - divisor.length >= 0) {
        const coeff = result[0];
        for (let i = 0; i < divisor.length; i++) {
          result[i] ^= GF.mul(divisor[i], coeff);
        }
        let offset2 = 0;
        while (offset2 < result.length && result[offset2] === 0)
          offset2++;
        result = result.slice(offset2);
      }
      return result;
    };
    exports.generateECPolynomial = function generateECPolynomial(degree) {
      let poly = new Uint8Array([1]);
      for (let i = 0; i < degree; i++) {
        poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));
      }
      return poly;
    };
  }
});

// node_modules/qrcode/lib/core/reed-solomon-encoder.js
var require_reed_solomon_encoder = __commonJS({
  "node_modules/qrcode/lib/core/reed-solomon-encoder.js"(exports, module) {
    var Polynomial = require_polynomial();
    function ReedSolomonEncoder(degree) {
      this.genPoly = void 0;
      this.degree = degree;
      if (this.degree)
        this.initialize(this.degree);
    }
    ReedSolomonEncoder.prototype.initialize = function initialize(degree) {
      this.degree = degree;
      this.genPoly = Polynomial.generateECPolynomial(this.degree);
    };
    ReedSolomonEncoder.prototype.encode = function encode(data) {
      if (!this.genPoly) {
        throw new Error("Encoder not initialized");
      }
      const paddedData = new Uint8Array(data.length + this.degree);
      paddedData.set(data);
      const remainder = Polynomial.mod(paddedData, this.genPoly);
      const start = this.degree - remainder.length;
      if (start > 0) {
        const buff = new Uint8Array(this.degree);
        buff.set(remainder, start);
        return buff;
      }
      return remainder;
    };
    module.exports = ReedSolomonEncoder;
  }
});

// node_modules/qrcode/lib/core/version-check.js
var require_version_check = __commonJS({
  "node_modules/qrcode/lib/core/version-check.js"(exports) {
    exports.isValid = function isValid(version) {
      return !isNaN(version) && version >= 1 && version <= 40;
    };
  }
});

// node_modules/qrcode/lib/core/regex.js
var require_regex = __commonJS({
  "node_modules/qrcode/lib/core/regex.js"(exports) {
    var numeric = "[0-9]+";
    var alphanumeric = "[A-Z $%*+\\-./:]+";
    var kanji = "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
    kanji = kanji.replace(/u/g, "\\u");
    var byte = "(?:(?![A-Z0-9 $%*+\\-./:]|" + kanji + ")(?:.|[\r\n]))+";
    exports.KANJI = new RegExp(kanji, "g");
    exports.BYTE_KANJI = new RegExp("[^A-Z0-9 $%*+\\-./:]+", "g");
    exports.BYTE = new RegExp(byte, "g");
    exports.NUMERIC = new RegExp(numeric, "g");
    exports.ALPHANUMERIC = new RegExp(alphanumeric, "g");
    var TEST_KANJI = new RegExp("^" + kanji + "$");
    var TEST_NUMERIC = new RegExp("^" + numeric + "$");
    var TEST_ALPHANUMERIC = new RegExp("^[A-Z0-9 $%*+\\-./:]+$");
    exports.testKanji = function testKanji(str) {
      return TEST_KANJI.test(str);
    };
    exports.testNumeric = function testNumeric(str) {
      return TEST_NUMERIC.test(str);
    };
    exports.testAlphanumeric = function testAlphanumeric(str) {
      return TEST_ALPHANUMERIC.test(str);
    };
  }
});

// node_modules/qrcode/lib/core/mode.js
var require_mode = __commonJS({
  "node_modules/qrcode/lib/core/mode.js"(exports) {
    var VersionCheck = require_version_check();
    var Regex = require_regex();
    exports.NUMERIC = {
      id: "Numeric",
      bit: 1 << 0,
      ccBits: [10, 12, 14]
    };
    exports.ALPHANUMERIC = {
      id: "Alphanumeric",
      bit: 1 << 1,
      ccBits: [9, 11, 13]
    };
    exports.BYTE = {
      id: "Byte",
      bit: 1 << 2,
      ccBits: [8, 16, 16]
    };
    exports.KANJI = {
      id: "Kanji",
      bit: 1 << 3,
      ccBits: [8, 10, 12]
    };
    exports.MIXED = {
      bit: -1
    };
    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {
      if (!mode.ccBits)
        throw new Error("Invalid mode: " + mode);
      if (!VersionCheck.isValid(version)) {
        throw new Error("Invalid version: " + version);
      }
      if (version >= 1 && version < 10)
        return mode.ccBits[0];
      else if (version < 27)
        return mode.ccBits[1];
      return mode.ccBits[2];
    };
    exports.getBestModeForData = function getBestModeForData(dataStr) {
      if (Regex.testNumeric(dataStr))
        return exports.NUMERIC;
      else if (Regex.testAlphanumeric(dataStr))
        return exports.ALPHANUMERIC;
      else if (Regex.testKanji(dataStr))
        return exports.KANJI;
      else
        return exports.BYTE;
    };
    exports.toString = function toString(mode) {
      if (mode && mode.id)
        return mode.id;
      throw new Error("Invalid mode");
    };
    exports.isValid = function isValid(mode) {
      return mode && mode.bit && mode.ccBits;
    };
    function fromString(string) {
      if (typeof string !== "string") {
        throw new Error("Param is not a string");
      }
      const lcStr = string.toLowerCase();
      switch (lcStr) {
        case "numeric":
          return exports.NUMERIC;
        case "alphanumeric":
          return exports.ALPHANUMERIC;
        case "kanji":
          return exports.KANJI;
        case "byte":
          return exports.BYTE;
        default:
          throw new Error("Unknown mode: " + string);
      }
    }
    exports.from = function from(value, defaultValue2) {
      if (exports.isValid(value)) {
        return value;
      }
      try {
        return fromString(value);
      } catch (e) {
        return defaultValue2;
      }
    };
  }
});

// node_modules/qrcode/lib/core/version.js
var require_version = __commonJS({
  "node_modules/qrcode/lib/core/version.js"(exports) {
    var Utils = require_utils();
    var ECCode = require_error_correction_code();
    var ECLevel = require_error_correction_level();
    var Mode = require_mode();
    var VersionCheck = require_version_check();
    var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
    var G18_BCH = Utils.getBCHDigit(G18);
    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {
      for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
        if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    function getReservedBitsCount(mode, version) {
      return Mode.getCharCountIndicator(mode, version) + 4;
    }
    function getTotalBitsFromDataArray(segments, version) {
      let totalBits = 0;
      segments.forEach(function(data) {
        const reservedBits = getReservedBitsCount(data.mode, version);
        totalBits += reservedBits + data.getBitsLength();
      });
      return totalBits;
    }
    function getBestVersionForMixedData(segments, errorCorrectionLevel) {
      for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
        const length = getTotalBitsFromDataArray(segments, currentVersion);
        if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {
          return currentVersion;
        }
      }
      return void 0;
    }
    exports.from = function from(value, defaultValue2) {
      if (VersionCheck.isValid(value)) {
        return parseInt(value, 10);
      }
      return defaultValue2;
    };
    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {
      if (!VersionCheck.isValid(version)) {
        throw new Error("Invalid QR Code version");
      }
      if (typeof mode === "undefined")
        mode = Mode.BYTE;
      const totalCodewords = Utils.getSymbolTotalCodewords(version);
      const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);
      const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (mode === Mode.MIXED)
        return dataTotalCodewordsBits;
      const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);
      switch (mode) {
        case Mode.NUMERIC:
          return Math.floor(usableBits / 10 * 3);
        case Mode.ALPHANUMERIC:
          return Math.floor(usableBits / 11 * 2);
        case Mode.KANJI:
          return Math.floor(usableBits / 13);
        case Mode.BYTE:
        default:
          return Math.floor(usableBits / 8);
      }
    };
    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {
      let seg;
      const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);
      if (Array.isArray(data)) {
        if (data.length > 1) {
          return getBestVersionForMixedData(data, ecl);
        }
        if (data.length === 0) {
          return 1;
        }
        seg = data[0];
      } else {
        seg = data;
      }
      return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
    };
    exports.getEncodedBits = function getEncodedBits(version) {
      if (!VersionCheck.isValid(version) || version < 7) {
        throw new Error("Invalid QR Code version");
      }
      let d = version << 12;
      while (Utils.getBCHDigit(d) - G18_BCH >= 0) {
        d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;
      }
      return version << 12 | d;
    };
  }
});

// node_modules/qrcode/lib/core/format-info.js
var require_format_info = __commonJS({
  "node_modules/qrcode/lib/core/format-info.js"(exports) {
    var Utils = require_utils();
    var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
    var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
    var G15_BCH = Utils.getBCHDigit(G15);
    exports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {
      const data = errorCorrectionLevel.bit << 3 | mask;
      let d = data << 10;
      while (Utils.getBCHDigit(d) - G15_BCH >= 0) {
        d ^= G15 << Utils.getBCHDigit(d) - G15_BCH;
      }
      return (data << 10 | d) ^ G15_MASK;
    };
  }
});

// node_modules/qrcode/lib/core/numeric-data.js
var require_numeric_data = __commonJS({
  "node_modules/qrcode/lib/core/numeric-data.js"(exports, module) {
    var Mode = require_mode();
    function NumericData(data) {
      this.mode = Mode.NUMERIC;
      this.data = data.toString();
    }
    NumericData.getBitsLength = function getBitsLength(length) {
      return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);
    };
    NumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    NumericData.prototype.getBitsLength = function getBitsLength() {
      return NumericData.getBitsLength(this.data.length);
    };
    NumericData.prototype.write = function write(bitBuffer) {
      let i, group, value;
      for (i = 0; i + 3 <= this.data.length; i += 3) {
        group = this.data.substr(i, 3);
        value = parseInt(group, 10);
        bitBuffer.put(value, 10);
      }
      const remainingNum = this.data.length - i;
      if (remainingNum > 0) {
        group = this.data.substr(i);
        value = parseInt(group, 10);
        bitBuffer.put(value, remainingNum * 3 + 1);
      }
    };
    module.exports = NumericData;
  }
});

// node_modules/qrcode/lib/core/alphanumeric-data.js
var require_alphanumeric_data = __commonJS({
  "node_modules/qrcode/lib/core/alphanumeric-data.js"(exports, module) {
    var Mode = require_mode();
    var ALPHA_NUM_CHARS = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      " ",
      "$",
      "%",
      "*",
      "+",
      "-",
      ".",
      "/",
      ":"
    ];
    function AlphanumericData(data) {
      this.mode = Mode.ALPHANUMERIC;
      this.data = data;
    }
    AlphanumericData.getBitsLength = function getBitsLength(length) {
      return 11 * Math.floor(length / 2) + 6 * (length % 2);
    };
    AlphanumericData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    AlphanumericData.prototype.getBitsLength = function getBitsLength() {
      return AlphanumericData.getBitsLength(this.data.length);
    };
    AlphanumericData.prototype.write = function write(bitBuffer) {
      let i;
      for (i = 0; i + 2 <= this.data.length; i += 2) {
        let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;
        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);
        bitBuffer.put(value, 11);
      }
      if (this.data.length % 2) {
        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);
      }
    };
    module.exports = AlphanumericData;
  }
});

// node_modules/encode-utf8/index.js
var require_encode_utf8 = __commonJS({
  "node_modules/encode-utf8/index.js"(exports, module) {
    "use strict";
    module.exports = function encodeUtf8(input) {
      var result = [];
      var size2 = input.length;
      for (var index2 = 0; index2 < size2; index2++) {
        var point = input.charCodeAt(index2);
        if (point >= 55296 && point <= 56319 && size2 > index2 + 1) {
          var second = input.charCodeAt(index2 + 1);
          if (second >= 56320 && second <= 57343) {
            point = (point - 55296) * 1024 + second - 56320 + 65536;
            index2 += 1;
          }
        }
        if (point < 128) {
          result.push(point);
          continue;
        }
        if (point < 2048) {
          result.push(point >> 6 | 192);
          result.push(point & 63 | 128);
          continue;
        }
        if (point < 55296 || point >= 57344 && point < 65536) {
          result.push(point >> 12 | 224);
          result.push(point >> 6 & 63 | 128);
          result.push(point & 63 | 128);
          continue;
        }
        if (point >= 65536 && point <= 1114111) {
          result.push(point >> 18 | 240);
          result.push(point >> 12 & 63 | 128);
          result.push(point >> 6 & 63 | 128);
          result.push(point & 63 | 128);
          continue;
        }
        result.push(239, 191, 189);
      }
      return new Uint8Array(result).buffer;
    };
  }
});

// node_modules/qrcode/lib/core/byte-data.js
var require_byte_data = __commonJS({
  "node_modules/qrcode/lib/core/byte-data.js"(exports, module) {
    var encodeUtf8 = require_encode_utf8();
    var Mode = require_mode();
    function ByteData(data) {
      this.mode = Mode.BYTE;
      this.data = new Uint8Array(encodeUtf8(data));
    }
    ByteData.getBitsLength = function getBitsLength(length) {
      return length * 8;
    };
    ByteData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    ByteData.prototype.getBitsLength = function getBitsLength() {
      return ByteData.getBitsLength(this.data.length);
    };
    ByteData.prototype.write = function(bitBuffer) {
      for (let i = 0, l = this.data.length; i < l; i++) {
        bitBuffer.put(this.data[i], 8);
      }
    };
    module.exports = ByteData;
  }
});

// node_modules/qrcode/lib/core/kanji-data.js
var require_kanji_data = __commonJS({
  "node_modules/qrcode/lib/core/kanji-data.js"(exports, module) {
    var Mode = require_mode();
    var Utils = require_utils();
    function KanjiData(data) {
      this.mode = Mode.KANJI;
      this.data = data;
    }
    KanjiData.getBitsLength = function getBitsLength(length) {
      return length * 13;
    };
    KanjiData.prototype.getLength = function getLength() {
      return this.data.length;
    };
    KanjiData.prototype.getBitsLength = function getBitsLength() {
      return KanjiData.getBitsLength(this.data.length);
    };
    KanjiData.prototype.write = function(bitBuffer) {
      let i;
      for (i = 0; i < this.data.length; i++) {
        let value = Utils.toSJIS(this.data[i]);
        if (value >= 33088 && value <= 40956) {
          value -= 33088;
        } else if (value >= 57408 && value <= 60351) {
          value -= 49472;
        } else {
          throw new Error(
            "Invalid SJIS character: " + this.data[i] + "\nMake sure your charset is UTF-8"
          );
        }
        value = (value >>> 8 & 255) * 192 + (value & 255);
        bitBuffer.put(value, 13);
      }
    };
    module.exports = KanjiData;
  }
});

// node_modules/dijkstrajs/dijkstra.js
var require_dijkstra = __commonJS({
  "node_modules/dijkstrajs/dijkstra.js"(exports, module) {
    "use strict";
    var dijkstra = {
      single_source_shortest_paths: function(graph, s, d) {
        var predecessors = {};
        var costs = {};
        costs[s] = 0;
        var open = dijkstra.PriorityQueue.make();
        open.push(s, 0);
        var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;
        while (!open.empty()) {
          closest = open.pop();
          u = closest.value;
          cost_of_s_to_u = closest.cost;
          adjacent_nodes = graph[u] || {};
          for (v in adjacent_nodes) {
            if (adjacent_nodes.hasOwnProperty(v)) {
              cost_of_e = adjacent_nodes[v];
              cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;
              cost_of_s_to_v = costs[v];
              first_visit = typeof costs[v] === "undefined";
              if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {
                costs[v] = cost_of_s_to_u_plus_cost_of_e;
                open.push(v, cost_of_s_to_u_plus_cost_of_e);
                predecessors[v] = u;
              }
            }
          }
        }
        if (typeof d !== "undefined" && typeof costs[d] === "undefined") {
          var msg = ["Could not find a path from ", s, " to ", d, "."].join("");
          throw new Error(msg);
        }
        return predecessors;
      },
      extract_shortest_path_from_predecessor_list: function(predecessors, d) {
        var nodes = [];
        var u = d;
        var predecessor;
        while (u) {
          nodes.push(u);
          predecessor = predecessors[u];
          u = predecessors[u];
        }
        nodes.reverse();
        return nodes;
      },
      find_path: function(graph, s, d) {
        var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);
        return dijkstra.extract_shortest_path_from_predecessor_list(
          predecessors,
          d
        );
      },
      /**
       * A very naive priority queue implementation.
       */
      PriorityQueue: {
        make: function(opts) {
          var T = dijkstra.PriorityQueue, t = {}, key;
          opts = opts || {};
          for (key in T) {
            if (T.hasOwnProperty(key)) {
              t[key] = T[key];
            }
          }
          t.queue = [];
          t.sorter = opts.sorter || T.default_sorter;
          return t;
        },
        default_sorter: function(a, b) {
          return a.cost - b.cost;
        },
        /**
         * Add a new item to the queue and ensure the highest priority element
         * is at the front of the queue.
         */
        push: function(value, cost) {
          var item = { value, cost };
          this.queue.push(item);
          this.queue.sort(this.sorter);
        },
        /**
         * Return the highest priority element in the queue.
         */
        pop: function() {
          return this.queue.shift();
        },
        empty: function() {
          return this.queue.length === 0;
        }
      }
    };
    if (typeof module !== "undefined") {
      module.exports = dijkstra;
    }
  }
});

// node_modules/qrcode/lib/core/segments.js
var require_segments = __commonJS({
  "node_modules/qrcode/lib/core/segments.js"(exports) {
    var Mode = require_mode();
    var NumericData = require_numeric_data();
    var AlphanumericData = require_alphanumeric_data();
    var ByteData = require_byte_data();
    var KanjiData = require_kanji_data();
    var Regex = require_regex();
    var Utils = require_utils();
    var dijkstra = require_dijkstra();
    function getStringByteLength(str) {
      return unescape(encodeURIComponent(str)).length;
    }
    function getSegments(regex, mode, str) {
      const segments = [];
      let result;
      while ((result = regex.exec(str)) !== null) {
        segments.push({
          data: result[0],
          index: result.index,
          mode,
          length: result[0].length
        });
      }
      return segments;
    }
    function getSegmentsFromString(dataStr) {
      const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);
      const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
      let byteSegs;
      let kanjiSegs;
      if (Utils.isKanjiModeEnabled()) {
        byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);
        kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);
      } else {
        byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);
        kanjiSegs = [];
      }
      const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
      return segs.sort(function(s1, s2) {
        return s1.index - s2.index;
      }).map(function(obj) {
        return {
          data: obj.data,
          mode: obj.mode,
          length: obj.length
        };
      });
    }
    function getSegmentBitsLength(length, mode) {
      switch (mode) {
        case Mode.NUMERIC:
          return NumericData.getBitsLength(length);
        case Mode.ALPHANUMERIC:
          return AlphanumericData.getBitsLength(length);
        case Mode.KANJI:
          return KanjiData.getBitsLength(length);
        case Mode.BYTE:
          return ByteData.getBitsLength(length);
      }
    }
    function mergeSegments(segs) {
      return segs.reduce(function(acc, curr) {
        const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
        if (prevSeg && prevSeg.mode === curr.mode) {
          acc[acc.length - 1].data += curr.data;
          return acc;
        }
        acc.push(curr);
        return acc;
      }, []);
    }
    function buildNodes(segs) {
      const nodes = [];
      for (let i = 0; i < segs.length; i++) {
        const seg = segs[i];
        switch (seg.mode) {
          case Mode.NUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.ALPHANUMERIC:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: seg.length }
            ]);
            break;
          case Mode.KANJI:
            nodes.push([
              seg,
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
            break;
          case Mode.BYTE:
            nodes.push([
              { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }
            ]);
        }
      }
      return nodes;
    }
    function buildGraph(nodes, version) {
      const table = {};
      const graph = { start: {} };
      let prevNodeIds = ["start"];
      for (let i = 0; i < nodes.length; i++) {
        const nodeGroup = nodes[i];
        const currentNodeIds = [];
        for (let j = 0; j < nodeGroup.length; j++) {
          const node = nodeGroup[j];
          const key = "" + i + j;
          currentNodeIds.push(key);
          table[key] = { node, lastCount: 0 };
          graph[key] = {};
          for (let n = 0; n < prevNodeIds.length; n++) {
            const prevNodeId = prevNodeIds[n];
            if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {
              graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);
              table[prevNodeId].lastCount += node.length;
            } else {
              if (table[prevNodeId])
                table[prevNodeId].lastCount = node.length;
              graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version);
            }
          }
        }
        prevNodeIds = currentNodeIds;
      }
      for (let n = 0; n < prevNodeIds.length; n++) {
        graph[prevNodeIds[n]].end = 0;
      }
      return { map: graph, table };
    }
    function buildSingleSegment(data, modesHint) {
      let mode;
      const bestMode = Mode.getBestModeForData(data);
      mode = Mode.from(modesHint, bestMode);
      if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {
        throw new Error('"' + data + '" cannot be encoded with mode ' + Mode.toString(mode) + ".\n Suggested mode is: " + Mode.toString(bestMode));
      }
      if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {
        mode = Mode.BYTE;
      }
      switch (mode) {
        case Mode.NUMERIC:
          return new NumericData(data);
        case Mode.ALPHANUMERIC:
          return new AlphanumericData(data);
        case Mode.KANJI:
          return new KanjiData(data);
        case Mode.BYTE:
          return new ByteData(data);
      }
    }
    exports.fromArray = function fromArray(array) {
      return array.reduce(function(acc, seg) {
        if (typeof seg === "string") {
          acc.push(buildSingleSegment(seg, null));
        } else if (seg.data) {
          acc.push(buildSingleSegment(seg.data, seg.mode));
        }
        return acc;
      }, []);
    };
    exports.fromString = function fromString(data, version) {
      const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());
      const nodes = buildNodes(segs);
      const graph = buildGraph(nodes, version);
      const path = dijkstra.find_path(graph.map, "start", "end");
      const optimizedSegs = [];
      for (let i = 1; i < path.length - 1; i++) {
        optimizedSegs.push(graph.table[path[i]].node);
      }
      return exports.fromArray(mergeSegments(optimizedSegs));
    };
    exports.rawSplit = function rawSplit(data) {
      return exports.fromArray(
        getSegmentsFromString(data, Utils.isKanjiModeEnabled())
      );
    };
  }
});

// node_modules/qrcode/lib/core/qrcode.js
var require_qrcode = __commonJS({
  "node_modules/qrcode/lib/core/qrcode.js"(exports) {
    var Utils = require_utils();
    var ECLevel = require_error_correction_level();
    var BitBuffer = require_bit_buffer();
    var BitMatrix = require_bit_matrix();
    var AlignmentPattern = require_alignment_pattern();
    var FinderPattern = require_finder_pattern();
    var MaskPattern = require_mask_pattern();
    var ECCode = require_error_correction_code();
    var ReedSolomonEncoder = require_reed_solomon_encoder();
    var Version = require_version();
    var FormatInfo = require_format_info();
    var Mode = require_mode();
    var Segments = require_segments();
    function setupFinderPattern(matrix, version) {
      const size2 = matrix.size;
      const pos = FinderPattern.getPositions(version);
      for (let i = 0; i < pos.length; i++) {
        const row = pos[i][0];
        const col = pos[i][1];
        for (let r = -1; r <= 7; r++) {
          if (row + r <= -1 || size2 <= row + r)
            continue;
          for (let c = -1; c <= 7; c++) {
            if (col + c <= -1 || size2 <= col + c)
              continue;
            if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {
              matrix.set(row + r, col + c, true, true);
            } else {
              matrix.set(row + r, col + c, false, true);
            }
          }
        }
      }
    }
    function setupTimingPattern(matrix) {
      const size2 = matrix.size;
      for (let r = 8; r < size2 - 8; r++) {
        const value = r % 2 === 0;
        matrix.set(r, 6, value, true);
        matrix.set(6, r, value, true);
      }
    }
    function setupAlignmentPattern(matrix, version) {
      const pos = AlignmentPattern.getPositions(version);
      for (let i = 0; i < pos.length; i++) {
        const row = pos[i][0];
        const col = pos[i][1];
        for (let r = -2; r <= 2; r++) {
          for (let c = -2; c <= 2; c++) {
            if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {
              matrix.set(row + r, col + c, true, true);
            } else {
              matrix.set(row + r, col + c, false, true);
            }
          }
        }
      }
    }
    function setupVersionInfo(matrix, version) {
      const size2 = matrix.size;
      const bits = Version.getEncodedBits(version);
      let row, col, mod;
      for (let i = 0; i < 18; i++) {
        row = Math.floor(i / 3);
        col = i % 3 + size2 - 8 - 3;
        mod = (bits >> i & 1) === 1;
        matrix.set(row, col, mod, true);
        matrix.set(col, row, mod, true);
      }
    }
    function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
      const size2 = matrix.size;
      const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
      let i, mod;
      for (i = 0; i < 15; i++) {
        mod = (bits >> i & 1) === 1;
        if (i < 6) {
          matrix.set(i, 8, mod, true);
        } else if (i < 8) {
          matrix.set(i + 1, 8, mod, true);
        } else {
          matrix.set(size2 - 15 + i, 8, mod, true);
        }
        if (i < 8) {
          matrix.set(8, size2 - i - 1, mod, true);
        } else if (i < 9) {
          matrix.set(8, 15 - i - 1 + 1, mod, true);
        } else {
          matrix.set(8, 15 - i - 1, mod, true);
        }
      }
      matrix.set(size2 - 8, 8, 1, true);
    }
    function setupData(matrix, data) {
      const size2 = matrix.size;
      let inc = -1;
      let row = size2 - 1;
      let bitIndex = 7;
      let byteIndex = 0;
      for (let col = size2 - 1; col > 0; col -= 2) {
        if (col === 6)
          col--;
        while (true) {
          for (let c = 0; c < 2; c++) {
            if (!matrix.isReserved(row, col - c)) {
              let dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) === 1;
              }
              matrix.set(row, col - c, dark);
              bitIndex--;
              if (bitIndex === -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || size2 <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
    function createData(version, errorCorrectionLevel, segments) {
      const buffer = new BitBuffer();
      segments.forEach(function(data) {
        buffer.put(data.mode.bit, 4);
        buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version));
        data.write(buffer);
      });
      const totalCodewords = Utils.getSymbolTotalCodewords(version);
      const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);
      const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
      if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
        buffer.put(0, 4);
      }
      while (buffer.getLengthInBits() % 8 !== 0) {
        buffer.putBit(0);
      }
      const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;
      for (let i = 0; i < remainingByte; i++) {
        buffer.put(i % 2 ? 17 : 236, 8);
      }
      return createCodewords(buffer, version, errorCorrectionLevel);
    }
    function createCodewords(bitBuffer, version, errorCorrectionLevel) {
      const totalCodewords = Utils.getSymbolTotalCodewords(version);
      const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);
      const dataTotalCodewords = totalCodewords - ecTotalCodewords;
      const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel);
      const blocksInGroup2 = totalCodewords % ecTotalBlocks;
      const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
      const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
      const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
      const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;
      const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;
      const rs = new ReedSolomonEncoder(ecCount);
      let offset2 = 0;
      const dcData = new Array(ecTotalBlocks);
      const ecData = new Array(ecTotalBlocks);
      let maxDataSize = 0;
      const buffer = new Uint8Array(bitBuffer.buffer);
      for (let b = 0; b < ecTotalBlocks; b++) {
        const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;
        dcData[b] = buffer.slice(offset2, offset2 + dataSize);
        ecData[b] = rs.encode(dcData[b]);
        offset2 += dataSize;
        maxDataSize = Math.max(maxDataSize, dataSize);
      }
      const data = new Uint8Array(totalCodewords);
      let index2 = 0;
      let i, r;
      for (i = 0; i < maxDataSize; i++) {
        for (r = 0; r < ecTotalBlocks; r++) {
          if (i < dcData[r].length) {
            data[index2++] = dcData[r][i];
          }
        }
      }
      for (i = 0; i < ecCount; i++) {
        for (r = 0; r < ecTotalBlocks; r++) {
          data[index2++] = ecData[r][i];
        }
      }
      return data;
    }
    function createSymbol(data, version, errorCorrectionLevel, maskPattern) {
      let segments;
      if (Array.isArray(data)) {
        segments = Segments.fromArray(data);
      } else if (typeof data === "string") {
        let estimatedVersion = version;
        if (!estimatedVersion) {
          const rawSegments = Segments.rawSplit(data);
          estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);
        }
        segments = Segments.fromString(data, estimatedVersion || 40);
      } else {
        throw new Error("Invalid data");
      }
      const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);
      if (!bestVersion) {
        throw new Error("The amount of data is too big to be stored in a QR Code");
      }
      if (!version) {
        version = bestVersion;
      } else if (version < bestVersion) {
        throw new Error(
          "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " + bestVersion + ".\n"
        );
      }
      const dataBits = createData(version, errorCorrectionLevel, segments);
      const moduleCount = Utils.getSymbolSize(version);
      const modules = new BitMatrix(moduleCount);
      setupFinderPattern(modules, version);
      setupTimingPattern(modules);
      setupAlignmentPattern(modules, version);
      setupFormatInfo(modules, errorCorrectionLevel, 0);
      if (version >= 7) {
        setupVersionInfo(modules, version);
      }
      setupData(modules, dataBits);
      if (isNaN(maskPattern)) {
        maskPattern = MaskPattern.getBestMask(
          modules,
          setupFormatInfo.bind(null, modules, errorCorrectionLevel)
        );
      }
      MaskPattern.applyMask(maskPattern, modules);
      setupFormatInfo(modules, errorCorrectionLevel, maskPattern);
      return {
        modules,
        version,
        errorCorrectionLevel,
        maskPattern,
        segments
      };
    }
    exports.create = function create(data, options) {
      if (typeof data === "undefined" || data === "") {
        throw new Error("No input text");
      }
      let errorCorrectionLevel = ECLevel.M;
      let version;
      let mask;
      if (typeof options !== "undefined") {
        errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);
        version = Version.from(options.version);
        mask = MaskPattern.from(options.maskPattern);
        if (options.toSJISFunc) {
          Utils.setToSJISFunction(options.toSJISFunc);
        }
      }
      return createSymbol(data, version, errorCorrectionLevel, mask);
    };
  }
});

// node_modules/qrcode/lib/renderer/utils.js
var require_utils2 = __commonJS({
  "node_modules/qrcode/lib/renderer/utils.js"(exports) {
    function hex2rgba(hex) {
      if (typeof hex === "number") {
        hex = hex.toString();
      }
      if (typeof hex !== "string") {
        throw new Error("Color should be defined as hex string");
      }
      let hexCode = hex.slice().replace("#", "").split("");
      if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
        throw new Error("Invalid hex color: " + hex);
      }
      if (hexCode.length === 3 || hexCode.length === 4) {
        hexCode = Array.prototype.concat.apply([], hexCode.map(function(c) {
          return [c, c];
        }));
      }
      if (hexCode.length === 6)
        hexCode.push("F", "F");
      const hexValue = parseInt(hexCode.join(""), 16);
      return {
        r: hexValue >> 24 & 255,
        g: hexValue >> 16 & 255,
        b: hexValue >> 8 & 255,
        a: hexValue & 255,
        hex: "#" + hexCode.slice(0, 6).join("")
      };
    }
    exports.getOptions = function getOptions(options) {
      if (!options)
        options = {};
      if (!options.color)
        options.color = {};
      const margin = typeof options.margin === "undefined" || options.margin === null || options.margin < 0 ? 4 : options.margin;
      const width = options.width && options.width >= 21 ? options.width : void 0;
      const scale = options.scale || 4;
      return {
        width,
        scale: width ? 4 : scale,
        margin,
        color: {
          dark: hex2rgba(options.color.dark || "#000000ff"),
          light: hex2rgba(options.color.light || "#ffffffff")
        },
        type: options.type,
        rendererOpts: options.rendererOpts || {}
      };
    };
    exports.getScale = function getScale(qrSize, opts) {
      return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
    };
    exports.getImageWidth = function getImageWidth(qrSize, opts) {
      const scale = exports.getScale(qrSize, opts);
      return Math.floor((qrSize + opts.margin * 2) * scale);
    };
    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {
      const size2 = qr.modules.size;
      const data = qr.modules.data;
      const scale = exports.getScale(size2, opts);
      const symbolSize = Math.floor((size2 + opts.margin * 2) * scale);
      const scaledMargin = opts.margin * scale;
      const palette = [opts.color.light, opts.color.dark];
      for (let i = 0; i < symbolSize; i++) {
        for (let j = 0; j < symbolSize; j++) {
          let posDst = (i * symbolSize + j) * 4;
          let pxColor = opts.color.light;
          if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {
            const iSrc = Math.floor((i - scaledMargin) / scale);
            const jSrc = Math.floor((j - scaledMargin) / scale);
            pxColor = palette[data[iSrc * size2 + jSrc] ? 1 : 0];
          }
          imgData[posDst++] = pxColor.r;
          imgData[posDst++] = pxColor.g;
          imgData[posDst++] = pxColor.b;
          imgData[posDst] = pxColor.a;
        }
      }
    };
  }
});

// node_modules/qrcode/lib/renderer/canvas.js
var require_canvas = __commonJS({
  "node_modules/qrcode/lib/renderer/canvas.js"(exports) {
    var Utils = require_utils2();
    function clearCanvas(ctx, canvas, size2) {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      if (!canvas.style)
        canvas.style = {};
      canvas.height = size2;
      canvas.width = size2;
      canvas.style.height = size2 + "px";
      canvas.style.width = size2 + "px";
    }
    function getCanvasElement() {
      try {
        return document.createElement("canvas");
      } catch (e) {
        throw new Error("You need to specify a canvas element");
      }
    }
    exports.render = function render(qrData, canvas, options) {
      let opts = options;
      let canvasEl = canvas;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!canvas) {
        canvasEl = getCanvasElement();
      }
      opts = Utils.getOptions(opts);
      const size2 = Utils.getImageWidth(qrData.modules.size, opts);
      const ctx = canvasEl.getContext("2d");
      const image = ctx.createImageData(size2, size2);
      Utils.qrToImageData(image.data, qrData, opts);
      clearCanvas(ctx, canvasEl, size2);
      ctx.putImageData(image, 0, 0);
      return canvasEl;
    };
    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {
      let opts = options;
      if (typeof opts === "undefined" && (!canvas || !canvas.getContext)) {
        opts = canvas;
        canvas = void 0;
      }
      if (!opts)
        opts = {};
      const canvasEl = exports.render(qrData, canvas, opts);
      const type = opts.type || "image/png";
      const rendererOpts = opts.rendererOpts || {};
      return canvasEl.toDataURL(type, rendererOpts.quality);
    };
  }
});

// node_modules/qrcode/lib/renderer/svg-tag.js
var require_svg_tag = __commonJS({
  "node_modules/qrcode/lib/renderer/svg-tag.js"(exports) {
    var Utils = require_utils2();
    function getColorAttrib(color, attrib) {
      const alpha = color.a / 255;
      const str = attrib + '="' + color.hex + '"';
      return alpha < 1 ? str + " " + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
    }
    function svgCmd(cmd, x, y) {
      let str = cmd + x;
      if (typeof y !== "undefined")
        str += " " + y;
      return str;
    }
    function qrToPath(data, size2, margin) {
      let path = "";
      let moveBy = 0;
      let newRow = false;
      let lineLength = 0;
      for (let i = 0; i < data.length; i++) {
        const col = Math.floor(i % size2);
        const row = Math.floor(i / size2);
        if (!col && !newRow)
          newRow = true;
        if (data[i]) {
          lineLength++;
          if (!(i > 0 && col > 0 && data[i - 1])) {
            path += newRow ? svgCmd("M", col + margin, 0.5 + row + margin) : svgCmd("m", moveBy, 0);
            moveBy = 0;
            newRow = false;
          }
          if (!(col + 1 < size2 && data[i + 1])) {
            path += svgCmd("h", lineLength);
            lineLength = 0;
          }
        } else {
          moveBy++;
        }
      }
      return path;
    }
    exports.render = function render(qrData, options, cb) {
      const opts = Utils.getOptions(options);
      const size2 = qrData.modules.size;
      const data = qrData.modules.data;
      const qrcodesize = size2 + opts.margin * 2;
      const bg = !opts.color.light.a ? "" : "<path " + getColorAttrib(opts.color.light, "fill") + ' d="M0 0h' + qrcodesize + "v" + qrcodesize + 'H0z"/>';
      const path = "<path " + getColorAttrib(opts.color.dark, "stroke") + ' d="' + qrToPath(data, size2, opts.margin) + '"/>';
      const viewBox = 'viewBox="0 0 ' + qrcodesize + " " + qrcodesize + '"';
      const width = !opts.width ? "" : 'width="' + opts.width + '" height="' + opts.width + '" ';
      const svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + "</svg>\n";
      if (typeof cb === "function") {
        cb(null, svgTag);
      }
      return svgTag;
    };
  }
});

// node_modules/qrcode/lib/browser.js
var require_browser = __commonJS({
  "node_modules/qrcode/lib/browser.js"(exports) {
    var canPromise = require_can_promise();
    var QRCode2 = require_qrcode();
    var CanvasRenderer = require_canvas();
    var SvgRenderer = require_svg_tag();
    function renderCanvas(renderFunc, canvas, text, opts, cb) {
      const args = [].slice.call(arguments, 1);
      const argsNum = args.length;
      const isLastArgCb = typeof args[argsNum - 1] === "function";
      if (!isLastArgCb && !canPromise()) {
        throw new Error("Callback required as last argument");
      }
      if (isLastArgCb) {
        if (argsNum < 2) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 2) {
          cb = text;
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 3) {
          if (canvas.getContext && typeof cb === "undefined") {
            cb = opts;
            opts = void 0;
          } else {
            cb = opts;
            opts = text;
            text = canvas;
            canvas = void 0;
          }
        }
      } else {
        if (argsNum < 1) {
          throw new Error("Too few arguments provided");
        }
        if (argsNum === 1) {
          text = canvas;
          canvas = opts = void 0;
        } else if (argsNum === 2 && !canvas.getContext) {
          opts = text;
          text = canvas;
          canvas = void 0;
        }
        return new Promise(function(resolve, reject) {
          try {
            const data = QRCode2.create(text, opts);
            resolve(renderFunc(data, canvas, opts));
          } catch (e) {
            reject(e);
          }
        });
      }
      try {
        const data = QRCode2.create(text, opts);
        cb(null, renderFunc(data, canvas, opts));
      } catch (e) {
        cb(e);
      }
    }
    exports.create = QRCode2.create;
    exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
    exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);
    exports.toString = renderCanvas.bind(null, function(data, _, opts) {
      return SvgRenderer.render(data, opts);
    });
  }
});

// node_modules/@aws-amplify/ui-react/dist/esm/components/index.mjs
var components_exports = {};
__export(components_exports, {
  AccountSettings: () => AccountSettings,
  Authenticator: () => Authenticator,
  ThemeProvider: () => ThemeProvider,
  useAuthenticator: () => useAuthenticator,
  withAuthenticator: () => withAuthenticator
});

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/ChangePassword/ChangePassword.mjs
var import_react35 = __toESM(require_react(), 1);
var import_isEqual = __toESM(require_isEqual(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/hooks/useAuth.mjs
var React = __toESM(require_react(), 1);
var useAuth = () => {
  const [result, setResult] = React.useState({
    error: void 0,
    isLoading: true,
    user: void 0
  });
  const fetchCurrentUser = React.useCallback(async () => {
    setResult((prevResult) => ({ ...prevResult, isLoading: true }));
    try {
      const user = await getCurrentUser();
      setResult({ user, isLoading: false });
    } catch (e) {
      const error = e;
      setResult({ error, isLoading: false });
    }
  }, []);
  const handleAuth = React.useCallback(({ payload }) => {
    switch (payload.event) {
      case "signedIn":
      case "signUp":
      case "autoSignIn": {
        setResult({ user: payload.data, isLoading: false });
        break;
      }
      case "signedOut": {
        setResult({ user: void 0, isLoading: false });
        break;
      }
      case "tokenRefresh_failure":
      case "signIn_failure": {
        setResult({ error: payload.data, isLoading: false });
        break;
      }
      case "autoSignIn_failure": {
        setResult({ error: new Error(payload.message), isLoading: false });
        break;
      }
      case "tokenRefresh": {
        fetchCurrentUser();
        break;
      }
    }
  }, [fetchCurrentUser]);
  React.useEffect(() => {
    const unsubscribe = Hub.listen("auth", handleAuth, "useAuth");
    fetchCurrentUser();
    return unsubscribe;
  }, [handleAuth, fetchCurrentUser]);
  return {
    ...result,
    /** @deprecated Fetch is handled automatically, do not use this directly */
    fetch: fetchCurrentUser
  };
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/runtime/constants.mjs
var NETWORK_ERROR_MESSAGE = "Network Error";
var NETWORK_ERROR_CODE = "ECONNABORTED";
var ABORT_ERROR_MESSAGE = "Request aborted";
var ABORT_ERROR_CODE = "ERR_ABORTED";
var CANCELED_ERROR_MESSAGE = "canceled";
var CANCELED_ERROR_CODE = "ERR_CANCELED";
var CONTENT_SHA256_HEADER = "x-amz-content-sha256";

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/runtime/contentSha256middleware.mjs
var contentSha256MiddlewareFactory = () => (next) => async function contentSha256Middleware(request) {
  if (request.headers[CONTENT_SHA256_HEADER]) {
    return next(request);
  } else {
    const hash2 = await getHashedPayload(request.body);
    request.headers[CONTENT_SHA256_HEADER] = hash2;
    return next(request);
  }
};

// node_modules/@aws-amplify/storage/dist/esm/errors/StorageError.mjs
var StorageError = class _StorageError extends AmplifyError {
  constructor(params) {
    super(params);
    this.constructor = _StorageError;
    Object.setPrototypeOf(this, _StorageError.prototype);
  }
};

// node_modules/@aws-amplify/storage/dist/esm/errors/CanceledError.mjs
var CanceledError = class _CanceledError extends StorageError {
  constructor(params = {}) {
    super({
      name: "CanceledError",
      message: "Upload is canceled by user",
      ...params
    });
    this.constructor = _CanceledError;
    Object.setPrototypeOf(this, _CanceledError.prototype);
  }
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/runtime/xhrTransferHandler.mjs
var logger = new ConsoleLogger("xhr-http-handler");
var xhrTransferHandler = (request, options) => {
  const { url, method, headers, body } = request;
  const { onDownloadProgress, onUploadProgress, responseType, abortSignal } = options;
  return new Promise((resolve, reject) => {
    let xhr = new XMLHttpRequest();
    xhr.open(method.toUpperCase(), url.toString());
    Object.entries(headers).filter(([header]) => !FORBIDDEN_HEADERS.includes(header)).forEach(([header, value]) => {
      xhr.setRequestHeader(header, value);
    });
    xhr.responseType = responseType;
    if (onDownloadProgress) {
      xhr.addEventListener("progress", (event) => {
        onDownloadProgress(convertToTransferProgressEvent(event));
        logger.debug(event);
      });
    }
    if (onUploadProgress) {
      xhr.upload.addEventListener("progress", (event) => {
        onUploadProgress(convertToTransferProgressEvent(event));
        logger.debug(event);
      });
    }
    xhr.addEventListener("error", () => {
      const networkError = buildHandlerError(NETWORK_ERROR_MESSAGE, NETWORK_ERROR_CODE);
      logger.error(NETWORK_ERROR_MESSAGE);
      reject(networkError);
      xhr = null;
    });
    xhr.addEventListener("abort", () => {
      if (!xhr || (abortSignal == null ? void 0 : abortSignal.aborted))
        return;
      const error = buildHandlerError(ABORT_ERROR_MESSAGE, ABORT_ERROR_CODE);
      logger.error(ABORT_ERROR_MESSAGE);
      reject(error);
      xhr = null;
    });
    xhr.addEventListener("readystatechange", () => {
      if (!xhr || xhr.readyState !== xhr.DONE) {
        return;
      }
      const onloadend = () => {
        if (!xhr)
          return;
        const responseHeaders = convertResponseHeaders(xhr.getAllResponseHeaders());
        const { responseType: loadEndResponseType } = xhr;
        const responseBlob = xhr.response;
        const responseText = loadEndResponseType === "text" ? xhr.responseText : "";
        const bodyMixIn = {
          blob: () => Promise.resolve(responseBlob),
          text: withMemoization(() => loadEndResponseType === "blob" ? readBlobAsText(responseBlob) : Promise.resolve(responseText)),
          json: () => Promise.reject(
            // S3 does not support JSON response. So fail-fast here with nicer error message.
            new Error("Parsing response to JSON is not implemented. Please use response.text() instead.")
          )
        };
        const response = {
          statusCode: xhr.status,
          headers: responseHeaders,
          // The xhr.responseType is only set to 'blob' for streaming binary S3 object data. The streaming data is
          // exposed via public interface of Storage.get(). So we need to return the response as a Blob object for
          // backward compatibility. In other cases, the response payload is only used internally, we return it is
          // {@link ResponseBodyMixin}
          body: xhr.responseType === "blob" ? Object.assign(responseBlob, bodyMixIn) : bodyMixIn
        };
        resolve(response);
        xhr = null;
      };
      setTimeout(onloadend);
    });
    if (abortSignal) {
      const onCanceled = () => {
        if (!xhr) {
          return;
        }
        const canceledError = new CanceledError({
          name: CANCELED_ERROR_CODE,
          message: CANCELED_ERROR_MESSAGE
        });
        reject(canceledError);
        xhr.abort();
        xhr = null;
      };
      abortSignal.aborted ? onCanceled() : abortSignal.addEventListener("abort", onCanceled);
    }
    if (typeof ReadableStream === "function" && body instanceof ReadableStream) {
      throw new Error("ReadableStream request payload is not supported.");
    }
    xhr.send(body ?? null);
  });
};
var convertToTransferProgressEvent = (event) => ({
  transferredBytes: event.loaded,
  totalBytes: event.lengthComputable ? event.total : void 0
});
var buildHandlerError = (message, name) => {
  const error = new Error(message);
  error.name = name;
  return error;
};
var convertResponseHeaders = (xhrHeaders) => {
  if (!xhrHeaders) {
    return {};
  }
  return xhrHeaders.split("\r\n").reduce((headerMap, line) => {
    const parts = line.split(": ");
    const header = parts.shift();
    const value = parts.join(": ");
    headerMap[header.toLowerCase()] = value;
    return headerMap;
  }, {});
};
var readBlobAsText = (blob) => {
  const reader = new FileReader();
  return new Promise((resolve, reject) => {
    reader.onloadend = () => {
      if (reader.readyState !== FileReader.DONE) {
        return;
      }
      resolve(reader.result);
    };
    reader.onerror = () => {
      reject(reader.error);
    };
    reader.readAsText(blob);
  });
};
var FORBIDDEN_HEADERS = ["host"];

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/runtime/s3TransferHandler/xhr.mjs
var s3TransferHandler = composeTransferHandler(xhrTransferHandler, [
  contentSha256MiddlewareFactory,
  userAgentMiddlewareFactory,
  retryMiddlewareFactory,
  signingMiddlewareFactory
]);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/uploadData/index.mjs
var import_fast_xml_parser15 = __toESM(require_fast_xml_parser(), 1);
var import_buffer15 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/errors/types/validation.mjs
var StorageValidationErrorCode;
(function(StorageValidationErrorCode2) {
  StorageValidationErrorCode2["NoCredentials"] = "NoCredentials";
  StorageValidationErrorCode2["NoIdentityId"] = "NoIdentityId";
  StorageValidationErrorCode2["NoKey"] = "NoKey";
  StorageValidationErrorCode2["NoSourceKey"] = "NoSourceKey";
  StorageValidationErrorCode2["NoDestinationKey"] = "NoDestinationKey";
  StorageValidationErrorCode2["NoBucket"] = "NoBucket";
  StorageValidationErrorCode2["NoRegion"] = "NoRegion";
  StorageValidationErrorCode2["UrlExpirationMaxLimitExceed"] = "UrlExpirationMaxLimitExceed";
  StorageValidationErrorCode2["ObjectIsTooLarge"] = "ObjectIsTooLarge";
  StorageValidationErrorCode2["InvalidUploadSource"] = "InvalidUploadSource";
})(StorageValidationErrorCode || (StorageValidationErrorCode = {}));
var validationErrorMap = {
  [StorageValidationErrorCode.NoCredentials]: {
    message: "Credentials should not be empty."
  },
  [StorageValidationErrorCode.NoIdentityId]: {
    message: "Missing identity ID when accessing objects in protected or private access level."
  },
  [StorageValidationErrorCode.NoKey]: {
    message: "Missing key in api call."
  },
  [StorageValidationErrorCode.NoSourceKey]: {
    message: "Missing source key in copy api call."
  },
  [StorageValidationErrorCode.NoDestinationKey]: {
    message: "Missing destination key in copy api call."
  },
  [StorageValidationErrorCode.NoBucket]: {
    message: "Missing bucket name while accessing object."
  },
  [StorageValidationErrorCode.NoRegion]: {
    message: "Missing region while accessing object."
  },
  [StorageValidationErrorCode.UrlExpirationMaxLimitExceed]: {
    message: "Url Expiration can not be greater than 7 Days."
  },
  [StorageValidationErrorCode.ObjectIsTooLarge]: {
    message: "Object size cannot not be greater than 5TB."
  },
  [StorageValidationErrorCode.InvalidUploadSource]: {
    message: "Upload source type can only be a `Blob`, `File`, `ArrayBuffer`, or `string`."
  }
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/constants.mjs
var MAX_URL_EXPIRATION = 7 * 24 * 60 * 60 * 1e3;
var MiB = 1024 * 1024;
var GiB = 1024 * MiB;
var TiB = 1024 * GiB;
var DEFAULT_PART_SIZE = 5 * MiB;
var MAX_OBJECT_SIZE = 5 * TiB;

// node_modules/@aws-amplify/storage/dist/esm/utils/logger.mjs
var logger2 = new ConsoleLogger("Storage");

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/md5.mjs
var import_fast_xml_parser = __toESM(require_fast_xml_parser(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/runtime/xmlParser/dom.mjs
var parser = {
  parse: (xmlStr) => {
    const domParser = new DOMParser();
    const xml = domParser.parseFromString(xmlStr, "text/xml");
    const parsedObj = parseXmlNode(xml);
    const rootKey = Object.keys(parsedObj)[0];
    return parsedObj[rootKey];
  }
};
var parseXmlNode = (node) => {
  var _a;
  if (isDocumentNode(node)) {
    return {
      [node.documentElement.nodeName]: parseXmlNode(node.documentElement)
    };
  }
  if (node.nodeType === Node.TEXT_NODE) {
    return (_a = node.nodeValue) == null ? void 0 : _a.trim();
  }
  if (isElementNode(node)) {
    if (isTextOnlyElementNode(node)) {
      return node.childNodes[0].nodeValue;
    }
    const nodeValue = {};
    for (const attr of node.attributes) {
      if (!isNamespaceAttributeName(attr.nodeName)) {
        nodeValue[attr.nodeName] = attr.nodeValue;
      }
    }
    if (node.children.length > 0) {
      for (const child of node.children) {
        const childValue = parseXmlNode(child);
        if (childValue === void 0) {
          continue;
        }
        const childName = child.nodeName;
        if (nodeValue[childName] === void 0) {
          nodeValue[childName] = childValue;
        } else if (Array.isArray(nodeValue[childName])) {
          nodeValue[childName].push(childValue);
        } else {
          nodeValue[childName] = [nodeValue[childName], childValue];
        }
      }
    }
    return Object.keys(nodeValue).length === 0 ? "" : nodeValue;
  }
};
var isElementNode = (node) => node.nodeType === Node.ELEMENT_NODE;
var isDocumentNode = (node) => node.nodeType === Node.DOCUMENT_NODE;
var isTextOnlyElementNode = (node) => {
  var _a;
  return hasOnlyNamespaceAttributes(node) && node.children.length === 0 && ((_a = node.firstChild) == null ? void 0 : _a.nodeType) === Node.TEXT_NODE;
};
var hasOnlyNamespaceAttributes = (node) => {
  for (const attr of node.attributes) {
    if (!isNamespaceAttributeName(attr.nodeName)) {
      return false;
    }
  }
  return true;
};
var isNamespaceAttributeName = (name) => name === "xmlns" || name.startsWith("xmlns:");

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/utils/parsePayload.mjs
var import_buffer = __toESM(require_buffer(), 1);
var parseXmlError = async (response) => {
  if (!response || response.statusCode < 300) {
    return;
  }
  const { statusCode } = response;
  const body = await parseXmlBody(response);
  const code = (body == null ? void 0 : body.Code) ? body.Code : statusCode === 404 ? "NotFound" : statusCode.toString();
  const message = (body == null ? void 0 : body.message) ?? (body == null ? void 0 : body.Message) ?? code;
  const error = new Error(message);
  return Object.assign(error, {
    name: code,
    $metadata: parseMetadata(response)
  });
};
var parseXmlBody = async (response) => {
  if (!response.body) {
    throw new Error("S3 aborted request.");
  }
  const data = await response.body.text();
  if ((data == null ? void 0 : data.length) > 0) {
    try {
      return parser.parse(data);
    } catch (error) {
      throw new Error("Failed to parse XML response.");
    }
  }
  return {};
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/base.mjs
var import_fast_xml_parser2 = __toESM(require_fast_xml_parser(), 1);
var import_buffer2 = __toESM(require_buffer(), 1);
var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var SERVICE_NAME = "s3";
var endpointResolver = (options, apiInput) => {
  const { region, useAccelerateEndpoint, customEndpoint, forcePathStyle } = options;
  let endpoint;
  if (customEndpoint) {
    endpoint = new AmplifyUrl(customEndpoint);
  } else if (useAccelerateEndpoint) {
    if (forcePathStyle) {
      throw new Error("Path style URLs are not supported with S3 Transfer Acceleration.");
    }
    endpoint = new AmplifyUrl(`https://s3-accelerate.${getDnsSuffix(region)}`);
  } else {
    endpoint = new AmplifyUrl(`https://s3.${region}.${getDnsSuffix(region)}`);
  }
  if (apiInput == null ? void 0 : apiInput.Bucket) {
    if (!isDnsCompatibleBucketName(apiInput.Bucket)) {
      throw new Error(`Invalid bucket name: "${apiInput.Bucket}".`);
    }
    if (forcePathStyle || apiInput.Bucket.includes(".")) {
      endpoint.pathname = `/${apiInput.Bucket}`;
    } else {
      endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;
    }
  }
  return { url: endpoint };
};
var isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
var defaultConfig = {
  service: SERVICE_NAME,
  endpointResolver,
  retryDecider: getRetryDecider(parseXmlError),
  computeDelay: jitteredBackoff,
  userAgentValue: getAmplifyUserAgent(),
  useAccelerateEndpoint: false,
  uriEscapePath: false
  // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/getObject.mjs
var import_fast_xml_parser3 = __toESM(require_fast_xml_parser(), 1);
var import_buffer3 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/utils/deserializeHelpers.mjs
var map = (obj, instructions) => {
  const result = {};
  for (const [key, instruction] of Object.entries(instructions)) {
    const [accessor, deserializer] = Array.isArray(instruction) ? instruction : [instruction];
    if (Object.prototype.hasOwnProperty.call(obj, accessor)) {
      result[key] = deserializer ? deserializer(obj[accessor]) : String(obj[accessor]);
    }
  }
  return result;
};
var deserializeNumber = (value) => value ? Number(value) : void 0;
var deserializeBoolean = (value) => {
  return value ? value === "true" : void 0;
};
var deserializeTimestamp = (value) => {
  return value ? new Date(value) : void 0;
};
var emptyArrayGuard = (value, deserializer) => {
  if (value === "") {
    return [];
  }
  const valueArray = (Array.isArray(value) ? value : [value]).filter((e) => e != null);
  return deserializer(valueArray);
};
var deserializeMetadata = (headers) => {
  const objectMetadataHeaderPrefix = "x-amz-meta-";
  const deserialized = Object.keys(headers).filter((header) => header.startsWith(objectMetadataHeaderPrefix)).reduce((acc, header) => {
    acc[header.replace(objectMetadataHeaderPrefix, "")] = headers[header];
    return acc;
  }, {});
  return Object.keys(deserialized).length > 0 ? deserialized : void 0;
};
var buildStorageServiceError = (error, statusCode) => {
  const storageError = new StorageError({
    name: error.name,
    message: error.message
  });
  if (statusCode === 404) {
    storageError.recoverySuggestion = "Please add the object with this key to the bucket as the key is not found.";
  }
  return storageError;
};

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/utils/serializeHelpers.mjs
var assignStringVariables = (values) => {
  const queryParams = {};
  for (const [key, value] of Object.entries(values)) {
    if (value != null) {
      queryParams[key] = value.toString();
    }
  }
  return queryParams;
};
var serializeObjectConfigsToHeaders = async (input) => {
  var _a;
  return {
    ...assignStringVariables({
      "x-amz-acl": input.ACL,
      "cache-control": input.CacheControl,
      "content-disposition": input.ContentDisposition,
      "content-language": input.ContentLanguage,
      "content-encoding": input.ContentEncoding,
      "content-type": input.ContentType,
      expires: (_a = input.Expires) == null ? void 0 : _a.toUTCString(),
      "x-amz-tagging": input.Tagging,
      ...serializeMetadata(input.Metadata)
    })
  };
};
var serializeMetadata = (metadata = {}) => Object.keys(metadata).reduce((acc, suffix) => {
  acc[`x-amz-meta-${suffix.toLowerCase()}`] = metadata[suffix];
  return acc;
}, {});
var serializePathnameObjectKey = (url, key) => {
  return url.pathname.replace(/\/$/, "") + `/${key.split("/").map(extendedEncodeURIComponent).join("/")}`;
};
function validateS3RequiredParameter(assertion, paramName) {
  if (!assertion) {
    throw new StorageError({
      name: AmplifyErrorCode.Unknown,
      message: "An unknown error has occurred.",
      underlyingError: new TypeError(`Expected a non-null value for S3 parameter ${paramName}`),
      recoverySuggestion: "This is likely to be a bug. Please reach out to library authors."
    });
  }
}

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/getObject.mjs
var getObjectSerializer = async (input, endpoint) => {
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  return {
    method: "GET",
    headers: {
      ...input.Range && { Range: input.Range }
    },
    url
  };
};
var getObjectDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    return {
      ...map(response.headers, {
        DeleteMarker: ["x-amz-delete-marker", deserializeBoolean],
        AcceptRanges: "accept-ranges",
        Expiration: "x-amz-expiration",
        Restore: "x-amz-restore",
        LastModified: ["last-modified", deserializeTimestamp],
        ContentLength: ["content-length", deserializeNumber],
        ETag: "etag",
        ChecksumCRC32: "x-amz-checksum-crc32",
        ChecksumCRC32C: "x-amz-checksum-crc32c",
        ChecksumSHA1: "x-amz-checksum-sha1",
        ChecksumSHA256: "x-amz-checksum-sha256",
        MissingMeta: ["x-amz-missing-meta", deserializeNumber],
        VersionId: "x-amz-version-id",
        CacheControl: "cache-control",
        ContentDisposition: "content-disposition",
        ContentEncoding: "content-encoding",
        ContentLanguage: "content-language",
        ContentRange: "content-range",
        ContentType: "content-type",
        Expires: ["expires", deserializeTimestamp],
        WebsiteRedirectLocation: "x-amz-website-redirect-location",
        ServerSideEncryption: "x-amz-server-side-encryption",
        SSECustomerAlgorithm: "x-amz-server-side-encryption-customer-algorithm",
        SSECustomerKeyMD5: "x-amz-server-side-encryption-customer-key-md5",
        SSEKMSKeyId: "x-amz-server-side-encryption-aws-kms-key-id",
        BucketKeyEnabled: [
          "x-amz-server-side-encryption-bucket-key-enabled",
          deserializeBoolean
        ],
        StorageClass: "x-amz-storage-class",
        RequestCharged: "x-amz-request-charged",
        ReplicationStatus: "x-amz-replication-status",
        PartsCount: ["x-amz-mp-parts-count", deserializeNumber],
        TagCount: ["x-amz-tagging-count", deserializeNumber],
        ObjectLockMode: "x-amz-object-lock-mode",
        ObjectLockRetainUntilDate: [
          "x-amz-object-lock-retain-until-date",
          deserializeTimestamp
        ],
        ObjectLockLegalHoldStatus: "x-amz-object-lock-legal-hold"
      }),
      Metadata: deserializeMetadata(response.headers),
      $metadata: parseMetadata(response),
      // @ts-expect-error The body is a CompatibleHttpResponse type because the lower-level handler is XHR instead of
      // fetch, which represents payload in Blob instread of ReadableStream.
      Body: response.body
    };
  }
};
var getObject = composeServiceApi(s3TransferHandler, getObjectSerializer, getObjectDeserializer, { ...defaultConfig, responseType: "blob" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/listObjectsV2.mjs
var import_fast_xml_parser4 = __toESM(require_fast_xml_parser(), 1);
var import_buffer4 = __toESM(require_buffer(), 1);
var listObjectsV2Serializer = (input, endpoint) => {
  const headers = assignStringVariables({
    "x-amz-request-payer": input.RequestPayer,
    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
  });
  const query = assignStringVariables({
    "list-type": "2",
    "continuation-token": input.ContinuationToken,
    delimiter: input.Delimiter,
    "encoding-type": input.EncodingType,
    "fetch-owner": input.FetchOwner,
    "max-keys": input.MaxKeys,
    prefix: input.Prefix,
    "start-after": input.StartAfter
  });
  const url = new AmplifyUrl(endpoint.url.toString());
  url.search = new AmplifyUrlSearchParams(query).toString();
  return {
    method: "GET",
    headers,
    url
  };
};
var listObjectsV2Deserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const parsed = await parseXmlBody(response);
    const contents = map(parsed, {
      CommonPrefixes: [
        "CommonPrefixes",
        (value) => emptyArrayGuard(value, deserializeCommonPrefixList)
      ],
      Contents: [
        "Contents",
        (value) => emptyArrayGuard(value, deserializeObjectList)
      ],
      ContinuationToken: "ContinuationToken",
      Delimiter: "Delimiter",
      EncodingType: "EncodingType",
      IsTruncated: ["IsTruncated", deserializeBoolean],
      KeyCount: ["KeyCount", deserializeNumber],
      MaxKeys: ["MaxKeys", deserializeNumber],
      Name: "Name",
      NextContinuationToken: "NextContinuationToken",
      Prefix: "Prefix",
      StartAfter: "StartAfter"
    });
    return {
      $metadata: parseMetadata(response),
      ...contents
    };
  }
};
var deserializeCommonPrefixList = (output) => output.map(deserializeCommonPrefix);
var deserializeCommonPrefix = (output) => map(output, {
  Prefix: "Prefix"
});
var deserializeObjectList = (output) => output.map(deserializeObject);
var deserializeObject = (output) => map(output, {
  Key: "Key",
  LastModified: ["LastModified", deserializeTimestamp],
  ETag: "ETag",
  ChecksumAlgorithm: [
    "ChecksumAlgorithm",
    (value) => emptyArrayGuard(value, deserializeChecksumAlgorithmList)
  ],
  Size: ["Size", deserializeNumber],
  StorageClass: "StorageClass",
  Owner: ["Owner", deserializeOwner]
});
var deserializeChecksumAlgorithmList = (output) => output.map((entry) => String(entry));
var deserializeOwner = (output) => map(output, { DisplayName: "DisplayName", ID: "ID" });
var listObjectsV2 = composeServiceApi(s3TransferHandler, listObjectsV2Serializer, listObjectsV2Deserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/putObject.mjs
var import_fast_xml_parser5 = __toESM(require_fast_xml_parser(), 1);
var import_buffer5 = __toESM(require_buffer(), 1);
var putObjectSerializer = async (input, endpoint) => {
  const headers = {
    ...await serializeObjectConfigsToHeaders({
      ...input,
      ContentType: input.ContentType ?? "application/octet-stream"
    }),
    ...assignStringVariables({ "content-md5": input.ContentMD5 })
  };
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  return {
    method: "PUT",
    headers,
    url,
    body: input.Body
  };
};
var putObjectDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    return {
      ...map(response.headers, {
        ETag: "etag",
        VersionId: "x-amz-version-id"
      }),
      $metadata: parseMetadata(response)
    };
  }
};
var putObject = composeServiceApi(s3TransferHandler, putObjectSerializer, putObjectDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/createMultipartUpload.mjs
var import_fast_xml_parser6 = __toESM(require_fast_xml_parser(), 1);
var import_buffer6 = __toESM(require_buffer(), 1);
var createMultipartUploadSerializer = async (input, endpoint) => {
  const headers = await serializeObjectConfigsToHeaders(input);
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  url.search = "uploads";
  return {
    method: "POST",
    headers,
    url
  };
};
var createMultipartUploadDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const parsed = await parseXmlBody(response);
    const contents = map(parsed, {
      UploadId: "UploadId"
    });
    return {
      $metadata: parseMetadata(response),
      ...contents
    };
  }
};
var createMultipartUpload = composeServiceApi(s3TransferHandler, createMultipartUploadSerializer, createMultipartUploadDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/uploadPart.mjs
var import_fast_xml_parser7 = __toESM(require_fast_xml_parser(), 1);
var import_buffer7 = __toESM(require_buffer(), 1);
var uploadPartSerializer = async (input, endpoint) => {
  const headers = {
    ...assignStringVariables({ "content-md5": input.ContentMD5 })
  };
  headers["content-type"] = "application/octet-stream";
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  validateS3RequiredParameter(!!input.PartNumber, "PartNumber");
  validateS3RequiredParameter(!!input.UploadId, "UploadId");
  url.search = new AmplifyUrlSearchParams({
    partNumber: input.PartNumber + "",
    uploadId: input.UploadId
  }).toString();
  return {
    method: "PUT",
    headers,
    url,
    body: input.Body
  };
};
var uploadPartDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    return {
      ...map(response.headers, {
        ETag: "etag"
      }),
      $metadata: parseMetadata(response)
    };
  }
};
var uploadPart = composeServiceApi(s3TransferHandler, uploadPartSerializer, uploadPartDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/completeMultipartUpload.mjs
var import_fast_xml_parser8 = __toESM(require_fast_xml_parser(), 1);
var import_buffer8 = __toESM(require_buffer(), 1);
var INVALID_PARAMETER_ERROR_MSG = "Invalid parameter for ComplteMultipartUpload API";
var completeMultipartUploadSerializer = async (input, endpoint) => {
  const headers = {
    "content-type": "application/xml"
  };
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  validateS3RequiredParameter(!!input.UploadId, "UploadId");
  url.search = new AmplifyUrlSearchParams({
    uploadId: input.UploadId
  }).toString();
  validateS3RequiredParameter(!!input.MultipartUpload, "MultipartUpload");
  return {
    method: "POST",
    headers,
    url,
    body: '<?xml version="1.0" encoding="UTF-8"?>' + serializeCompletedMultipartUpload(input.MultipartUpload)
  };
};
var serializeCompletedMultipartUpload = (input) => {
  var _a;
  if (!((_a = input.Parts) == null ? void 0 : _a.length)) {
    throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);
  }
  return `<CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/">${input.Parts.map(serializeCompletedPartList).join("")}</CompleteMultipartUpload>`;
};
var serializeCompletedPartList = (input) => {
  if (!input.ETag || input.PartNumber == null) {
    throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);
  }
  return `<Part><ETag>${input.ETag}</ETag><PartNumber>${input.PartNumber}</PartNumber></Part>`;
};
var parseXmlBodyOrThrow = async (response) => {
  const parsed = await parseXmlBody(response);
  if (parsed.Code !== void 0 && parsed.Message !== void 0) {
    const error = await parseXmlError({
      ...response,
      statusCode: 500
      // To workaround the >=300 status code check common to other APIs.
    });
    throw buildStorageServiceError(error, response.statusCode);
  }
  return parsed;
};
var completeMultipartUploadDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const parsed = await parseXmlBodyOrThrow(response);
    const contents = map(parsed, {
      ETag: "ETag",
      Key: "Key",
      Location: "Location"
    });
    return {
      $metadata: parseMetadata(response),
      ...contents
    };
  }
};
var retryWhenErrorWith200StatusCode = async (response, error) => {
  if (!response) {
    return false;
  }
  if (response.statusCode === 200) {
    if (!response.body) {
      return true;
    }
    const parsed = await parseXmlBody(response);
    if (parsed.Code !== void 0 && parsed.Message !== void 0) {
      return true;
    }
    return false;
  }
  const defaultRetryDecider = defaultConfig.retryDecider;
  return defaultRetryDecider(response, error);
};
var completeMultipartUpload = composeServiceApi(s3TransferHandler, completeMultipartUploadSerializer, completeMultipartUploadDeserializer, {
  ...defaultConfig,
  responseType: "text",
  retryDecider: retryWhenErrorWith200StatusCode
});

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/listParts.mjs
var import_fast_xml_parser9 = __toESM(require_fast_xml_parser(), 1);
var import_buffer9 = __toESM(require_buffer(), 1);
var listPartsSerializer = async (input, endpoint) => {
  const headers = {};
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  validateS3RequiredParameter(!!input.UploadId, "UploadId");
  url.search = new AmplifyUrlSearchParams({
    uploadId: input.UploadId
  }).toString();
  return {
    method: "GET",
    headers,
    url
  };
};
var listPartsDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const parsed = await parseXmlBody(response);
    const contents = map(parsed, {
      UploadId: "UploadId",
      Parts: [
        "Part",
        (value) => emptyArrayGuard(value, deserializeCompletedPartList)
      ]
    });
    return {
      $metadata: parseMetadata(response),
      ...contents
    };
  }
};
var deserializeCompletedPartList = (input) => input.map((item) => map(item, {
  PartNumber: ["PartNumber", deserializeNumber],
  ETag: "ETag",
  Size: ["Size", deserializeNumber]
}));
var listParts = composeServiceApi(s3TransferHandler, listPartsSerializer, listPartsDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/abortMultipartUpload.mjs
var import_fast_xml_parser10 = __toESM(require_fast_xml_parser(), 1);
var import_buffer10 = __toESM(require_buffer(), 1);
var abortMultipartUploadSerializer = (input, endpoint) => {
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  validateS3RequiredParameter(!!input.UploadId, "UploadId");
  url.search = new AmplifyUrlSearchParams({
    uploadId: input.UploadId
  }).toString();
  return {
    method: "DELETE",
    headers: {},
    url
  };
};
var abortMultipartUploadDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    return {
      $metadata: parseMetadata(response)
    };
  }
};
var abortMultipartUpload = composeServiceApi(s3TransferHandler, abortMultipartUploadSerializer, abortMultipartUploadDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/copyObject.mjs
var import_fast_xml_parser11 = __toESM(require_fast_xml_parser(), 1);
var import_buffer11 = __toESM(require_buffer(), 1);
var copyObjectSerializer = async (input, endpoint) => {
  const headers = {
    ...await serializeObjectConfigsToHeaders(input),
    ...assignStringVariables({
      "x-amz-copy-source": input.CopySource,
      "x-amz-metadata-directive": input.MetadataDirective
    })
  };
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  return {
    method: "PUT",
    headers,
    url
  };
};
var copyObjectDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    await parseXmlBody(response);
    return {
      $metadata: parseMetadata(response)
    };
  }
};
var copyObject = composeServiceApi(s3TransferHandler, copyObjectSerializer, copyObjectDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/headObject.mjs
var import_fast_xml_parser12 = __toESM(require_fast_xml_parser(), 1);
var import_buffer12 = __toESM(require_buffer(), 1);
var headObjectSerializer = async (input, endpoint) => {
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  return {
    method: "HEAD",
    headers: {},
    url
  };
};
var headObjectDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const contents = {
      ...map(response.headers, {
        ContentLength: ["content-length", deserializeNumber],
        ContentType: "content-type",
        ETag: "etag",
        LastModified: ["last-modified", deserializeTimestamp],
        VersionId: "x-amz-version-id"
      }),
      Metadata: deserializeMetadata(response.headers)
    };
    return {
      $metadata: parseMetadata(response),
      ...contents
    };
  }
};
var headObject = composeServiceApi(s3TransferHandler, headObjectSerializer, headObjectDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/utils/client/deleteObject.mjs
var import_fast_xml_parser13 = __toESM(require_fast_xml_parser(), 1);
var import_buffer13 = __toESM(require_buffer(), 1);
var deleteObjectSerializer = (input, endpoint) => {
  const url = new AmplifyUrl(endpoint.url.toString());
  validateS3RequiredParameter(!!input.Key, "Key");
  url.pathname = serializePathnameObjectKey(url, input.Key);
  return {
    method: "DELETE",
    headers: {},
    url
  };
};
var deleteObjectDeserializer = async (response) => {
  if (response.statusCode >= 300) {
    const error = await parseXmlError(response);
    throw buildStorageServiceError(error, response.statusCode);
  } else {
    const content = map(response.headers, {
      DeleteMarker: ["x-amz-delete-marker", deserializeBoolean],
      VersionId: "x-amz-version-id",
      RequestCharged: "x-amz-request-charged"
    });
    return {
      ...content,
      $metadata: parseMetadata(response)
    };
  }
};
var deleteObject = composeServiceApi(s3TransferHandler, deleteObjectSerializer, deleteObjectDeserializer, { ...defaultConfig, responseType: "text" });

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/uploadData/multipart/uploadHandlers.mjs
var import_fast_xml_parser14 = __toESM(require_fast_xml_parser(), 1);
var import_buffer14 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/uploadData/multipart/uploadCache.mjs
var ONE_HOUR = 1e3 * 60 * 60;

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/downloadData.mjs
var import_fast_xml_parser16 = __toESM(require_fast_xml_parser(), 1);
var import_buffer16 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/internal/remove.mjs
var import_fast_xml_parser17 = __toESM(require_fast_xml_parser(), 1);
var import_buffer17 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/internal/list.mjs
var import_fast_xml_parser18 = __toESM(require_fast_xml_parser(), 1);
var import_buffer18 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/internal/getProperties.mjs
var import_fast_xml_parser19 = __toESM(require_fast_xml_parser(), 1);
var import_buffer19 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/internal/copy.mjs
var import_fast_xml_parser20 = __toESM(require_fast_xml_parser(), 1);
var import_buffer20 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/internal/getUrl.mjs
var import_fast_xml_parser21 = __toESM(require_fast_xml_parser(), 1);
var import_buffer21 = __toESM(require_buffer(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/ThemeProvider/ThemeContext.mjs
var React2 = __toESM(require_react(), 1);
var ThemeContext = React2.createContext({
  theme: createTheme(),
  colorMode: void 0
});

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Alert/AlertIcon.mjs
var React15 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/Icon.mjs
var React8 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/View/View.mjs
var React7 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/styleUtils.mjs
var React5 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/types/style.mjs
var ComponentPropsToStylePropsMap = {
  alignContent: "alignContent",
  alignItems: "alignItems",
  alignSelf: "alignSelf",
  area: "gridArea",
  aspectRatio: "aspectRatio",
  autoColumns: "gridAutoColumns",
  autoFlow: "gridAutoFlow",
  autoRows: "gridAutoRows",
  backgroundColor: "backgroundColor",
  backgroundImage: "backgroundImage",
  basis: "flexBasis",
  border: "border",
  borderRadius: "borderRadius",
  borderColor: "borderColor",
  borderWidth: "borderWidth",
  borderStyle: "borderStyle",
  bottom: "bottom",
  boxShadow: "boxShadow",
  color: "color",
  column: "gridColumn",
  columnEnd: "gridColumnEnd",
  columnGap: "columnGap",
  columnSpan: "gridColumn",
  columnStart: "gridColumnStart",
  direction: "flexDirection",
  display: "display",
  flex: "flex",
  fontFamily: "fontFamily",
  fontSize: "fontSize",
  fontStyle: "fontStyle",
  fontWeight: "fontWeight",
  gap: "gap",
  grow: "flexGrow",
  height: "height",
  justifyContent: "justifyContent",
  left: "left",
  letterSpacing: "letterSpacing",
  lineHeight: "lineHeight",
  margin: "margin",
  marginBlock: "marginBlock",
  marginBlockEnd: "marginBlockEnd",
  marginBlockStart: "marginBlockStart",
  marginBottom: "marginBlockEnd",
  marginInline: "marginInline",
  marginInlineEnd: "marginInlineEnd",
  marginInlineStart: "marginInlineStart",
  marginLeft: "marginInlineStart",
  marginRight: "marginInlineEnd",
  marginTop: "marginBlockStart",
  maxHeight: "maxHeight",
  maxWidth: "maxWidth",
  minHeight: "minHeight",
  minWidth: "minWidth",
  objectFit: "objectFit",
  objectPosition: "objectPosition",
  opacity: "opacity",
  order: "order",
  overflow: "overflow",
  padding: "padding",
  paddingBlock: "paddingBlock",
  paddingBlockEnd: "paddingBlockEnd",
  paddingBlockStart: "paddingBlockStart",
  paddingBottom: "paddingBlockEnd",
  paddingInline: "paddingInline",
  paddingInlineEnd: "paddingInlineEnd",
  paddingInlineStart: "paddingInlineStart",
  paddingLeft: "paddingInlineStart",
  paddingRight: "paddingInlineEnd",
  paddingTop: "paddingBlockStart",
  position: "position",
  resize: "resize",
  right: "right",
  row: "gridRow",
  rowEnd: "gridRowEnd",
  rowGap: "rowGap",
  rowSpan: "gridRow",
  rowStart: "gridRowStart",
  shrink: "flexShrink",
  templateAreas: "gridTemplateAreas",
  templateColumns: "gridTemplateColumns",
  templateRows: "gridTemplateRows",
  textAlign: "textAlign",
  textDecoration: "textDecoration",
  textTransform: "textTransform",
  top: "top",
  transform: "transform",
  transformOrigin: "transformOrigin",
  width: "width",
  whiteSpace: "whiteSpace",
  wrap: "flexWrap"
};
var ComponentPropsToStylePropsMapKeys = Object.keys(ComponentPropsToStylePropsMap);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/constants.mjs
var ComponentText = {
  Alert: {
    dismissButtonLabel: "Dismiss alert"
  },
  Autocomplete: {
    emptyText: "No options found",
    loadingText: "Loading options..."
  },
  Collection: {
    searchButtonLabel: "Search",
    searchNoResultsFound: "No results found"
  },
  Fields: {
    clearButtonLabel: "Clear input"
  },
  Message: {
    dismissLabel: "Dismiss message"
  },
  PaginationItem: {
    currentPageLabel: "Page",
    nextLabel: "Go to next page",
    pageLabel: "Go to page",
    previousLabel: "Go to previous page"
  },
  PhoneNumberField: {
    countryCodeLabel: "Country code"
  },
  SearchField: {
    searchButtonLabel: "Search"
  },
  PasswordField: {
    passwordIsHidden: "Password is hidden",
    passwordIsShown: "Password is shown",
    showPassword: "Show password"
  },
  StepperField: {
    increaseButtonLabel: "Increase to",
    decreaseButtonLabel: "Decrease to"
  }
};
var stylePropsToThemeKeys = {
  backgroundColor: "colors",
  borderColor: "colors",
  borderWidth: "borderWidths",
  color: "colors",
  borderRadius: "radii",
  fontSize: "fontSizes",
  fontWeight: "fontWeights",
  fontFamily: "fonts",
  lineHeight: "lineHeights",
  opacity: "opacities",
  boxShadow: "shadows",
  transform: "transforms",
  left: "space",
  right: "space",
  top: "space",
  bottom: "space",
  height: "space",
  width: "space",
  letterSpacing: "space",
  margin: "space",
  marginBlock: "space",
  marginBlockEnd: "space",
  marginBlockStart: "space",
  marginInline: "space",
  marginInlineEnd: "space",
  marginInlineStart: "space",
  marginLeft: "space",
  marginRight: "space",
  marginTop: "space",
  marginBottom: "space",
  maxHeight: "space",
  maxWidth: "space",
  minHeight: "space",
  minWidth: "space",
  padding: "space",
  paddingBlock: "space",
  paddingBlockEnd: "space",
  paddingBlockStart: "space",
  paddingInline: "space",
  paddingInlineEnd: "space",
  paddingInlineStart: "space",
  paddingLeft: "space",
  paddingRight: "space",
  paddingTop: "space",
  paddingBottom: "space",
  gap: "space",
  columnGap: "space",
  rowGap: "space"
};
var ESCAPE_KEY = "Escape";
var ENTER_KEY = "Enter";
var ARROW_UP = "ArrowUp";
var ARROW_DOWN = "ArrowDown";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/types/theme.mjs
var isThemeStylePropKey = (key) => {
  return key in stylePropsToThemeKeys;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/utils.mjs
var strHasLength = (str) => typeof str === "string" && str.length > 0;
var isEmptyString = (value) => typeof value === "string" && value.length === 0;
var isNullOrEmptyString = (value) => value == null || isEmptyString(value);
var getConsecutiveIntArray = (start, end) => {
  const length = end - start + 1;
  return Array.from({ length }, (_, idx) => idx + start);
};
var objectKeys = (obj) => {
  return Object.keys(obj);
};
var getCSSVariableIfValueIsThemeKey = (propKey, value, tokens) => {
  if (typeof value !== "string") {
    return value;
  }
  if (value.includes(" ")) {
    return value.split(" ").map((val) => getCSSVariableIfValueIsThemeKey(propKey, val, tokens)).join(" ");
  }
  if (isThemeStylePropKey(propKey)) {
    const path = value.split(".");
    const tokenKey = stylePropsToThemeKeys[propKey];
    let tokenProps = tokens[tokenKey];
    for (let i = 0; i < path.length; i++) {
      if (tokenProps) {
        tokenProps = tokenProps[path[i]];
        continue;
      }
      break;
    }
    return isDesignToken(tokenProps) ? `var(--${cssNameTransform({
      path: [stylePropsToThemeKeys[propKey], ...path]
    })})` : value;
  }
  return value;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/utils.mjs
var getClosestValueByBreakpoint = ({ breakpoint, breakpoints, values }) => {
  const value = values[breakpoint];
  if (value !== void 0) {
    return value;
  }
  const breakpointsDesc = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);
  const lowerBreakpoints = breakpointsDesc.slice(breakpointsDesc.indexOf(breakpoint));
  for (const breakpoint2 of lowerBreakpoints) {
    const value2 = values[breakpoint2];
    if (value2 !== void 0) {
      return value2;
    }
  }
  return null;
};
var valueObjToBreakpoints = (obj) => {
  return objectKeys(obj).reduce((acc, key) => key in defaultTheme.breakpoints.values ? { ...acc, [key]: obj[key] } : acc, {});
};
var getValueAtCurrentBreakpoint = ({ breakpoint, breakpoints, values }) => {
  let breakpointCompatValues = {};
  const breakpointsAscending = objectKeys(breakpoints).sort((a, b) => breakpoints[a] - breakpoints[b]);
  if (Array.isArray(values)) {
    values.forEach((value, index2) => {
      breakpointCompatValues[breakpointsAscending[index2]] = value;
    });
  } else if (typeof values === "object") {
    breakpointCompatValues = valueObjToBreakpoints(values);
  }
  return getClosestValueByBreakpoint({
    breakpoint,
    breakpoints,
    values: breakpointCompatValues
  });
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/useBreakpoint.mjs
var React3 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/getMediaQueries.mjs
var getMediaQueries = ({ breakpoints }) => {
  const sortedBreakpoints = objectKeys(breakpoints).sort((a, b) => breakpoints[b] - breakpoints[a]);
  return sortedBreakpoints.map((breakpoint, index2) => {
    let query = "";
    const minWidth = breakpoints[breakpoint];
    const nextBreakpoint = sortedBreakpoints[index2 - 1];
    const maxWidth = nextBreakpoint ? breakpoints[nextBreakpoint] - 1 : null;
    if (minWidth >= 0) {
      query = `(min-width: ${minWidth}px)`;
    }
    if (maxWidth !== null) {
      if (query) {
        query += " and ";
      }
      query += `(max-width: ${maxWidth}px)`;
    }
    return {
      breakpoint,
      query,
      maxWidth,
      minWidth
    };
  });
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/responsive/useBreakpoint.mjs
var useIsomorphicEffect = typeof window === "undefined" ? React3.useEffect : React3.useLayoutEffect;
var useBreakpoint = ({ breakpoints, defaultBreakpoint }) => {
  const supportMatchMedia = typeof window !== "undefined" && typeof window.matchMedia !== "undefined";
  const matchMedia = supportMatchMedia ? window.matchMedia : null;
  const mediaQueries = React3.useMemo(() => getMediaQueries({ breakpoints }), [breakpoints]);
  const [breakpoint, setBreakpoint] = React3.useState(defaultBreakpoint);
  const updateBreakpoint = React3.useCallback((matches, breakpoint2) => {
    if (matches) {
      setBreakpoint(breakpoint2);
    }
  }, [setBreakpoint]);
  useIsomorphicEffect(() => {
    if (!matchMedia)
      return;
    const unsubscribeList = mediaQueries.map(({ query, breakpoint: breakpoint2 }) => {
      const queryList = matchMedia(query);
      updateBreakpoint(queryList.matches, breakpoint2);
      const handleMediaChange = (event) => {
        if (event.matches) {
          setBreakpoint(breakpoint2);
        }
      };
      queryList.addEventListener("change", handleMediaChange);
      return () => queryList.removeEventListener("change", handleMediaChange);
    });
    return () => {
      unsubscribeList.forEach((unsubscribe) => unsubscribe());
    };
  }, [breakpoints, setBreakpoint, matchMedia, mediaQueries]);
  React3.useDebugValue(breakpoint, (breakpoint2) => breakpoint2);
  return breakpoint;
};

// node_modules/@aws-amplify/ui-react/dist/esm/hooks/useTheme.mjs
var React4 = __toESM(require_react(), 1);
var getThemeFromContext = (context) => {
  if (typeof context === "undefined" || typeof context.theme === "undefined") {
    return createTheme();
  }
  return context.theme;
};
var useTheme = () => {
  const context = React4.useContext(ThemeContext);
  return getThemeFromContext(context);
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/getStyleValue.mjs
var getStyleValue = ({ value, propKey, tokens }) => {
  if (isDesignToken(value)) {
    return value.toString();
  }
  if (isString(value)) {
    return isString(propKey) ? getCSSVariableIfValueIsThemeKey(propKey, value, tokens) : value;
  }
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/shared/styleUtils.mjs
var isSpanPrimitiveValue = (spanValue) => {
  return spanValue === "auto" || typeof spanValue === "number" && !isNaN(spanValue) || typeof spanValue === "string" && !isNaN(parseFloat(spanValue));
};
var getGridSpan = (spanValue) => {
  return spanValue === "auto" ? "auto" : `span ${spanValue}`;
};
var convertGridSpan = (spanValue) => {
  if (isSpanPrimitiveValue(spanValue)) {
    return getGridSpan(spanValue);
  }
  if (Array.isArray(spanValue)) {
    return spanValue.map((value) => getGridSpan(value));
  }
  if (typeof spanValue === "object" && spanValue != null) {
    return Object.entries(spanValue).reduce((acc, [key, value]) => ({ ...acc, [key]: getGridSpan(value) }), {});
  }
  return null;
};
var useTransformStyleProps = (props) => {
  const { rowSpan, columnSpan, row, column, ...rest } = props;
  const { rowFromSpanValue, columnFromSpanValue } = React5.useMemo(() => {
    return {
      rowFromSpanValue: convertGridSpan(rowSpan),
      columnFromSpanValue: convertGridSpan(columnSpan)
    };
  }, [rowSpan, columnSpan]);
  return {
    row: !isNullOrEmptyString(row) ? row : rowFromSpanValue,
    column: !isNullOrEmptyString(column) ? column : columnFromSpanValue,
    ...rest
  };
};
var isComponentStyleProp = (key) => {
  return key in ComponentPropsToStylePropsMap;
};
var convertStylePropsToStyleObj = ({ props = {}, style = {}, breakpoint, breakpoints, tokens }) => {
  const nonStyleProps = {};
  Object.keys(props).filter((propKey) => props[propKey] !== null).forEach((propKey) => {
    if (isComponentStyleProp(propKey)) {
      const values = props[propKey];
      if (!values || isEmptyString(values))
        return;
      const reactStyleProp = ComponentPropsToStylePropsMap[propKey];
      let value = "";
      if (isDesignToken(values)) {
        value = values.toString();
      } else if (typeof values === "string") {
        value = getCSSVariableIfValueIsThemeKey(propKey, values, tokens);
      } else if (typeof values === "number") {
        value = values;
      } else if (typeof values === "object") {
        value = getStyleValue({
          propKey,
          tokens,
          value: getValueAtCurrentBreakpoint({
            values,
            breakpoint,
            breakpoints
          })
        });
      }
      style = {
        ...style,
        [reactStyleProp]: value
      };
    } else if (typeof props[propKey] !== "undefined") {
      nonStyleProps[propKey] = props[propKey];
    }
  });
  return { propStyles: style, nonStyleProps };
};
var useStyles = (props, style) => {
  const { breakpoints: { values: breakpoints, defaultBreakpoint }, tokens } = useTheme();
  const breakpoint = useBreakpoint({
    breakpoints,
    defaultBreakpoint
  });
  const propStyles = useTransformStyleProps(props);
  return React5.useMemo(() => convertStylePropsToStyleObj({
    props: propStyles,
    style,
    breakpoint,
    breakpoints,
    tokens
  }), [propStyles, style, breakpoints, breakpoint, tokens]);
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/primitiveWithForwardRef.mjs
var React6 = __toESM(require_react(), 1);
var primitiveWithForwardRef = (primitive) => React6.forwardRef(primitive);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/View/View.mjs
var ViewPrimitive = ({ as = "div", children, testId, ariaLabel, isDisabled, style, inert, ...rest }, ref) => {
  const { propStyles, nonStyleProps } = useStyles(rest, style);
  return React7.createElement(as, {
    "aria-label": ariaLabel,
    "data-testid": testId,
    disabled: isDisabled,
    ref,
    inert: inert ? "" : null,
    style: propStyles,
    ...nonStyleProps
  }, children);
};
var View = primitiveWithForwardRef(ViewPrimitive);
View.displayName = "View";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/Icon.mjs
var defaultViewBox = { minX: 0, minY: 0, width: 24, height: 24 };
var IconPrimitive = ({
  className,
  // as can be used to render other icon react components too
  as = "svg",
  fill = "currentColor",
  pathData,
  viewBox = defaultViewBox,
  children,
  paths,
  ...rest
}, ref) => {
  const minX = viewBox.minX ? viewBox.minX : defaultViewBox.minX;
  const minY = viewBox.minY ? viewBox.minY : defaultViewBox.minY;
  const width = viewBox.width ? viewBox.width : defaultViewBox.width;
  const height = viewBox.height ? viewBox.height : defaultViewBox.height;
  let _children;
  if (children) {
    _children = children;
  }
  if (paths) {
    _children = paths.map((path, index2) => React8.createElement("path", { ...path, key: index2 }));
  }
  if (pathData) {
    _children = React8.createElement("path", { d: pathData, fill });
  }
  return React8.createElement(View, { as, className: classNames(ComponentClassName.Icon, className), ref, viewBox: `${minX} ${minY} ${width} ${height}`, ...rest }, _children);
};
var Icon = primitiveWithForwardRef(IconPrimitive);
Icon.displayName = "Icon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/context/IconsContext.mjs
var React9 = __toESM(require_react(), 1);
var IconsContext = React9.createContext({});

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/context/useIcons.mjs
var React10 = __toESM(require_react(), 1);
function useIcons(component) {
  const context = React10.useContext(IconsContext);
  if (component && context) {
    return context[component];
  }
  return void 0;
}

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconCheckCircle.mjs
var React11 = __toESM(require_react(), 1);
var IconCheckCircle = (props) => {
  const { className, ...rest } = props;
  return React11.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React11.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React11.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconError.mjs
var React12 = __toESM(require_react(), 1);
var IconError = (props) => {
  const { className, ...rest } = props;
  return React12.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React12.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React12.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM13 17H11V15H13V17ZM13 13H11V7H13V13Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconInfo.mjs
var React13 = __toESM(require_react(), 1);
var IconInfo = (props) => {
  const { className, ...rest } = props;
  return React13.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React13.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React13.createElement("path", { d: "M11 7H13V9H11V7ZM11 11H13V17H11V11ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconWarning.mjs
var React14 = __toESM(require_react(), 1);
var IconWarning = (props) => {
  const { className, ...rest } = props;
  return React14.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React14.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React14.createElement("path", { d: "M1 21H23L12 2L1 21ZM13 18H11V16H13V18ZM13 14H11V10H13V14Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Alert/AlertIcon.mjs
var AlertIcon = ({ variation, ariaHidden, ariaLabel, role }) => {
  const icons = useIcons("alert");
  let icon;
  switch (variation) {
    case "info":
      icon = (icons == null ? void 0 : icons.info) ?? React15.createElement(IconInfo, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role });
      break;
    case "error":
      icon = (icons == null ? void 0 : icons.error) ?? React15.createElement(IconError, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role });
      break;
    case "warning":
      icon = (icons == null ? void 0 : icons.warning) ?? React15.createElement(IconWarning, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role });
      break;
    case "success":
      icon = (icons == null ? void 0 : icons.success) ?? React15.createElement(IconCheckCircle, { "aria-hidden": ariaHidden, "aria-label": ariaLabel, role });
      break;
  }
  return icon ? React15.createElement("span", { className: ComponentClassName.AlertIcon }, icon) : null;
};
AlertIcon.displayName = "AlertIcon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/FieldClearButton.mjs
var React23 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/FieldGroupIcon/FieldGroupIcon.mjs
var React16 = __toESM(require_react(), 1);
var FieldGroupIconPrimitive = ({ className, children, isVisible = true, excludeFromTabOrder = false, ...rest }, ref) => {
  return isVisible ? React16.createElement(View, { className: classNames(ComponentClassName.FieldGroupIcon, className), ref, tabIndex: excludeFromTabOrder ? -1 : void 0, ...rest }, children) : null;
};
var FieldGroupIcon = primitiveWithForwardRef(FieldGroupIconPrimitive);
FieldGroupIcon.displayName = "FieldGroupIcon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/FieldGroupIcon/FieldGroupIconButton.mjs
var React21 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Button/Button.mjs
var React20 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Fieldset/useFieldset.mjs
var React17 = __toESM(require_react(), 1);
var FieldsetContext = React17.createContext({
  isFieldsetDisabled: false
});
var useFieldset = () => React17.useContext(FieldsetContext);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Flex/Flex.mjs
var React18 = __toESM(require_react(), 1);
var FlexPrimitive = ({ className, children, ...rest }, ref) => React18.createElement(View, { className: classNames(ComponentClassName.Flex, className), ref, ...rest }, children);
var Flex = primitiveWithForwardRef(FlexPrimitive);
Flex.displayName = "Flex";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Loader/Loader.mjs
var React19 = __toESM(require_react(), 1);
var LINEAR_EMPTY = "linear-empty";
var LINEAR_FILLED = "linear-filled";
var CIRCULAR_EMPTY = "circular-empty";
var CIRCULAR_FILLED = "circular-filled";
var CIRCULAR_STROKE_WIDTH = 8;
var RADIUS = 42;
var CIRCUMFERENCE = 2 * RADIUS * Math.PI;
var LoaderPrimitive = ({ className, filledColor, emptyColor, size: size2, variation, isDeterminate = false, isPercentageTextHidden = false, percentage = 0, ...rest }, ref) => {
  percentage = Math.min(percentage, 100);
  percentage = Math.max(percentage, 0);
  const percent = `${percentage}%`;
  const componentClasses = classNames(ComponentClassName.Loader, classNameModifier(ComponentClassName.Loader, size2), classNameModifier(ComponentClassName.Loader, variation), classNameModifierByFlag(ComponentClassName.Loader, "determinate", isDeterminate), className);
  const linearLoader = React19.createElement(
    "g",
    null,
    React19.createElement("line", { x1: "0", x2: "100%", y1: "50%", y2: "50%", style: { stroke: String(emptyColor) }, "data-testid": LINEAR_EMPTY }),
    React19.createElement("line", { x1: "0", x2: isDeterminate ? percent : "100%", y1: "50%", y2: "50%", style: {
      // To get rid of the visible stroke linecap when percentage is 0
      stroke: isDeterminate && percentage === 0 ? "none" : filledColor ? String(filledColor) : void 0
    }, "data-testid": LINEAR_FILLED }),
    isDeterminate ? React19.createElement("text", {
      "aria-live": "polite",
      className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null),
      // -1% offset makes the text position look nicest
      x: `${-1 + percentage}%`,
      y: "200%"
    }, percent) : null
  );
  const circularLoader = React19.createElement(
    "g",
    null,
    React19.createElement("circle", { cx: "50%", cy: "50%", r: `${RADIUS}%`, strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`, style: { stroke: String(emptyColor) }, "data-testid": CIRCULAR_EMPTY }),
    React19.createElement("circle", { cx: "50%", cy: "50%", r: `${RADIUS}%`, strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`, style: {
      stroke: String(filledColor),
      strokeDasharray: isDeterminate ? `${CIRCUMFERENCE}% ${CIRCUMFERENCE}%` : void 0,
      strokeDashoffset: isDeterminate ? `${CIRCUMFERENCE - CIRCUMFERENCE * percentage / 100}%` : void 0
    }, "data-testid": CIRCULAR_FILLED }),
    isDeterminate ? React19.createElement("text", {
      "aria-live": "polite",
      className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null),
      // this x and y make text position look nicest
      x: "130%",
      y: "80%"
    }, percent) : null
  );
  return React19.createElement(View, { as: "svg", className: componentClasses, ref, role: "img", ...rest }, variation === "linear" ? linearLoader : circularLoader);
};
var Loader = primitiveWithForwardRef(LoaderPrimitive);
Loader.displayName = "Loader";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Button/Button.mjs
var supportedVariations = ["link", "primary", void 0];
var ButtonPrimitive = ({ className, children, colorTheme, isFullWidth = false, isDisabled, isLoading, loadingText = "", size: size2, type = "button", variation, ...rest }, ref) => {
  const colorThemeModifier = supportedVariations.includes(variation) && colorTheme ? `${variation ?? "outlined"}--${colorTheme}` : void 0;
  const { isFieldsetDisabled } = useFieldset();
  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled ?? isLoading ?? rest["disabled"];
  const componentClasses = classNames(ComponentClassName.Button, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Button, variation), classNameModifier(ComponentClassName.Button, colorThemeModifier), classNameModifier(ComponentClassName.Button, size2), classNameModifierByFlag(ComponentClassName.Button, "disabled", shouldBeDisabled), classNameModifierByFlag(ComponentClassName.Button, "loading", isLoading), classNameModifierByFlag(ComponentClassName.Button, "fullwidth", isFullWidth), className);
  return React20.createElement(View, { ref, as: "button", className: componentClasses, isDisabled: shouldBeDisabled, type, ...rest }, isLoading ? React20.createElement(
    Flex,
    { as: "span", className: ComponentClassName.ButtonLoaderWrapper },
    React20.createElement(Loader, { size: size2 }),
    loadingText ? loadingText : null
  ) : children);
};
var Button = primitiveWithForwardRef(ButtonPrimitive);
Button.displayName = "Button";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/FieldGroupIcon/FieldGroupIconButton.mjs
var FieldGroupIconButtonPrimitive = ({ children, className, ...rest }, ref) => React21.createElement(FieldGroupIcon, { as: Button, className: classNames(ComponentClassName.FieldGroupIconButton, className), ref, ...rest }, children);
var FieldGroupIconButton = primitiveWithForwardRef(FieldGroupIconButtonPrimitive);
FieldGroupIconButton.displayName = "FieldGroupIconButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconClose.mjs
var React22 = __toESM(require_react(), 1);
var IconClose = (props) => {
  const { className, size: size2, ...rest } = props;
  return React22.createElement(
    View,
    { as: "span", width: size2 ?? "1em", height: size2 ?? "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React22.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", style: size2 ? { width: size2, height: size2 } : void 0 },
      React22.createElement("path", { d: "M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/FieldClearButton.mjs
var ariaLabelText = ComponentText.Fields.clearButtonLabel;
var FieldClearButtonPrimitive = ({ ariaLabel = ariaLabelText, size: size2, ...rest }, ref) => {
  const icons = useIcons("field");
  return React23.createElement(FieldGroupIconButton, { ariaLabel, size: size2, ref, ...rest }, (icons == null ? void 0 : icons.clear) ?? React23.createElement(IconClose, null));
};
var FieldClearButton = primitiveWithForwardRef(FieldClearButtonPrimitive);
FieldClearButton.displayName = "FieldClearButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/FieldDescription.mjs
var React25 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Text/Text.mjs
var React24 = __toESM(require_react(), 1);
var TextPrimitive = ({ as = "p", className, children, isTruncated, variation, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Text, classNameModifier(ComponentClassName.Text, variation), classNameModifierByFlag(ComponentClassName.Text, "truncated", isTruncated), className);
  return React24.createElement(View, { as, className: componentClasses, ref, ...rest }, children);
};
var Text = primitiveWithForwardRef(TextPrimitive);
Text.displayName = "Text";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/FieldDescription.mjs
var QA_FIELD_DESCRIPTION = "qa-field-description";
var FieldDescription = ({ descriptiveText, labelHidden, ...rest }) => descriptiveText ? React25.createElement(Text, { "data-testid": QA_FIELD_DESCRIPTION, className: classNames(ComponentClassName.FieldDescription, {
  [ComponentClassName.VisuallyHidden]: labelHidden
}), ...rest }, descriptiveText) : null;
FieldDescription.displayName = "FieldDescription";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/FieldErrorMessage.mjs
var React26 = __toESM(require_react(), 1);
var FieldErrorMessage = ({ errorMessage, hasError, ...rest }) => {
  return hasError && errorMessage ? React26.createElement(Text, { className: ComponentClassName.FieldErrorMessage, ...rest }, errorMessage) : null;
};
FieldErrorMessage.displayName = "FieldErrorMessage";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/Field.mjs
var React28 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Label/Label.mjs
var React27 = __toESM(require_react(), 1);
var LabelPrimitive = ({ children, className, visuallyHidden, ...rest }, ref) => {
  return React27.createElement(View, { as: "label", className: classNames(ComponentClassName.Label, className, {
    [ComponentClassName.VisuallyHidden]: visuallyHidden
  }), ref, ...rest }, children);
};
var Label = primitiveWithForwardRef(LabelPrimitive);
Label.displayName = "Label";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Field/Field.mjs
var FieldPrimitive = (props, ref) => {
  const { className, size: size2, testId, children, label, labelHidden, errorMessage, hasError, descriptiveText, ...rest } = props;
  return React28.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), className), testId, ref, ...rest },
    label ? React28.createElement(Label, { visuallyHidden: labelHidden }, label) : null,
    React28.createElement(FieldDescription, { labelHidden, descriptiveText }),
    children,
    errorMessage ? React28.createElement(FieldErrorMessage, { hasError, errorMessage }) : null
  );
};
var Field = primitiveWithForwardRef(FieldPrimitive);
Field.displayName = "Field";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Alert/Alert.mjs
var React29 = __toESM(require_react(), 1);
var AlertPrimitive = ({ buttonRef, children, className, dismissButtonLabel = ComponentText.Alert.dismissButtonLabel, hasIcon = true, heading, isDismissible = false, onDismiss, variation, ...rest }, ref) => {
  const [dismissed, setDismissed] = React29.useState(false);
  const icons = useIcons("alert");
  const dismissAlert = React29.useCallback(() => {
    setDismissed(!dismissed);
    if (isFunction(onDismiss)) {
      onDismiss();
    }
  }, [setDismissed, onDismiss, dismissed]);
  return !dismissed ? React29.createElement(
    Flex,
    { className: classNames(ComponentClassName.Alert, className, classNameModifier(ComponentClassName.Alert, variation)), ref, role: "alert", ...rest },
    hasIcon && React29.createElement(AlertIcon, { variation, ariaHidden: true }),
    React29.createElement(
      View,
      { flex: "1" },
      heading && React29.createElement(View, { className: ComponentClassName.AlertHeading }, heading),
      React29.createElement(View, { className: ComponentClassName.AlertBody }, children)
    ),
    isDismissible && React29.createElement(Button, { ariaLabel: dismissButtonLabel, variation: "link", className: ComponentClassName.AlertDismiss, onClick: dismissAlert, ref: buttonRef }, (icons == null ? void 0 : icons.close) ?? React29.createElement(IconClose, { "aria-hidden": "true" }))
  ) : null;
};
var Alert = primitiveWithForwardRef(AlertPrimitive);
Alert.displayName = "Alert";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/Autocomplete.mjs
var React45 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/AutocompleteOption.mjs
var React30 = __toESM(require_react(), 1);
var AutocompleteOptionPrimitive = ({ children, className, isActive, ...rest }, ref) => {
  return React30.createElement(View, { "aria-selected": isActive, as: "li", role: "option", className: classNames(ComponentClassName.AutocompleteMenuOption, classNameModifierByFlag(ComponentClassName.AutocompleteMenuOption, "active", isActive), className), ref, ...rest }, children);
};
var AutocompleteOption = primitiveWithForwardRef(AutocompleteOptionPrimitive);
AutocompleteOption.displayName = "AutocompleteOption";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/AutocompleteMenu.mjs
var React32 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ScrollView/ScrollView.mjs
var React31 = __toESM(require_react(), 1);
var ScrollViewPrimitive = ({ children, className, orientation, ...rest }, ref) => React31.createElement(View, { className: classNames(ComponentClassName.ScrollView, classNameModifier(ComponentClassName.ScrollView, orientation), className), ref, ...rest }, children);
var ScrollView = primitiveWithForwardRef(ScrollViewPrimitive);
ScrollView.displayName = "ScrollView";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/AutocompleteMenu.mjs
var MenuHeader = ({ children }) => {
  if (!children) {
    return null;
  }
  return React32.createElement(View, { className: ComponentClassName.AutocompleteMenuHeader }, children);
};
var MenuFooter = ({ children }) => {
  if (!children) {
    return null;
  }
  return React32.createElement(View, { className: ComponentClassName.AutocompleteMenuFooter }, children);
};
var MenuLoading = ({ children }) => {
  return React32.createElement(View, { className: ComponentClassName.AutocompleteMenuLoading }, children ?? React32.createElement(
    React32.Fragment,
    null,
    React32.createElement(Loader, null),
    ComponentText.Autocomplete.loadingText
  ));
};
var MenuEmpty = ({ children }) => React32.createElement(View, { className: ComponentClassName.AutocompleteMenuEmpty }, children ?? ComponentText.Autocomplete.emptyText);
var AutocompleteMenuPrimitive = ({ ariaLabel, children, Header: Header10 = null, Footer: Footer10 = null, LoadingIndicator = null, Empty = null, isLoading, listboxId, ...rest }, ref) => {
  return React32.createElement(ScrollView, { className: ComponentClassName.AutocompleteMenu, ref, ...rest }, isLoading ? React32.createElement(MenuLoading, null, LoadingIndicator) : React32.createElement(
    React32.Fragment,
    null,
    React32.createElement(MenuHeader, null, Header10),
    children.length > 0 ? React32.createElement(ScrollView, { as: "ul", ariaLabel, className: ComponentClassName.AutocompleteMenuOptions, id: listboxId, role: "listbox" }, children) : React32.createElement(MenuEmpty, null, Empty),
    React32.createElement(MenuFooter, null, Footer10)
  ));
};
var AutocompleteMenu = primitiveWithForwardRef(AutocompleteMenuPrimitive);
AutocompleteMenu.displayName = "AutocompleteMenu";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/useAutocomplete.mjs
var React35 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/useStableId.mjs
var React34 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/useLayoutEffect.mjs
var React33 = __toESM(require_react(), 1);
var useLayoutEffect3 = (globalThis == null ? void 0 : globalThis.document) ? React33.useLayoutEffect : () => {
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/useStableId.mjs
var AUTO_GENERATED_ID_PREFIX = "amplify-id";
var useReactId = (
  // disable eslint below to allow usage of casting React to `any`, which ensures that TS
  // does not get confused about the existence of `useId` in React 17 and below
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  React34["useId".toString()] || (() => void 0)
);
var count = 0;
var useStableId = (id) => {
  const [stableId, setStableId] = React34.useState(useReactId());
  useLayoutEffect3(() => {
    if (!id) {
      setStableId((reactId) => reactId ?? String(count++));
    }
  }, [id]);
  return id ?? (stableId ? `${AUTO_GENERATED_ID_PREFIX}-${stableId}` : "");
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/useAutocomplete.mjs
var DEFAULT_KEYS = /* @__PURE__ */ new Set([ARROW_DOWN, ARROW_UP, ENTER_KEY, ESCAPE_KEY]);
var useAutocomplete = ({ defaultValue: defaultValue2 = "", value, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit }) => {
  const isControlled = value !== void 0;
  const [internalValue, setInternalValue] = React35.useState(defaultValue2);
  const composedValue = isControlled ? value : internalValue;
  const [isMenuOpen, setIsMenuOpen] = React35.useState(false);
  const [activeOption, setActiveOption] = React35.useState(null);
  const isCustomFiltering = isFunction(optionFilter);
  const filteredOptions = React35.useMemo(() => {
    const defaultFilter = (option) => {
      const { label } = option;
      return label == null ? void 0 : label.toLocaleLowerCase().includes(composedValue == null ? void 0 : composedValue.toLocaleLowerCase());
    };
    const filter = isCustomFiltering ? (option) => optionFilter(option, composedValue) : defaultFilter;
    return (options == null ? void 0 : options.filter(filter)) ?? [];
  }, [composedValue, optionFilter, isCustomFiltering, options]);
  const autocompleteId = useStableId();
  const listboxId = useStableId();
  const menuId = useStableId();
  const optionBaseId = useStableId();
  const activeIndex = filteredOptions.findIndex((option) => option === activeOption);
  const activeOptionId = (activeOption == null ? void 0 : activeOption.id) ?? (activeIndex !== -1 ? `${optionBaseId}-option-${activeIndex}` : void 0);
  const handleOnBlur = React35.useCallback((event) => {
    setIsMenuOpen(false);
    setActiveOption(null);
    if (isFunction(onBlur)) {
      onBlur(event);
    }
  }, [onBlur]);
  const handleOnChange = React35.useCallback((event) => {
    setActiveOption(null);
    setIsMenuOpen(true);
    if (!isControlled) {
      setInternalValue(event.target.value);
    }
    if (isFunction(onChange)) {
      onChange(event);
    }
  }, [isControlled, onChange]);
  const handleOnClear = React35.useCallback(() => {
    if (!isControlled) {
      setInternalValue("");
    }
    if (isFunction(onClear)) {
      onClear();
    }
  }, [isControlled, onClear]);
  const handleOnClick = React35.useCallback((event) => {
    setIsMenuOpen(true);
    if (isFunction(onClick)) {
      onClick(event);
    }
  }, [onClick]);
  const handleOnKeyDown = (event) => {
    const { key } = event;
    if (!DEFAULT_KEYS.has(key)) {
      return;
    }
    event.preventDefault();
    switch (key) {
      case ESCAPE_KEY: {
        if (isMenuOpen) {
          setIsMenuOpen(false);
          setActiveOption(null);
        } else {
          handleOnClear();
        }
        break;
      }
      case ENTER_KEY: {
        if (!activeOption) {
          if (isFunction(onSubmit)) {
            onSubmit(composedValue);
          }
        } else {
          const { label } = activeOption;
          if (!isControlled) {
            setInternalValue(label);
          }
          if (isFunction(onSelect)) {
            onSelect(activeOption);
          }
        }
        setIsMenuOpen(false);
        setActiveOption(null);
        break;
      }
      case ARROW_DOWN: {
        if (filteredOptions.length <= 0) {
          return;
        }
        setIsMenuOpen(true);
        const newActiveIndex = activeIndex >= filteredOptions.length - 1 ? 0 : activeIndex + 1;
        setActiveOption(filteredOptions[newActiveIndex]);
        break;
      }
      case ARROW_UP: {
        if (filteredOptions.length <= 0) {
          return;
        }
        setIsMenuOpen(true);
        const newActiveIndex = activeIndex <= 0 ? filteredOptions.length - 1 : activeIndex - 1;
        setActiveOption(filteredOptions[newActiveIndex]);
      }
    }
  };
  React35.useEffect(() => {
    const autocompleteElement = document.getElementById(autocompleteId);
    const menuElement = document.getElementById(menuId);
    if (menuElement && isMenuOpen && autocompleteElement) {
      const { bottom } = menuElement.getBoundingClientRect();
      const { offsetParent, offsetTop } = autocompleteElement;
      if (offsetParent === document.body && bottom > document.documentElement.clientHeight) {
        window.scrollTo({
          top: Math.min(
            bottom - document.documentElement.clientHeight + window.scrollY + 20,
            // Add 20 gap between menu bottom and window viewport bottom
            offsetTop
          ),
          behavior: "smooth"
        });
      }
    }
  }, [autocompleteId, isMenuOpen, menuId]);
  React35.useEffect(() => {
    const listboxElement = document.getElementById(listboxId);
    const activeOptionElement = strHasLength(activeOptionId) ? document.getElementById(activeOptionId) : null;
    if (activeOptionElement && listboxElement) {
      const { scrollTop, clientHeight } = listboxElement;
      const { offsetHeight, offsetTop } = activeOptionElement;
      const { top, bottom } = activeOptionElement.getBoundingClientRect();
      if (scrollTop > offsetTop) {
        listboxElement.scrollTop = offsetTop;
      }
      if (scrollTop + clientHeight < offsetTop + offsetHeight) {
        listboxElement.scrollTop = offsetTop + offsetHeight - clientHeight;
      }
      if (top < 0 || bottom > document.documentElement.clientHeight) {
        activeOptionElement.scrollIntoView({
          behavior: "smooth",
          block: "nearest"
        });
      }
    }
  }, [activeOptionId, listboxId]);
  return {
    activeOptionId,
    autocompleteId,
    composedValue,
    filteredOptions,
    handleOnBlur,
    handleOnClear,
    handleOnClick,
    handleOnChange,
    handleOnKeyDown,
    isControlled,
    isCustomFiltering,
    isMenuOpen,
    listboxId,
    menuId,
    optionBaseId,
    setActiveOption,
    setIsMenuOpen,
    setInternalValue
  };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/HighlightMatch/HighlightMatch.mjs
var React36 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/getTestId.mjs
var getTestId = (testId, component) => testId && component ? `${testId}-${component}` : void 0;

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/HighlightMatch/HighlightMatch.mjs
var HighlightMatchPrimitive = ({ children, className, query, testId, ...rest }, ref) => {
  const matchTestId = getTestId(testId, "match");
  const startIndex = children == null ? void 0 : children.toLocaleLowerCase().indexOf(query == null ? void 0 : query.toLocaleLowerCase());
  if (strHasLength(query) && startIndex !== -1) {
    const match = children.substring(startIndex, startIndex + query.length);
    return React36.createElement(
      View,
      { as: "span", className: classNames(className, ComponentClassName.HighlightMatch), testId, ref, ...rest },
      children.substring(0, startIndex),
      React36.createElement(View, { as: "strong", className: ComponentClassName.HighlightMatchHighlighted, testId: matchTestId }, match),
      children.substring(startIndex + query.length)
    );
  }
  return React36.createElement(View, { as: "span", testId }, children);
};
var HighlightMatch = primitiveWithForwardRef(HighlightMatchPrimitive);
HighlightMatch.displayName = "HighlightMatch";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SearchField/SearchField.mjs
var React44 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconSearch.mjs
var React37 = __toESM(require_react(), 1);
var IconSearch = (props) => {
  const { className, ...rest } = props;
  return React37.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React37.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React37.createElement("path", { d: "M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14V14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SearchField/SearchFieldButton.mjs
var React38 = __toESM(require_react(), 1);
var ariaLabelText2 = ComponentText.SearchField.searchButtonLabel;
var SearchFieldButtonPrimitive = ({ size: size2, ...props }, ref) => {
  const icons = useIcons("searchField");
  return React38.createElement(FieldGroupIconButton, { ariaLabel: ariaLabelText2, className: ComponentClassName.SearchFieldSearch, size: size2, ref, type: "submit", ...props }, (icons == null ? void 0 : icons.search) ?? React38.createElement(IconSearch, null));
};
var SearchFieldButton = primitiveWithForwardRef(SearchFieldButtonPrimitive);
SearchFieldButton.displayName = "SearchFieldButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextField/TextField.mjs
var React41 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/FieldGroup/FieldGroup.mjs
var React39 = __toESM(require_react(), 1);
var FieldGroupPrimitive = ({ children, className, innerEndComponent, innerStartComponent, orientation = "horizontal", outerEndComponent, outerStartComponent, variation, ...rest }, ref) => {
  const hasInnerStartComponent = innerStartComponent != null;
  const hasInnerEndComponent = innerEndComponent != null;
  const fieldGroupHasInnerStartClassName = hasInnerStartComponent ? ComponentClassName.FieldGroupHasInnerStart : null;
  const fieldGroupHasInnerEndClassName = hasInnerEndComponent ? ComponentClassName.FieldGroupHasInnerEnd : null;
  const componentClasses = classNames(ComponentClassName.FieldGroup, fieldGroupHasInnerStartClassName, fieldGroupHasInnerEndClassName, classNameModifier(ComponentClassName.FieldGroup, orientation), className);
  return React39.createElement(
    Flex,
    { className: componentClasses, ref, ...rest },
    outerStartComponent && React39.createElement(View, { className: classNames(ComponentClassName.FieldGroupOuterStart, classNameModifier(ComponentClassName.FieldGroupOuterStart, variation)) }, outerStartComponent),
    React39.createElement(
      View,
      { className: classNames(ComponentClassName.FieldGroupFieldWrapper, classNameModifier(ComponentClassName.FieldGroupFieldWrapper, orientation)) },
      innerStartComponent && React39.createElement(View, { className: ComponentClassName.FieldGroupInnerStart }, innerStartComponent),
      children,
      innerEndComponent && React39.createElement(View, { className: ComponentClassName.FieldGroupInnerEnd }, innerEndComponent)
    ),
    outerEndComponent && React39.createElement(View, { className: classNames(ComponentClassName.FieldGroupOuterEnd, classNameModifier(ComponentClassName.FieldGroupOuterEnd, variation)) }, outerEndComponent)
  );
};
var FieldGroup = primitiveWithForwardRef(FieldGroupPrimitive);
FieldGroup.displayName = "FieldGroup";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Input/Input.mjs
var React40 = __toESM(require_react(), 1);
var InputPrimitive = ({ autoComplete, checked, className, defaultChecked, defaultValue: defaultValue2, id, isDisabled, isReadOnly, isRequired, size: size2, type = "text", hasError = false, value, variation, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Input, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Input, variation), classNameModifierByFlag(ComponentClassName.Input, "error", hasError), classNameModifier(ComponentClassName.Input, size2), className);
  const { isFieldsetDisabled } = useFieldset();
  return React40.createElement(View, { "aria-invalid": hasError, as: "input", autoComplete, checked, className: componentClasses, defaultChecked, defaultValue: defaultValue2, isDisabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, id, readOnly: isReadOnly, ref, required: isRequired, type, value, ...rest });
};
var Input = primitiveWithForwardRef(InputPrimitive);
Input.displayName = "Input";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/utils/splitPrimitiveProps.mjs
var isStyleKey = (prop) => {
  return prop in ComponentPropsToStylePropsMap;
};
var splitPrimitiveProps = (props) => {
  const splitProps = {
    styleProps: {},
    rest: {}
  };
  Object.keys(props).forEach((prop) => {
    if (isStyleKey(prop)) {
      splitProps.styleProps = {
        ...splitProps.styleProps,
        [prop]: props[prop]
      };
    } else {
      splitProps.rest = {
        ...splitProps.rest,
        [prop]: props[prop]
      };
    }
  });
  return splitProps;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextField/TextField.mjs
var TextFieldPrimitive = (props, ref) => {
  const { className, descriptiveText, errorMessage, hasError = false, id, innerEndComponent, innerStartComponent, label, labelHidden = false, outerEndComponent, outerStartComponent, size: size2, testId, variation, inputStyles, ..._rest } = props;
  const fieldId = useStableId(id);
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  return React41.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.TextField, className), testId, ...styleProps },
    React41.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),
    React41.createElement(FieldDescription, { id: descriptionId, labelHidden, descriptiveText }),
    React41.createElement(
      FieldGroup,
      { outerStartComponent, outerEndComponent, innerStartComponent, innerEndComponent, variation },
      React41.createElement(Input, { "aria-describedby": ariaDescribedBy, hasError, id: fieldId, ref, size: size2, variation, ...inputStyles, ...rest })
    ),
    React41.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var TextField = primitiveWithForwardRef(TextFieldPrimitive);
TextField.displayName = "TextField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SearchField/useSearchField.mjs
var React43 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/hooks/useComposeRefsCallback.mjs
var React42 = __toESM(require_react(), 1);
function useComposeRefsCallback({ externalRef, internalRef }) {
  return React42.useCallback((node) => {
    if (isFunction(externalRef)) {
      externalRef(node);
    } else if (externalRef) {
      externalRef.current = node;
    }
    internalRef.current = node;
  }, [externalRef, internalRef]);
}

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SearchField/useSearchField.mjs
var DEFAULT_KEYS2 = /* @__PURE__ */ new Set([ESCAPE_KEY, ENTER_KEY]);
var useSearchField = ({ defaultValue: defaultValue2 = "", value, onChange, onClear, onSubmit, externalRef }) => {
  const isControlled = value !== void 0;
  const [internalValue, setInternalValue] = React43.useState(defaultValue2);
  const composedValue = isControlled ? value : internalValue;
  const internalRef = React43.useRef(null);
  const composedRefs = useComposeRefsCallback({
    externalRef,
    internalRef
  });
  const onClearHandler = React43.useCallback(() => {
    var _a;
    if (!isControlled) {
      setInternalValue("");
    }
    (_a = internalRef == null ? void 0 : internalRef.current) == null ? void 0 : _a.focus();
    if (isFunction(onClear)) {
      onClear();
    }
  }, [isControlled, setInternalValue, onClear]);
  const onSubmitHandler = React43.useCallback((value2) => {
    if (isFunction(onSubmit)) {
      onSubmit(value2);
    }
  }, [onSubmit]);
  const onKeyDown = React43.useCallback((event) => {
    const { key } = event;
    if (!DEFAULT_KEYS2.has(key)) {
      return;
    }
    event.preventDefault();
    if (key === ESCAPE_KEY) {
      onClearHandler();
    } else if (key === ENTER_KEY) {
      onSubmitHandler(composedValue);
    }
  }, [composedValue, onClearHandler, onSubmitHandler]);
  const handleOnChange = React43.useCallback((event) => {
    if (!isControlled) {
      setInternalValue(event.target.value);
    }
    if (isFunction(onChange)) {
      onChange(event);
    }
  }, [isControlled, onChange, setInternalValue]);
  const onClick = React43.useCallback(() => {
    onSubmitHandler(composedValue);
  }, [onSubmitHandler, composedValue]);
  return {
    composedValue,
    onClearHandler,
    onKeyDown,
    onClick,
    handleOnChange,
    composedRefs
  };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SearchField/SearchField.mjs
var SearchFieldPrimitive = ({ autoComplete = "off", className, isDisabled, clearButtonLabel, labelHidden = true, name = "q", hasSearchButton = true, hasSearchIcon = false, onChange, onClear, onSubmit, searchButtonRef, size: size2, defaultValue: defaultValue2, value, ...rest }, ref) => {
  const { composedValue, onClearHandler, onKeyDown, onClick, handleOnChange, composedRefs } = useSearchField({
    defaultValue: defaultValue2,
    value,
    onChange,
    onClear,
    onSubmit,
    externalRef: ref
  });
  const SearchButton = hasSearchButton ? React44.createElement(SearchFieldButton, { isDisabled, onClick, ref: searchButtonRef, size: size2 }) : void 0;
  const SearchIcon = hasSearchIcon ? React44.createElement(
    FieldGroupIcon,
    null,
    React44.createElement(IconSearch, null)
  ) : void 0;
  return React44.createElement(TextField, { autoComplete, className: classNames(ComponentClassName.SearchField, className), labelHidden, innerStartComponent: SearchIcon, innerEndComponent: React44.createElement(FieldClearButton, { ariaLabel: clearButtonLabel, excludeFromTabOrder: true, isVisible: !isDisabled && strHasLength(composedValue), onClick: onClearHandler, size: size2, variation: "link" }), isDisabled, name, onChange: handleOnChange, onKeyDown, outerEndComponent: SearchButton, ref: composedRefs, size: size2, value: composedValue, ...rest });
};
var SearchField = primitiveWithForwardRef(SearchFieldPrimitive);
SearchField.displayName = "SearchField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Autocomplete/Autocomplete.mjs
var AutocompletePrimitive = ({ className, defaultValue: defaultValue2, value, isLoading = false, menuSlots = {}, options, optionFilter, onBlur, onChange, onClear, onClick, onSelect, onSubmit, renderOption, testId, ...rest }, ref) => {
  const { activeOptionId, autocompleteId, composedValue, filteredOptions, handleOnBlur, handleOnClear, handleOnClick, handleOnChange, handleOnKeyDown, isControlled, isCustomFiltering, isMenuOpen, listboxId, menuId, optionBaseId, setActiveOption, setIsMenuOpen, setInternalValue } = useAutocomplete({
    defaultValue: defaultValue2,
    value,
    options,
    optionFilter,
    onBlur,
    onChange,
    onClear,
    onClick,
    onSelect,
    onSubmit
  });
  const comboboxProps = {
    role: "combobox",
    "aria-activedescendant": activeOptionId,
    "aria-autocomplete": "list",
    "aria-controls": isMenuOpen ? menuId : void 0,
    "aria-expanded": isMenuOpen,
    "aria-haspopup": "listbox",
    "aria-owns": isMenuOpen ? menuId : void 0
  };
  const Options = filteredOptions.map((option, idx) => {
    const { id, label, ...rest2 } = option;
    const handleOnClick2 = () => {
      setIsMenuOpen(false);
      setActiveOption(null);
      if (!isControlled) {
        setInternalValue(label);
      }
      if (isFunction(onSelect)) {
        onSelect(option);
      }
    };
    const handleOnMouseDown = (event) => {
      event.preventDefault();
    };
    const handleOnMouseMove = () => {
      setActiveOption(option);
    };
    const optionId = id ?? `${optionBaseId}-option-${idx}`;
    const isActive = optionId === activeOptionId;
    return React45.createElement(AutocompleteOption, { isActive, id: optionId, key: optionId, onClick: handleOnClick2, onMouseDown: handleOnMouseDown, onMouseMove: handleOnMouseMove, ...rest2 }, isFunction(renderOption) ? renderOption(option, composedValue) : isCustomFiltering ? label : React45.createElement(HighlightMatch, { query: composedValue }, label));
  });
  return React45.createElement(
    View,
    { className: classNames(ComponentClassName.Autocomplete, className), id: autocompleteId, testId },
    React45.createElement(SearchField, { hasSearchButton: false, hasSearchIcon: true, onBlur: handleOnBlur, onChange: handleOnChange, onClear: handleOnClear, onClick: handleOnClick, onKeyDown: handleOnKeyDown, ref, value: composedValue, ...comboboxProps, ...rest }),
    isMenuOpen ? React45.createElement(AutocompleteMenu, { id: menuId, isLoading, listboxId, ...menuSlots }, Options) : null
  );
};
var Autocomplete = primitiveWithForwardRef(AutocompletePrimitive);
Autocomplete.displayName = "Autocomplete";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Badge/Badge.mjs
var React46 = __toESM(require_react(), 1);
var BadgePrimitive = ({ className, children, variation, size: size2, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Badge, className, classNameModifier(ComponentClassName.Badge, variation), classNameModifier(ComponentClassName.Badge, size2));
  return React46.createElement(View, { as: "span", className: componentClasses, ref, ...rest }, children);
};
var Badge = primitiveWithForwardRef(BadgePrimitive);
Badge.displayName = "Badge";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/Breadcrumbs.mjs
var React52 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/BreadcrumbItem.mjs
var React47 = __toESM(require_react(), 1);
var BreadcrumbItemPrimitive = ({ className, children, as = "li", ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.BreadcrumbsItem, className);
  return React47.createElement(View, { ...rest, as, className: componentClasses, ref }, children);
};
var BreadcrumbItem = primitiveWithForwardRef(BreadcrumbItemPrimitive);
BreadcrumbItem.displayName = "Breadcrumbs.Item";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/BreadcrumbLink.mjs
var React49 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Link/Link.mjs
var React48 = __toESM(require_react(), 1);
var LinkPrimitive = ({ as = "a", children, className, isExternal, ...rest }, ref) => {
  return React48.createElement(View, { as, className: classNames(ComponentClassName.Link, className), ref, rel: isExternal ? "noopener noreferrer" : void 0, target: isExternal ? "_blank" : void 0, ...rest }, children);
};
var Link = primitiveWithForwardRef(LinkPrimitive);
Link.displayName = "Link";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/BreadcrumbLink.mjs
var BreadcrumbLinkPrimitive = ({ className, children, href, isCurrent, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.BreadcrumbsLink, classNameModifierByFlag(ComponentClassName.BreadcrumbsLink, "current", isCurrent), className);
  if (isCurrent) {
    const ariaCurrent = rest["aria-current"] ?? "page";
    const as = rest.as ?? "span";
    return React49.createElement(Text, { ...rest, as, "aria-current": ariaCurrent, className: componentClasses, ref }, children);
  } else {
    return React49.createElement(Link, { ...rest, className: componentClasses, ref, href }, children);
  }
};
var BreadcrumbLink = primitiveWithForwardRef(BreadcrumbLinkPrimitive);
BreadcrumbLink.displayName = "Breadcrumbs.Link";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/BreadcrumbSeparator.mjs
var React50 = __toESM(require_react(), 1);
var BreadcrumbSeparatorPrimitive = ({ className, children = "/", as = "span", ...rest }, ref) => {
  const ariaHidden = rest["aria-hidden"] ?? "true";
  return React50.createElement(View, { ...rest, as, ref, "aria-hidden": ariaHidden, className: classNames(ComponentClassName.BreadcrumbsSeparator, className) }, children);
};
var BreadcrumbSeparator = primitiveWithForwardRef(BreadcrumbSeparatorPrimitive);
BreadcrumbSeparator.displayName = "Breadcrumbs.Separator";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/BreadcrumbContainer.mjs
var React51 = __toESM(require_react(), 1);
var BreadcrumbContainerPrimitive = ({ className, children, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Breadcrumbs, className);
  const ariaLabel = rest["aria-label"] ?? "Breadcrumb";
  return React51.createElement(
    View,
    { ...rest, as: "nav", "aria-label": ariaLabel, className: componentClasses, ref },
    React51.createElement(View, { as: "ol", className: ComponentClassName.BreadcrumbsList }, children)
  );
};
var BreadcrumbContainer = primitiveWithForwardRef(BreadcrumbContainerPrimitive);
BreadcrumbContainer.displayName = "Breadcrumbs.Container";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Breadcrumbs/Breadcrumbs.mjs
var BreadcrumbsPrimitive = ({ className, items, separator = React52.createElement(BreadcrumbSeparator, null), ...rest }, ref) => {
  const ariaLabel = rest["aria-label"] ?? "Breadcrumb";
  return React52.createElement(BreadcrumbContainer, { ...rest, "aria-label": ariaLabel, className, ref }, items == null ? void 0 : items.map(({ href, label }, idx) => {
    const isCurrent = items.length - 1 === idx;
    return React52.createElement(
      BreadcrumbItem,
      { key: `${href}${idx}` },
      React52.createElement(BreadcrumbLink, { href, isCurrent }, label),
      isCurrent ? null : separator
    );
  }));
};
var Breadcrumbs = Object.assign(primitiveWithForwardRef(BreadcrumbsPrimitive), {
  Item: BreadcrumbItem,
  Link: BreadcrumbLink,
  Separator: BreadcrumbSeparator,
  Container: BreadcrumbContainer
});
Breadcrumbs.displayName = "Breadcrumbs";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ButtonGroup/ButtonGroup.mjs
var React53 = __toESM(require_react(), 1);
var ButtonGroupPrimitive = ({ className, children, role = "group", size: _size, variation: _variation, ...rest }, ref) => React53.createElement(Flex, { className: classNames(ComponentClassName.ButtonGroup, className), role, ref, ...rest }, React53.Children.map(children, (child) => {
  if (React53.isValidElement(child)) {
    const { size: size2 = _size, variation = _variation } = child.props;
    return React53.cloneElement(child, { size: size2, variation });
  }
  return child;
}));
var ButtonGroup = primitiveWithForwardRef(ButtonGroupPrimitive);
ButtonGroup.displayName = "ButtonGroup";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Card/Card.mjs
var React54 = __toESM(require_react(), 1);
var CardPrimitive = ({ className, children, variation, ...rest }, ref) => {
  return React54.createElement(View, { className: classNames(ComponentClassName.Card, classNameModifier(ComponentClassName.Card, variation), className), ref, ...rest }, children);
};
var Card = primitiveWithForwardRef(CardPrimitive);
Card.displayName = "Card";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/CheckboxField/CheckboxField.mjs
var React59 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Checkbox/Checkbox.mjs
var React58 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconCheck.mjs
var React55 = __toESM(require_react(), 1);
var IconCheck = (props) => {
  const { className, ...rest } = props;
  return React55.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React55.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React55.createElement("path", { d: "M9.00016 16.1698L4.83016 11.9998L3.41016 13.4098L9.00016 18.9998L21.0002 6.99984L19.5902 5.58984L9.00016 16.1698Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconIndeterminate.mjs
var React56 = __toESM(require_react(), 1);
var IconIndeterminate = (props) => {
  const { className, ...rest } = props;
  return React56.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React56.createElement(
      "svg",
      { xmlns: "http://www.w3.org/2000/svg", height: "24", width: "24", viewBox: "0 0 24 24" },
      React56.createElement("line", { x1: "4", x2: "20", y1: "12", y2: "12", stroke: "currentColor", strokeWidth: "3" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/VisuallyHidden/VisuallyHidden.mjs
var React57 = __toESM(require_react(), 1);
var VisuallyHiddenPrimitive = ({ as = "span", children, className, ...rest }, ref) => React57.createElement(View, { as, className: classNames(ComponentClassName.VisuallyHidden, className), ref, ...rest }, children);
var VisuallyHidden = primitiveWithForwardRef(VisuallyHiddenPrimitive);
VisuallyHidden.displayName = "VisuallyHidden";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Checkbox/Checkbox.mjs
var CheckboxPrimitive = ({ checked: controlledChecked, className, defaultChecked, hasError, isDisabled, isIndeterminate, label, labelHidden, labelPosition, onBlur: _onBlur, onFocus: _onFocus, onChange: _onChange, testId, inputStyles, ..._rest }, ref) => {
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  const [focused, setFocused] = React58.useState(false);
  const icons = useIcons("checkbox");
  const { isFieldsetDisabled } = useFieldset();
  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;
  const isControlled = controlledChecked !== void 0;
  const [localChecked, setLocalChecked] = React58.useState(() => (
    // if controlled, initialize to `controlledChecked` else `defaultChecked`
    isControlled ? controlledChecked : defaultChecked
  ));
  const checked = isControlled ? controlledChecked : localChecked;
  const onChange = (e) => {
    if (isFunction(_onChange)) {
      _onChange(e);
    }
    if (!isControlled) {
      setLocalChecked(e.target.checked);
    }
  };
  const onFocus = (e) => {
    if (isFunction(_onFocus)) {
      _onFocus(e);
    }
    setFocused(true);
  };
  const onBlur = (e) => {
    if (isFunction(_onBlur)) {
      _onBlur(e);
    }
    setFocused(false);
  };
  const dataId = useStableId();
  React58.useEffect(() => {
    const input = document.querySelector(`[data-id="${dataId}"]`);
    if (input && typeof isIndeterminate === "boolean") {
      input.indeterminate = isIndeterminate;
    }
  }, [dataId, isIndeterminate]);
  const buttonTestId = getTestId(testId, ComponentClassName.CheckboxButton);
  const iconTestId = getTestId(testId, ComponentClassName.CheckboxIcon);
  const labelTestId = getTestId(testId, ComponentClassName.CheckboxLabel);
  const flexClasses = classNames(ComponentClassName.CheckboxButton, classNameModifierByFlag(ComponentClassName.CheckboxButton, "disabled", shouldBeDisabled), classNameModifierByFlag(ComponentClassName.CheckboxButton, "error", hasError), classNameModifierByFlag(ComponentClassName.CheckboxButton, "focused", focused));
  const iconClasses = classNames(ComponentClassName.CheckboxIcon, classNameModifierByFlag(ComponentClassName.CheckboxIcon, "checked", checked), classNameModifierByFlag(ComponentClassName.CheckboxIcon, "disabled", shouldBeDisabled), classNameModifierByFlag(ComponentClassName.CheckboxIcon, "indeterminate", isIndeterminate));
  const iconProps = {
    className: classNames(iconClasses),
    "data-checked": localChecked,
    "data-disabled": shouldBeDisabled,
    "data-testid": iconTestId
  };
  const checkedIcon = (icons == null ? void 0 : icons.checked) ? React58.createElement(View, { as: "span", className: classNames(iconClasses) }, icons.checked) : React58.createElement(IconCheck, { ...iconProps });
  const indeterminateIcon = (icons == null ? void 0 : icons.indeterminate) ? React58.createElement(View, { as: "span", className: classNames(iconClasses) }, icons.indeterminate) : React58.createElement(IconIndeterminate, { ...iconProps });
  return React58.createElement(
    Flex,
    { as: "label", className: classNames(ComponentClassName.Checkbox, classNameModifierByFlag(ComponentClassName.Checkbox, "disabled", shouldBeDisabled), labelPosition ? `amplify-label-${labelPosition}` : null, className), testId, ...styleProps },
    React58.createElement(
      VisuallyHidden,
      null,
      React58.createElement(Input, { checked: controlledChecked, className: ComponentClassName.CheckboxInput, "data-id": dataId, defaultChecked, isDisabled: shouldBeDisabled, onBlur, onChange, onFocus, ref, type: "checkbox", ...rest })
    ),
    label && React58.createElement(Text, { as: "span", className: classNames(ComponentClassName.CheckboxLabel, classNameModifierByFlag(ComponentClassName.CheckboxLabel, `disabled`, shouldBeDisabled), {
      [ComponentClassName.VisuallyHidden]: labelHidden
    }), "data-disabled": shouldBeDisabled, testId: labelTestId }, label),
    React58.createElement(Flex, { "aria-hidden": "true", as: "span", className: flexClasses, "data-checked": checked, "data-disabled": shouldBeDisabled, "data-focus": focused, "data-error": hasError, testId: buttonTestId, ...inputStyles }, isIndeterminate ? indeterminateIcon : checkedIcon)
  );
};
var Checkbox = primitiveWithForwardRef(CheckboxPrimitive);
Checkbox.displayName = "Checkbox";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/CheckboxField/CheckboxField.mjs
var CheckboxFieldPrimitive = ({ className, errorMessage, hasError = false, labelHidden = false, labelPosition, testId, size: size2, ...rest }, ref) => {
  const checkboxTestId = getTestId(testId, ComponentClassName.Checkbox);
  return React59.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, ComponentClassName.CheckboxField, classNameModifier(ComponentClassName.Field, size2), className), testId },
    React59.createElement(Checkbox, { hasError, labelHidden, testId: checkboxTestId, labelPosition, ref, ...rest }),
    React59.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var CheckboxField = primitiveWithForwardRef(CheckboxFieldPrimitive);
CheckboxField.displayName = "CheckboxField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Collection/Collection.mjs
var React68 = __toESM(require_react(), 1);
var import_debounce = __toESM(require_debounce(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Grid/Grid.mjs
var React60 = __toESM(require_react(), 1);
var GridPrimitive = ({ className, children, ...rest }, ref) => React60.createElement(View, { className: classNames(ComponentClassName.Grid, className), ref, ...rest }, children);
var Grid = primitiveWithForwardRef(GridPrimitive);
Grid.displayName = "Grid";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/Pagination.mjs
var React66 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/usePaginationItems.mjs
var React65 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/useRange.mjs
var React61 = __toESM(require_react(), 1);
var ELLIPSIS = "...";
var useRange = (currentPageParam, totalPagesParam, siblingCountParam = 1) => {
  const range = React61.useMemo(() => {
    const currentPage = Math.max(currentPageParam, 1);
    const siblingCount = Math.max(siblingCountParam, 1);
    const totalPages = Math.max(currentPage, totalPagesParam);
    const firstPage = 1;
    const lastPage = totalPages;
    const maxNumOfItems = 5 + 2 * siblingCount;
    if (totalPages < maxNumOfItems) {
      return getConsecutiveIntArray(1, totalPages);
    }
    const leftSiblingPage = Math.max(currentPage - siblingCount, firstPage);
    const rightSiblingPage = Math.min(currentPage + siblingCount, lastPage);
    const shouldRenderStartEllipsis = leftSiblingPage > 2;
    const shouldRenderEndEllipsis = rightSiblingPage < lastPage - 1;
    if (shouldRenderStartEllipsis && !shouldRenderEndEllipsis) {
      const rightItemCount = 3 + 2 * siblingCount;
      const rightRange = getConsecutiveIntArray(lastPage - rightItemCount + 1, lastPage);
      return [firstPage, ELLIPSIS, ...rightRange];
    }
    if (!shouldRenderStartEllipsis && shouldRenderEndEllipsis) {
      const leftItemCount = 3 + 2 * siblingCount;
      const leftRange = getConsecutiveIntArray(firstPage, leftItemCount);
      return [...leftRange, ELLIPSIS, lastPage];
    }
    const middleRange = getConsecutiveIntArray(leftSiblingPage, rightSiblingPage);
    return [firstPage, ELLIPSIS, ...middleRange, ELLIPSIS, lastPage];
  }, [currentPageParam, totalPagesParam, siblingCountParam]);
  return range;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/PaginationItem.mjs
var React64 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconChevronLeft.mjs
var React62 = __toESM(require_react(), 1);
var IconChevronLeft = (props) => {
  const { className, ...rest } = props;
  return React62.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React62.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React62.createElement("path", { d: "M15.41 7.41L14 6L8 12L14 18L15.41 16.59L10.83 12L15.41 7.41Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconChevronRight.mjs
var React63 = __toESM(require_react(), 1);
var IconChevronRight = (props) => {
  const { className, ...rest } = props;
  return React63.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React63.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React63.createElement("path", { d: "M9.99984 6L8.58984 7.41L13.1698 12L8.58984 16.59L9.99984 18L15.9998 12L9.99984 6Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/PaginationItem.mjs
var PAGINATION_CURRENT_TEST_ID = "current";
var PAGINATION_ELLIPSIS_TEST_ID = "ellipsis";
var PaginationItem = ({ type, page, currentPage, currentPageLabel = ComponentText.PaginationItem.currentPageLabel, isDisabled, onClick, ariaLabel, ...rest }) => {
  const icons = useIcons("pagination");
  const nextClasses = classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, "link"), classNameModifierByFlag(ComponentClassName.PaginationItem, "disabled", isDisabled));
  const previousClasses = classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, "link"), classNameModifierByFlag(ComponentClassName.PaginationItem, "disabled", isDisabled));
  switch (type) {
    case "page":
      return React64.createElement(View, { as: "li" }, page === currentPage ? React64.createElement(
        Button,
        { "aria-current": "page", size: "small", variation: "link", className: classNames(ComponentClassName.PaginationItem, classNameModifier(ComponentClassName.PaginationItem, "current")), testId: PAGINATION_CURRENT_TEST_ID, ...rest },
        React64.createElement(
          VisuallyHidden,
          null,
          currentPageLabel,
          ":"
        ),
        page
      ) : React64.createElement(Button, { className: ComponentClassName.PaginationItem, size: "small", variation: "link", onClick: () => {
        onClick == null ? void 0 : onClick();
      }, ariaLabel, ...rest }, page));
    case "next":
      return React64.createElement(
        View,
        { as: "li" },
        React64.createElement(Button, { className: nextClasses, size: "small", variation: "link", isDisabled, onClick: () => {
          onClick == null ? void 0 : onClick();
        }, ariaLabel, ...rest }, (icons == null ? void 0 : icons.next) ?? React64.createElement(IconChevronRight, null))
      );
    case "previous":
      return React64.createElement(
        View,
        { as: "li" },
        React64.createElement(Button, { className: previousClasses, size: "small", variation: "link", isDisabled, onClick: () => {
          onClick == null ? void 0 : onClick();
        }, ariaLabel, ...rest }, (icons == null ? void 0 : icons.previous) ?? React64.createElement(IconChevronLeft, null))
      );
    case "ellipsis":
      return React64.createElement(
        View,
        { as: "li" },
        React64.createElement(Flex, { as: "span", className: classNameModifier(ComponentClassName.PaginationItem, "ellipsis"), testId: PAGINATION_ELLIPSIS_TEST_ID, ...rest }, "…")
      );
  }
  return React64.createElement(View, { as: "li" });
};
PaginationItem.displayName = "PaginationItem";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/usePaginationItems.mjs
var usePaginationItems = ({ currentPage, totalPages, hasMorePages, siblingCount, currentPageLabel = ComponentText.PaginationItem.currentPageLabel, pageLabel = ComponentText.PaginationItem.pageLabel, previousLabel = ComponentText.PaginationItem.previousLabel, nextLabel = ComponentText.PaginationItem.nextLabel, onNext, onPrevious, onChange }) => {
  const previousItem = React65.createElement(PaginationItem, { type: "previous", key: "previous", currentPage, onClick: onPrevious, isDisabled: currentPage <= 1, ariaLabel: previousLabel });
  const nextItem = React65.createElement(PaginationItem, { type: "next", key: "next", currentPage, onClick: onNext, isDisabled: currentPage >= totalPages && !hasMorePages, ariaLabel: nextLabel });
  const range = useRange(currentPage, totalPages, siblingCount);
  const pageItems = React65.useMemo(() => range.map((item, idx) => {
    if (item === ELLIPSIS) {
      return React65.createElement(PaginationItem, { type: "ellipsis", key: idx === 1 ? "start-ellipsis" : "end-ellipsis" });
    }
    return (
      // Note: Do NOT use index for `key` and instead use page number
      // otherwise, react cannot update the component correctly with its diff mechanism
      React65.createElement(PaginationItem, {
        key: item,
        type: "page",
        page: item,
        currentPage,
        currentPageLabel,
        onClick: () => onChange == null ? void 0 : onChange(item, currentPage),
        /**
         * @todo We should consider how we would support interpolation in our string translations.
         * This works for "Go to page 31" or "translatedText {s}" as the supplied string
         * But for Arabic or Japanese or some other languages the supplied string might look like: "{s} translatedText".
         */
        ariaLabel: `${pageLabel} ${item}`
      })
    );
  }), [range, currentPage, currentPageLabel, pageLabel, onChange]);
  return [previousItem, ...pageItems, nextItem];
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/Pagination.mjs
var PaginationPrimitive = ({ className, currentPage = 1, totalPages, hasMorePages = false, siblingCount, currentPageLabel, pageLabel, previousLabel, nextLabel, onNext, onPrevious, onChange, ...rest }, ref) => {
  const paginationItems = usePaginationItems({
    currentPage,
    totalPages,
    hasMorePages,
    siblingCount,
    currentPageLabel,
    pageLabel,
    previousLabel,
    nextLabel,
    onNext,
    onPrevious,
    onChange
  });
  return React66.createElement(
    View,
    { as: "nav", className: classNames(ComponentClassName.Pagination, className), ref, ...rest },
    React66.createElement(Flex, { as: "ol", justifyContent: "center", alignItems: "center", gap: "inherit" }, paginationItems)
  );
};
var Pagination = primitiveWithForwardRef(PaginationPrimitive);
Pagination.displayName = "Pagination";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Pagination/usePagination.mjs
var React67 = __toESM(require_react(), 1);
var usePagination = (props) => {
  const { currentPage: initialPage = 1, totalPages, hasMorePages = false, siblingCount = 1 } = props;
  const sanitizedInitialPage = Math.max(initialPage, 1);
  const sanitizedTotalPages = Math.max(sanitizedInitialPage, totalPages);
  const [currentPage, setCurrentPage] = React67.useState(sanitizedInitialPage);
  React67.useEffect(() => {
    setCurrentPage(sanitizedInitialPage);
  }, [sanitizedInitialPage, sanitizedTotalPages]);
  const onNext = React67.useCallback(() => {
    if (currentPage < sanitizedTotalPages) {
      setCurrentPage(currentPage + 1);
    }
  }, [currentPage, sanitizedTotalPages]);
  const onPrevious = React67.useCallback(() => {
    if (currentPage > 1) {
      setCurrentPage(currentPage - 1);
    }
  }, [currentPage]);
  const onChange = React67.useCallback((newPageIndex) => {
    if (typeof newPageIndex === "number") {
      setCurrentPage(newPageIndex);
    }
  }, []);
  return {
    currentPage,
    hasMorePages,
    onChange,
    onNext,
    onPrevious,
    // The sibling count should not be less than 1
    siblingCount: Math.max(siblingCount, 1),
    totalPages: sanitizedTotalPages
  };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Collection/utils.mjs
var getItemsAtPage = (items, page, itemsPerPage) => {
  if (page < 1 || itemsPerPage < 1) {
    return [];
  }
  const startIndex = (page - 1) * itemsPerPage;
  return items.slice(startIndex, startIndex + itemsPerPage);
};
var itemHasText = (item, text) => {
  if (strHasLength(item)) {
    return item.toLowerCase().includes(text.toLowerCase());
  }
  if (typeof item === "object" && item !== null) {
    return Object.values(item).some((subItem) => itemHasText(subItem, text));
  }
  return false;
};
var getPageCount = (totalItems, itemsPerPage) => Math.ceil(totalItems / itemsPerPage);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Collection/Collection.mjs
var DEFAULT_PAGE_SIZE = 10;
var TYPEAHEAD_DELAY_MS = 300;
var ListCollection = ({ children, direction = "column", items, ...rest }) => React68.createElement(Flex, { direction, ...rest }, Array.isArray(items) ? items.map(children) : null);
var GridCollection = ({ children, items, ...rest }) => React68.createElement(Grid, { ...rest }, Array.isArray(items) ? items.map(children) : null);
var renderCollectionOrNoResultsFound = (collection, items, searchNoResultsFound) => {
  if (items.length) {
    return collection;
  }
  if (searchNoResultsFound) {
    return searchNoResultsFound;
  }
  return React68.createElement(
    Flex,
    { justifyContent: "center" },
    React68.createElement(Text, null, ComponentText.Collection.searchNoResultsFound)
  );
};
var Collection = ({ className, isSearchable, isPaginated, items, itemsPerPage = DEFAULT_PAGE_SIZE, searchFilter = itemHasText, searchLabel = ComponentText.Collection.searchButtonLabel, searchNoResultsFound, searchPlaceholder, type = "list", testId, ...rest }) => {
  const [searchText, setSearchText] = React68.useState();
  const onSearch = React68.useCallback((0, import_debounce.default)(setSearchText, TYPEAHEAD_DELAY_MS), [setSearchText]);
  items = Array.isArray(items) ? items : [];
  if (isSearchable && strHasLength(searchText)) {
    items = items.filter((item) => searchFilter(item, searchText));
  }
  const pagination = usePagination({
    totalPages: getPageCount(items.length, itemsPerPage)
  });
  if (isPaginated) {
    items = getItemsAtPage(items, pagination.currentPage, itemsPerPage);
  }
  const collection = type === "list" ? React68.createElement(ListCollection, { className: ComponentClassName.CollectionItems, items, ...rest }) : type === "grid" ? React68.createElement(GridCollection, { className: ComponentClassName.CollectionItems, items, ...rest }) : null;
  return React68.createElement(
    Flex,
    { testId, className: classNames(ComponentClassName.Collection, className) },
    isSearchable ? React68.createElement(
      Flex,
      { className: ComponentClassName.CollectionSearch },
      React68.createElement(SearchField, { label: searchLabel, placeholder: searchPlaceholder, onChange: (e) => onSearch(e.target.value), onClear: () => setSearchText("") })
    ) : null,
    renderCollectionOrNoResultsFound(collection, items, searchNoResultsFound),
    isPaginated ? React68.createElement(
      Flex,
      { className: ComponentClassName.CollectionPagination },
      React68.createElement(Pagination, { ...pagination })
    ) : null
  );
};
Collection.displayName = "Collection";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Divider/Divider.mjs
var React69 = __toESM(require_react(), 1);
var DividerPrimitive = ({ className, orientation = "horizontal", size: size2, label, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Divider, classNameModifier(ComponentClassName.Divider, orientation), classNameModifier(ComponentClassName.Divider, size2), className);
  return React69.createElement(View, { "aria-orientation": orientation, as: "hr", className: componentClasses, "data-label": label, ref, ...rest });
};
var Divider = primitiveWithForwardRef(DividerPrimitive);
Divider.displayName = "Divider";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/DropZone.mjs
var React72 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/useDropZone.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/filterAllowedFiles.mjs
function filterAllowedFiles(files, acceptedFileTypes) {
  if (!acceptedFileTypes || acceptedFileTypes.length === 0 || acceptedFileTypes.includes("*")) {
    return { acceptedFiles: files, rejectedFiles: [] };
  }
  const acceptedFiles = [];
  const rejectedFiles = [];
  function filterFile(file) {
    const { type = "", name = "" } = file;
    const mimeType = type.toLowerCase();
    const baseMimeType = mimeType.split("/")[0];
    return acceptedFileTypes.some((type2) => {
      const validType = type2.trim().toLowerCase();
      if (validType.charAt(0) === ".") {
        return name.toLowerCase().endsWith(validType);
      }
      if (validType.endsWith("/*")) {
        return baseMimeType === validType.split("/")[0];
      }
      return mimeType === validType;
    });
  }
  files.forEach((file) => {
    (filterFile(file) ? acceptedFiles : rejectedFiles).push(file);
  });
  return { acceptedFiles, rejectedFiles };
}

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/useDropZone.mjs
function useDropZone({ onDropComplete, onDragEnter: _onDragEnter, onDragLeave: _onDragLeave, onDragOver: _onDragOver, onDragStart: _onDragStart, onDrop: _onDrop, acceptedFileTypes = [] }) {
  const [dragState, setDragState] = (0, import_react.useState)("inactive");
  const onDragStart = (event) => {
    event.dataTransfer.clearData();
    if (isFunction(_onDragStart)) {
      _onDragStart(event);
    }
  };
  const onDragEnter = (event) => {
    event.preventDefault();
    event.stopPropagation();
    if (isFunction(_onDragEnter)) {
      _onDragEnter(event);
    }
  };
  const onDragLeave = (event) => {
    event.preventDefault();
    event.stopPropagation();
    setDragState("inactive");
    if (isFunction(_onDragLeave)) {
      _onDragLeave(event);
    }
  };
  const onDragOver = (event) => {
    event.preventDefault();
    event.stopPropagation();
    event.dataTransfer.dropEffect = "copy";
    if (isFunction(_onDragOver)) {
      _onDragOver(event);
    }
    const files = Array.from(event.dataTransfer.items).map(({ kind, type }) => ({
      kind,
      type
    }));
    const { rejectedFiles } = filterAllowedFiles(files, acceptedFileTypes);
    setDragState(rejectedFiles.length > 0 ? "reject" : "accept");
  };
  const onDrop = (event) => {
    event.preventDefault();
    event.stopPropagation();
    setDragState("inactive");
    const files = Array.from(event.dataTransfer.files);
    const { acceptedFiles, rejectedFiles } = filterAllowedFiles(files, acceptedFileTypes);
    if (isFunction(_onDrop)) {
      _onDrop(event);
    }
    if (isFunction(onDropComplete)) {
      onDropComplete({ acceptedFiles, rejectedFiles });
    }
  };
  return {
    onDragStart,
    onDragEnter,
    onDragLeave,
    onDragOver,
    onDrop,
    dragState
  };
}

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/DropZoneProvider.mjs
var React70 = __toESM(require_react(), 1);
var DropZoneContext = React70.createContext("inactive");
var DropZoneProvider = ({ value, children }) => {
  return React70.createElement(DropZoneContext.Provider, { value }, children);
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/DropZoneContainer.mjs
var import_react2 = __toESM(require_react(), 1);
var Container = ({ className, children, testId, isDisabled, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop, ...rest }, ref) => {
  const dragState = import_react2.default.useContext(DropZoneContext);
  const dragProps = isDisabled ? {} : { onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop };
  return import_react2.default.createElement(View, { ...rest, ...dragProps, isDisabled, className: classNames(className, classNameModifierByFlag(ComponentClassName.DropZone, "rejected", dragState === "reject"), classNameModifierByFlag(ComponentClassName.DropZone, "accepted", dragState === "accept"), classNameModifierByFlag(ComponentClassName.DropZone, "disabled", isDisabled), ComponentClassName.DropZone), "data-testid": testId, ref }, children);
};
var DropZoneContainer = primitiveWithForwardRef(Container);
DropZoneContainer.displayName = "DropZoneContainer";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/DropZoneChildren.mjs
var React71 = __toESM(require_react(), 1);
var Accepted = ({ children }) => {
  const dragState = React71.useContext(DropZoneContext);
  if (!dragState) {
    throw new Error("`DropZone.Accept` must be used inside a DropZone");
  }
  return dragState === "accept" ? React71.createElement(React71.Fragment, null, children) : null;
};
var Rejected = ({ children }) => {
  const dragState = React71.useContext(DropZoneContext);
  if (!dragState) {
    throw new Error("`DropZone.Rejected` must be used inside a DropZone");
  }
  return dragState === "reject" ? React71.createElement(React71.Fragment, null, children) : null;
};
var Default = ({ children }) => {
  const dragState = React71.useContext(DropZoneContext);
  if (!dragState) {
    throw new Error("`DropZone.Default` must be used inside a DropZone");
  }
  return dragState === "inactive" ? React71.createElement(React71.Fragment, null, children) : null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/DropZone/DropZone.mjs
var DropZonePrimitive = ({ children, testId, isDisabled, acceptedFileTypes, onDropComplete, ...rest }, ref) => {
  const { dragState, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop } = useDropZone({
    acceptedFileTypes,
    onDropComplete,
    ...rest
  });
  return React72.createElement(
    DropZoneProvider,
    { value: dragState },
    React72.createElement(DropZoneContainer, { ...rest, testId, isDisabled, onDragStart, onDragEnter, onDragLeave, onDrop, onDragOver, ref }, children)
  );
};
var DropZone = Object.assign(primitiveWithForwardRef(DropZonePrimitive), {
  Accepted,
  Rejected,
  Default
});
DropZone.displayName = "DropZone";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/Accordion.mjs
var React80 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionItem.mjs
var React74 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionContext.mjs
var React73 = __toESM(require_react(), 1);
var AccordionContext = React73.createContext(void 0);
var AccordionItemContext = React73.createContext(void 0);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionItem.mjs
var AccordionItemPrimitive = ({ children, className, value, as = "details", ...rest }, ref) => {
  var _a;
  const context = React74.useContext(AccordionContext);
  const open = value ? (_a = context == null ? void 0 : context.value) == null ? void 0 : _a.includes(value) : void 0;
  return React74.createElement(
    AccordionItemContext.Provider,
    { value },
    React74.createElement(View, { ...rest, open, ref, as, className: classNames(ComponentClassName.AccordionItem, className) }, children)
  );
};
var AccordionItem = primitiveWithForwardRef(AccordionItemPrimitive);
AccordionItem.displayName = "AccordionItem";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionContent.mjs
var React75 = __toESM(require_react(), 1);
var AccordionContentPrimitive = ({ className, children, ...rest }, ref) => {
  return React75.createElement(View, { ...rest, className: classNames(ComponentClassName.AccordionItemContent, className), ref }, children);
};
var AccordionContent = primitiveWithForwardRef(AccordionContentPrimitive);
AccordionContent.displayName = "Accordion.Content";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionTrigger.mjs
var React76 = __toESM(require_react(), 1);
var AccordionTriggerPrimitive = ({ children, className, ...rest }, ref) => {
  const context = React76.useContext(AccordionContext);
  const value = React76.useContext(AccordionItemContext);
  const handleOnClick = (e) => {
    if (isTypedFunction(rest.onClick)) {
      rest.onClick(e);
    }
    if ((context == null ? void 0 : context.setValue) && value) {
      e.preventDefault();
      context.setValue(value);
    }
  };
  return React76.createElement(View, { ...rest, ref, as: "summary", className: classNames(ComponentClassName.AccordionItemTrigger, className), onClick: handleOnClick }, children);
};
var AccordionTrigger = primitiveWithForwardRef(AccordionTriggerPrimitive);
AccordionTrigger.displayName = "Accordion.Trigger";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionIcon.mjs
var React78 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconExpandMore.mjs
var React77 = __toESM(require_react(), 1);
var IconExpandMore = (props) => {
  const { className, ...rest } = props;
  return React77.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React77.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React77.createElement("path", { d: "M16.59 8.58984L12 13.1698L7.41 8.58984L6 9.99984L12 15.9998L18 9.99984L16.59 8.58984Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionIcon.mjs
var AccordionIconPrimitive = ({ className, as = "span", ...rest }, ref) => {
  const icons = useIcons("accordion");
  return React78.createElement(View, { ...rest, ref, as, className: classNames(ComponentClassName.AccordionItemIcon, className), "aria-hidden": "true" }, (icons == null ? void 0 : icons.more) ?? React78.createElement(IconExpandMore, null));
};
var AccordionIcon = primitiveWithForwardRef(AccordionIconPrimitive);
AccordionIcon.displayName = "Accordion.Icon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/AccordionContainer.mjs
var React79 = __toESM(require_react(), 1);
var AccordionContainerPrimitive = ({ children, className, defaultValue: defaultValue2, allowMultiple, preventCollapse, onValueChange, testId, value: controlledValue, ...rest }, ref) => {
  const isControlled = controlledValue !== void 0;
  const [localValue, setLocalValue] = React79.useState(() => isControlled ? controlledValue : defaultValue2 ?? []);
  const value = isControlled ? controlledValue : localValue;
  const setValue = React79.useCallback((_value) => {
    let newValue;
    if (value.includes(_value)) {
      newValue = !preventCollapse || value.length > 1 ? value.filter((v) => v !== _value) : value;
    } else {
      newValue = allowMultiple ? [...value, _value] : [_value];
    }
    if (isFunction(onValueChange)) {
      onValueChange(newValue);
    }
    if (!isControlled) {
      setLocalValue(newValue);
    }
  }, [onValueChange, value, isControlled, allowMultiple, preventCollapse]);
  const contextValue = React79.useMemo(() => {
    return {
      value,
      setValue
    };
  }, [value, setValue]);
  return React79.createElement(
    AccordionContext.Provider,
    { value: contextValue },
    React79.createElement(View, { ...rest, className: classNames(ComponentClassName.Accordion, className), "data-testid": testId, ref }, children)
  );
};
var AccordionContainer = primitiveWithForwardRef(AccordionContainerPrimitive);
AccordionContainer.displayName = "Accordion.Container";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Accordion/Accordion.mjs
var AccordionPrimitive = ({ items, ...rest }, ref) => {
  return React80.createElement(AccordionContainer, { ref, ...rest }, items == null ? void 0 : items.map(({ content, trigger, value }) => React80.createElement(
    AccordionItem,
    { key: value, value },
    React80.createElement(
      AccordionTrigger,
      null,
      trigger,
      React80.createElement(AccordionIcon, null)
    ),
    React80.createElement(AccordionContent, null, content)
  )));
};
var Accordion = Object.assign(primitiveWithForwardRef(AccordionPrimitive), {
  Container: AccordionContainer,
  Content: AccordionContent,
  Icon: AccordionIcon,
  Item: AccordionItem,
  Trigger: AccordionTrigger
});
Accordion.displayName = "Accordion";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Fieldset/Fieldset.mjs
var React81 = __toESM(require_react(), 1);
var FieldsetPrimitive = ({ children, className, isDisabled, legend, legendHidden, size: size2, testId, variation = "plain", ...rest }, ref) => {
  const { isFieldsetDisabled } = useFieldset();
  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;
  const value = React81.useMemo(() => ({
    isFieldsetDisabled: shouldBeDisabled
  }), [shouldBeDisabled]);
  const fieldsetClasses = classNames(ComponentClassName.Fieldset, classNameModifier(ComponentClassName.Fieldset, variation), classNameModifier(ComponentClassName.Fieldset, size2), className);
  const legendClasses = classNames(ComponentClassName.FieldsetLegend, classNameModifier(ComponentClassName.FieldsetLegend, size2), {
    [ComponentClassName.VisuallyHidden]: legendHidden
  });
  return React81.createElement(
    FieldsetContext.Provider,
    { value },
    React81.createElement(
      Flex,
      { as: "fieldset", className: fieldsetClasses, ref, disabled: shouldBeDisabled, testId, ...rest },
      React81.createElement(VisuallyHidden, { as: "legend" }, legend),
      React81.createElement(View, { as: "div", "aria-hidden": "true", className: legendClasses }, legend),
      children
    )
  );
};
var Fieldset = primitiveWithForwardRef(FieldsetPrimitive);
Fieldset.displayName = "Fieldset";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Heading/Heading.mjs
var React82 = __toESM(require_react(), 1);
var headingLevels = {
  1: "h1",
  2: "h2",
  3: "h3",
  4: "h4",
  5: "h5",
  6: "h6"
};
var HeadingPrimitive = ({ className, children, isTruncated, level = 6, ...rest }, ref) => React82.createElement(View, { as: headingLevels[level], className: classNames(ComponentClassName.Heading, classNameModifier(ComponentClassName.Heading, level), classNameModifierByFlag(ComponentClassName.Heading, "truncated", isTruncated), className), ref, ...rest }, children);
var Heading = primitiveWithForwardRef(HeadingPrimitive);
Heading.displayName = "Heading";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Image/Image.mjs
var React83 = __toESM(require_react(), 1);
var ImagePrimitive = ({ className, ...rest }, ref) => React83.createElement(View, { as: "img", ref, className: classNames(ComponentClassName.Image, className), ...rest });
var Image = primitiveWithForwardRef(ImagePrimitive);
Image.displayName = "Image";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Menu/Menu.mjs
var React96 = __toESM(require_react(), 1);

// node_modules/@radix-ui/react-dropdown-menu/dist/index.module.js
var index_module_exports2 = {};
__export(index_module_exports2, {
  Arrow: () => $d08ef79370b62062$export$21b07c8f274aebd5,
  CheckboxItem: () => $d08ef79370b62062$export$16ce288f89fa631c,
  Content: () => $d08ef79370b62062$export$7c6e2c02157bb7d2,
  DropdownMenu: () => $d08ef79370b62062$export$e44a253a59704894,
  DropdownMenuArrow: () => $d08ef79370b62062$export$34b8980744021ec5,
  DropdownMenuCheckboxItem: () => $d08ef79370b62062$export$53a69729da201fa9,
  DropdownMenuContent: () => $d08ef79370b62062$export$6e76d93a37c01248,
  DropdownMenuGroup: () => $d08ef79370b62062$export$246bebaba3a2f70e,
  DropdownMenuItem: () => $d08ef79370b62062$export$ed97964d1871885d,
  DropdownMenuItemIndicator: () => $d08ef79370b62062$export$42355ae145153fb6,
  DropdownMenuLabel: () => $d08ef79370b62062$export$76e48c5b57f24495,
  DropdownMenuPortal: () => $d08ef79370b62062$export$cd369b4d4d54efc9,
  DropdownMenuRadioGroup: () => $d08ef79370b62062$export$3323ad73d55f587e,
  DropdownMenuRadioItem: () => $d08ef79370b62062$export$e4f69b41b1637536,
  DropdownMenuSeparator: () => $d08ef79370b62062$export$da160178fd3bc7e9,
  DropdownMenuSub: () => $d08ef79370b62062$export$2f307d81a64f5442,
  DropdownMenuSubContent: () => $d08ef79370b62062$export$f34ec8bc2482cc5f,
  DropdownMenuSubTrigger: () => $d08ef79370b62062$export$21dcb7ec56f874cf,
  DropdownMenuTrigger: () => $d08ef79370b62062$export$d2469213b3befba9,
  Group: () => $d08ef79370b62062$export$eb2fcfdbd7ba97d4,
  Item: () => $d08ef79370b62062$export$6d08773d2e66f8f2,
  ItemIndicator: () => $d08ef79370b62062$export$c3468e2714d175fa,
  Label: () => $d08ef79370b62062$export$b04be29aa201d4f5,
  Portal: () => $d08ef79370b62062$export$602eac185826482c,
  RadioGroup: () => $d08ef79370b62062$export$a98f0dcb43a68a25,
  RadioItem: () => $d08ef79370b62062$export$371ab307eab489c0,
  Root: () => $d08ef79370b62062$export$be92b6f5f03c0fe9,
  Separator: () => $d08ef79370b62062$export$1ff3c3f08ae963c0,
  Sub: () => $d08ef79370b62062$export$d7a01e11500dfb6f,
  SubContent: () => $d08ef79370b62062$export$6d4de93b380beddf,
  SubTrigger: () => $d08ef79370b62062$export$2ea8a7a591ac5eac,
  Trigger: () => $d08ef79370b62062$export$41fb9f06171c75f4,
  createDropdownMenuScope: () => $d08ef79370b62062$export$c0623cd925aeb687
});

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@radix-ui/react-dropdown-menu/dist/index.module.js
var import_react27 = __toESM(require_react());

// node_modules/@radix-ui/primitive/dist/index.module.js
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
  return function handleEvent(event) {
    originalEventHandler === null || originalEventHandler === void 0 || originalEventHandler(event);
    if (checkForDefaultPrevented === false || !event.defaultPrevented)
      return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
  };
}

// node_modules/@radix-ui/react-compose-refs/dist/index.module.js
var import_react3 = __toESM(require_react());
function $6ed0406888f73fc4$var$setRef(ref, value) {
  if (typeof ref === "function")
    ref(value);
  else if (ref !== null && ref !== void 0)
    ref.current = value;
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return (0, import_react3.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

// node_modules/@radix-ui/react-context/dist/index.module.js
var import_react4 = __toESM(require_react());
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
    const BaseContext = (0, import_react4.createContext)(defaultContext);
    const index2 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider(props) {
      const { scope, children, ...context } = props;
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const value = (0, import_react4.useMemo)(
        () => context,
        Object.values(context)
      );
      return (0, import_react4.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext13(consumerName, scope) {
      const Context = (scope === null || scope === void 0 ? void 0 : scope[scopeName][index2]) || BaseContext;
      const context = (0, import_react4.useContext)(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    Provider.displayName = rootComponentName + "Provider";
    return [
      Provider,
      useContext13
    ];
  }
  const createScope = () => {
    const scopeContexts = defaultContexts.map((defaultContext) => {
      return (0, import_react4.createContext)(defaultContext);
    });
    return function useScope(scope) {
      const contexts = (scope === null || scope === void 0 ? void 0 : scope[scopeName]) || scopeContexts;
      return (0, import_react4.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  createScope.scopeName = scopeName;
  return [
    $c512c27ab02ef895$export$fd42f52fd3ae1109,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  const baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  const createScope1 = () => {
    const scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function useComposedScopes(overrideScopes) {
      const nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        const scopeProps = useScope(overrideScopes);
        const currentScope = scopeProps[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react4.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  createScope1.scopeName = baseScope.scopeName;
  return createScope1;
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var import_react6 = __toESM(require_react());

// node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
var import_react5 = __toESM(require_react());
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  const callbackRef = (0, import_react5.useRef)(callback);
  (0, import_react5.useEffect)(() => {
    callbackRef.current = callback;
  });
  return (0, import_react5.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange = () => {
} }) {
  const [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange
  });
  const isControlled = prop !== void 0;
  const value1 = isControlled ? prop : uncontrolledProp;
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  const setValue = (0, import_react6.useCallback)((nextValue) => {
    if (isControlled) {
      const setter = nextValue;
      const value = typeof nextValue === "function" ? setter(prop) : nextValue;
      if (value !== prop)
        handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange }) {
  const uncontrolledState = (0, import_react6.useState)(defaultProp);
  const [value] = uncontrolledState;
  const prevValueRef = (0, import_react6.useRef)(value);
  const handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  (0, import_react6.useEffect)(() => {
    if (prevValueRef.current !== value) {
      handleChange(value);
      prevValueRef.current = value;
    }
  }, [
    value,
    prevValueRef,
    handleChange
  ]);
  return uncontrolledState;
}

// node_modules/@radix-ui/react-primitive/dist/index.module.js
var import_react8 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@radix-ui/react-slot/dist/index.module.js
var import_react7 = __toESM(require_react());
var $5e63c961fc1ce211$export$8c6ed5c666ac1360 = (0, import_react7.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  const childrenArray = import_react7.Children.toArray(children);
  const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    const newElement = slottable.props.children;
    const newChildren = childrenArray.map((child) => {
      if (child === slottable) {
        if (import_react7.Children.count(newElement) > 1)
          return import_react7.Children.only(null);
        return (0, import_react7.isValidElement)(newElement) ? newElement.props.children : null;
      } else
        return child;
    });
    return (0, import_react7.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
      ref: forwardedRef
    }), (0, import_react7.isValidElement)(newElement) ? (0, import_react7.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return (0, import_react7.createElement)($5e63c961fc1ce211$var$SlotClone, _extends({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone = (0, import_react7.forwardRef)((props, forwardedRef) => {
  const { children, ...slotProps } = props;
  if ((0, import_react7.isValidElement)(children))
    return (0, import_react7.cloneElement)(children, {
      ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
      ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref)
    });
  return import_react7.Children.count(children) > 1 ? import_react7.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children }) => {
  return (0, import_react7.createElement)(import_react7.Fragment, null, children);
};
function $5e63c961fc1ce211$var$isSlottable(child) {
  return (0, import_react7.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  const overrideProps = {
    ...childProps
  };
  for (const propName in childProps) {
    const slotPropValue = slotProps[propName];
    const childPropValue = childProps[propName];
    const isHandler = /^on[A-Z]/.test(propName);
    if (isHandler)
      overrideProps[propName] = (...args) => {
        childPropValue === null || childPropValue === void 0 || childPropValue(...args);
        slotPropValue === null || slotPropValue === void 0 || slotPropValue(...args);
      };
    else if (propName === "style")
      overrideProps[propName] = {
        ...slotPropValue,
        ...childPropValue
      };
    else if (propName === "className")
      overrideProps[propName] = [
        slotPropValue,
        childPropValue
      ].filter(Boolean).join(" ");
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// node_modules/@radix-ui/react-primitive/dist/index.module.js
var $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "h2",
  "h3",
  "img",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
];
var $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  const Node2 = (0, import_react8.forwardRef)((props, forwardedRef) => {
    const { asChild, ...primitiveProps } = props;
    const Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    (0, import_react8.useEffect)(() => {
      window[Symbol.for("radix-ui")] = true;
    }, []);
    return (0, import_react8.createElement)(Comp, _extends({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  Node2.displayName = `Primitive.${node}`;
  return {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  if (target)
    (0, import_react_dom.flushSync)(
      () => target.dispatchEvent(event)
    );
}

// node_modules/@radix-ui/react-menu/dist/index.module.js
var import_react26 = __toESM(require_react());

// node_modules/@radix-ui/react-collection/dist/index.module.js
var import_react9 = __toESM(require_react());
function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {
  const PROVIDER_NAME = name + "CollectionProvider";
  const [createCollectionContext, createCollectionScope] = $c512c27ab02ef895$export$50c7b4e9d9f19c1(PROVIDER_NAME);
  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
    collectionRef: {
      current: null
    },
    itemMap: /* @__PURE__ */ new Map()
  });
  const CollectionProvider = (props) => {
    const { scope, children } = props;
    const ref = import_react9.default.useRef(null);
    const itemMap = import_react9.default.useRef(/* @__PURE__ */ new Map()).current;
    return import_react9.default.createElement(CollectionProviderImpl, {
      scope,
      itemMap,
      collectionRef: ref
    }, children);
  };
  Object.assign(CollectionProvider, {
    displayName: PROVIDER_NAME
  });
  const COLLECTION_SLOT_NAME = name + "CollectionSlot";
  const CollectionSlot = import_react9.default.forwardRef((props, forwardedRef) => {
    const { scope, children } = props;
    const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.collectionRef);
    return import_react9.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      ref: composedRefs
    }, children);
  });
  Object.assign(CollectionSlot, {
    displayName: COLLECTION_SLOT_NAME
  });
  const ITEM_SLOT_NAME = name + "CollectionItemSlot";
  const ITEM_DATA_ATTR = "data-radix-collection-item";
  const CollectionItemSlot = import_react9.default.forwardRef((props, forwardedRef) => {
    const { scope, children, ...itemData } = props;
    const ref = import_react9.default.useRef(null);
    const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
    const context = useCollectionContext(ITEM_SLOT_NAME, scope);
    import_react9.default.useEffect(() => {
      context.itemMap.set(ref, {
        ref,
        ...itemData
      });
      return () => void context.itemMap.delete(ref);
    });
    return import_react9.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      [ITEM_DATA_ATTR]: "",
      ref: composedRefs
    }, children);
  });
  Object.assign(CollectionItemSlot, {
    displayName: ITEM_SLOT_NAME
  });
  function useCollection(scope) {
    const context = useCollectionContext(name + "CollectionConsumer", scope);
    const getItems = import_react9.default.useCallback(() => {
      const collectionNode = context.collectionRef.current;
      if (!collectionNode)
        return [];
      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      const items = Array.from(context.itemMap.values());
      const orderedItems = items.sort(
        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)
      );
      return orderedItems;
    }, [
      context.collectionRef,
      context.itemMap
    ]);
    return getItems;
  }
  return [
    {
      Provider: CollectionProvider,
      Slot: CollectionSlot,
      ItemSlot: CollectionItemSlot
    },
    useCollection,
    createCollectionScope
  ];
}

// node_modules/@radix-ui/react-direction/dist/index.module.js
var index_module_exports = {};
__export(index_module_exports, {
  DirectionProvider: () => $f631663db3294ace$export$c760c09fdd558351,
  Provider: () => $f631663db3294ace$export$2881499e37b75b9a,
  useDirection: () => $f631663db3294ace$export$b39126d51d94e6f3
});
var import_react10 = __toESM(require_react());
var $f631663db3294ace$var$DirectionContext = (0, import_react10.createContext)(void 0);
var $f631663db3294ace$export$c760c09fdd558351 = (props) => {
  const { dir, children } = props;
  return (0, import_react10.createElement)($f631663db3294ace$var$DirectionContext.Provider, {
    value: dir
  }, children);
};
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  const globalDir = (0, import_react10.useContext)($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || "ltr";
}
var $f631663db3294ace$export$2881499e37b75b9a = $f631663db3294ace$export$c760c09fdd558351;

// node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var import_react12 = __toESM(require_react());

// node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var import_react11 = __toESM(require_react());
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {
  const onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  (0, import_react11.useEffect)(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape")
        onEscapeKeyDown(event);
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown
  ]);
}

// node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME = "DismissableLayer";
var $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update";
var $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var $5cb92bef7577960e$var$originalBodyPointerEvents;
var $5cb92bef7577960e$var$DismissableLayerContext = (0, import_react12.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
});
var $5cb92bef7577960e$export$177fb62ff3ec1f22 = (0, import_react12.forwardRef)((props, forwardedRef) => {
  const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;
  const context = (0, import_react12.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const [node1, setNode] = (0, import_react12.useState)(null);
  const [, force] = (0, import_react12.useState)({});
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  );
  const layers = Array.from(context.layers);
  const [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1);
  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
  const index2 = node1 ? layers.indexOf(node1) : -1;
  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
  const isPointerEventsEnabled = index2 >= highestLayerWithOutsidePointerEventsDisabledIndex;
  const pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    const target = event.target;
    const isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (!isPointerEventsEnabled || isPointerDownOnBranch)
      return;
    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  });
  const focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    const target = event.target;
    const isFocusInBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    if (isFocusInBranch)
      return;
    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);
    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);
    if (!event.defaultPrevented)
      onDismiss === null || onDismiss === void 0 || onDismiss();
  });
  $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    const isHighestLayer = index2 === context.layers.size - 1;
    if (!isHighestLayer)
      return;
    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);
    if (!event.defaultPrevented && onDismiss) {
      event.preventDefault();
      onDismiss();
    }
  });
  (0, import_react12.useEffect)(() => {
    if (!node1)
      return;
    if (disableOutsidePointerEvents) {
      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
        $5cb92bef7577960e$var$originalBodyPointerEvents = document.body.style.pointerEvents;
        document.body.style.pointerEvents = "none";
      }
      context.layersWithOutsidePointerEventsDisabled.add(node1);
    }
    context.layers.add(node1);
    $5cb92bef7577960e$var$dispatchUpdate();
    return () => {
      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1)
        document.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents;
    };
  }, [
    node1,
    disableOutsidePointerEvents,
    context
  ]);
  (0, import_react12.useEffect)(() => {
    return () => {
      if (!node1)
        return;
      context.layers.delete(node1);
      context.layersWithOutsidePointerEventsDisabled.delete(node1);
      $5cb92bef7577960e$var$dispatchUpdate();
    };
  }, [
    node1,
    context
  ]);
  (0, import_react12.useEffect)(() => {
    const handleUpdate = () => force({});
    document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
    return () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []);
  return (0, import_react12.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
Object.assign($5cb92bef7577960e$export$177fb62ff3ec1f22, {
  displayName: $5cb92bef7577960e$var$DISMISSABLE_LAYER_NAME
});
var $5cb92bef7577960e$var$BRANCH_NAME = "DismissableLayerBranch";
var $5cb92bef7577960e$export$4d5eb2109db14228 = (0, import_react12.forwardRef)((props, forwardedRef) => {
  const context = (0, import_react12.useContext)($5cb92bef7577960e$var$DismissableLayerContext);
  const ref = (0, import_react12.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react12.useEffect)(() => {
    const node = ref.current;
    if (node) {
      context.branches.add(node);
      return () => {
        context.branches.delete(node);
      };
    }
  }, [
    context.branches
  ]);
  return (0, import_react12.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, props, {
    ref: composedRefs
  }));
});
Object.assign($5cb92bef7577960e$export$4d5eb2109db14228, {
  displayName: $5cb92bef7577960e$var$BRANCH_NAME
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside) {
  const handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside);
  const isPointerInsideReactTreeRef = (0, import_react12.useRef)(false);
  const handleClickRef = (0, import_react12.useRef)(() => {
  });
  (0, import_react12.useEffect)(() => {
    const handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: true
          });
        };
        const eventDetail = {
          originalEvent: event
        };
        if (event.pointerType === "touch") {
          document.removeEventListener("click", handleClickRef.current);
          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;
          document.addEventListener("click", handleClickRef.current, {
            once: true
          });
        } else
          handleAndDispatchPointerDownOutsideEvent();
      }
      isPointerInsideReactTreeRef.current = false;
    };
    const timerId = window.setTimeout(() => {
      document.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId);
      document.removeEventListener("pointerdown", handlePointerDown);
      document.removeEventListener("click", handleClickRef.current);
    };
  }, [
    handlePointerDownOutside
  ]);
  return {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside) {
  const handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside);
  const isFocusInsideReactTreeRef = (0, import_react12.useRef)(false);
  (0, import_react12.useEffect)(() => {
    const handleFocus = (event) => {
      if (event.target && !isFocusInsideReactTreeRef.current) {
        const eventDetail = {
          originalEvent: event
        };
        $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
          discrete: false
        });
      }
    };
    document.addEventListener("focusin", handleFocus);
    return () => document.removeEventListener("focusin", handleFocus);
  }, [
    handleFocusOutside
  ]);
  return {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = false
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  const event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  const target = detail.originalEvent.target;
  const event = new CustomEvent(name, {
    bubbles: false,
    cancelable: true,
    detail
  });
  if (handler)
    target.addEventListener(name, handler, {
      once: true
    });
  if (discrete)
    $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event);
  else
    target.dispatchEvent(event);
}

// node_modules/@radix-ui/react-focus-guards/dist/index.module.js
var import_react13 = __toESM(require_react());
var $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  (0, import_react13.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard());
    document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard());
    $3db38b7d1fb3fe6a$var$count++;
    return () => {
      if ($3db38b7d1fb3fe6a$var$count === 1)
        document.querySelectorAll("[data-radix-focus-guard]").forEach(
          (node) => node.remove()
        );
      $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  const element = document.createElement("span");
  element.setAttribute("data-radix-focus-guard", "");
  element.tabIndex = 0;
  element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none";
  return element;
}

// node_modules/@radix-ui/react-focus-scope/dist/index.module.js
var import_react14 = __toESM(require_react());
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
var $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME = "FocusScope";
var $d3863c46a17e8a28$export$20e40289641fbbb6 = (0, import_react14.forwardRef)((props, forwardedRef) => {
  const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;
  const [container1, setContainer] = (0, import_react14.useState)(null);
  const onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp);
  const onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp);
  const lastFocusedElementRef = (0, import_react14.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  );
  const focusScope = (0, import_react14.useRef)({
    paused: false,
    pause() {
      this.paused = true;
    },
    resume() {
      this.paused = false;
    }
  }).current;
  (0, import_react14.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1)
          return;
        const target = event.target;
        if (container1.contains(target))
          lastFocusedElementRef.current = target;
        else
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      }, handleFocusOut = function(event) {
        if (focusScope.paused || !container1)
          return;
        if (!container1.contains(event.relatedTarget))
          $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
            select: true
          });
      };
      document.addEventListener("focusin", handleFocusIn);
      document.addEventListener("focusout", handleFocusOut);
      return () => {
        document.removeEventListener("focusin", handleFocusIn);
        document.removeEventListener("focusout", handleFocusOut);
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]);
  (0, import_react14.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      const previouslyFocusedElement = document.activeElement;
      const hasFocusedCandidate = container1.contains(previouslyFocusedElement);
      if (!hasFocusedCandidate) {
        const mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        container1.dispatchEvent(mountEvent);
        if (!mountEvent.defaultPrevented) {
          $d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
            select: true
          });
          if (document.activeElement === previouslyFocusedElement)
            $d3863c46a17e8a28$var$focus(container1);
        }
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
        setTimeout(() => {
          const unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          container1.dispatchEvent(unmountEvent);
          if (!unmountEvent.defaultPrevented)
            $d3863c46a17e8a28$var$focus(previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : document.body, {
              select: true
            });
          container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
          $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  const handleKeyDown = (0, import_react14.useCallback)((event) => {
    if (!loop && !trapped)
      return;
    if (focusScope.paused)
      return;
    const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
    const focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      const container = event.currentTarget;
      const [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
      const hasTabbableElementsInside = first && last;
      if (!hasTabbableElementsInside) {
        if (focusedElement === container)
          event.preventDefault();
      } else {
        if (!event.shiftKey && focusedElement === last) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(first, {
              select: true
            });
        } else if (event.shiftKey && focusedElement === first) {
          event.preventDefault();
          if (loop)
            $d3863c46a17e8a28$var$focus(last, {
              select: true
            });
        }
      }
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return (0, import_react14.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
Object.assign($d3863c46a17e8a28$export$20e40289641fbbb6, {
  displayName: $d3863c46a17e8a28$var$FOCUS_SCOPE_NAME
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select = false } = {}) {
  const previouslyFocusedElement = document.activeElement;
  for (const candidate of candidates) {
    $d3863c46a17e8a28$var$focus(candidate, {
      select
    });
    if (document.activeElement !== previouslyFocusedElement)
      return;
  }
}
function $d3863c46a17e8a28$var$getTabbableEdges(container) {
  const candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container);
  const first = $d3863c46a17e8a28$var$findVisible(candidates, container);
  const last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
  const nodes = [];
  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      if (node.disabled || node.hidden || isHiddenInput)
        return NodeFilter.FILTER_SKIP;
      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  while (walker.nextNode())
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container) {
  for (const element of elements) {
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container
    }))
      return element;
  }
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return true;
  while (node) {
    if (upTo !== void 0 && node === upTo)
      return false;
    if (getComputedStyle(node).display === "none")
      return true;
    node = node.parentElement;
  }
  return false;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select = false } = {}) {
  if (element && element.focus) {
    const previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: true
    });
    if (element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select)
      element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      const activeFocusScope = stack[0];
      if (focusScope !== activeFocusScope)
        activeFocusScope === null || activeFocusScope === void 0 || activeFocusScope.pause();
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope);
      (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
  const updatedArray = [
    ...array
  ];
  const index2 = updatedArray.indexOf(item);
  if (index2 !== -1)
    updatedArray.splice(index2, 1);
  return updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// node_modules/@radix-ui/react-id/dist/index.module.js
var $2AODx$react = __toESM(require_react());

// node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
var import_react15 = __toESM(require_react());
var $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) ? import_react15.useLayoutEffect : () => {
};

// node_modules/@radix-ui/react-id/dist/index.module.js
var $1746a345f3d73bb7$var$useReactId = $2AODx$react["useId".toString()] || (() => void 0);
var $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  const [id, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId());
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (!deterministicId)
      setId(
        (reactId) => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++)
      );
  }, [
    deterministicId
  ]);
  return deterministicId || (id ? `radix-${id}` : "");
}

// node_modules/@radix-ui/react-popper/dist/index.module.js
var import_react19 = __toESM(require_react());

// node_modules/@radix-ui/react-popper/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  const commonAlign = reference[length] / 2 - floating[length] / 2;
  const side = getSide(placement);
  const isVertical = mainAxis === "x";
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  {
    if (platform2 == null) {
      console.error(["Floating UI: `platform` property was not passed to config. If you", "want to use Floating UI on the web, install @floating-ui/dom", "instead of the /core package. Otherwise, you can create your own", "`platform`: https://floating-ui.com/docs/platform"].join(" "));
    }
    if (middleware.filter((_ref) => {
      let {
        name
      } = _ref;
      return name === "autoPlacement" || name === "flip";
    }).length > 1) {
      throw new Error(["Floating UI: duplicate `flip` and/or `autoPlacement`", "middleware detected. This will lead to an infinite loop. Ensure only", "one of either has been passed to the `middleware` array."].join(" "));
    }
  }
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < middleware.length; i++) {
    const {
      name,
      fn
    } = middleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    };
    {
      if (resetCount > 50) {
        console.warn(["Floating UI: The middleware lifecycle appears to be running in an", "infinite loop. This is usually caused by a `reset` continually", "being returned without a break condition."].join(" "));
      }
    }
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getSideObjectFromPadding(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}
async function detectOverflow(middlewareArguments, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = middlewareArguments;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = options;
  const paddingObject = getSideObjectFromPadding(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: elementContext === "floating" ? {
      ...rects.floating,
      x,
      y
    } : rects.reference,
    offsetParent: await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating)),
    strategy
  }) : rects[elementContext]);
  return {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
}
var min = Math.min;
var max = Math.max;
function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(middlewareArguments) {
    const {
      element,
      padding = 0
    } = options != null ? options : {};
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2
    } = middlewareArguments;
    if (element == null) {
      {
        console.warn("Floating UI: No `element` was passed to the `arrow` middleware.");
      }
      return {};
    }
    const paddingObject = getSideObjectFromPadding(padding);
    const coords = {
      x,
      y
    };
    const axis = getMainAxisFromPlacement(placement);
    const alignment = getAlignment(placement);
    const length = getLengthFromAxis(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const minProp = axis === "y" ? "top" : "left";
    const maxProp = axis === "y" ? "bottom" : "right";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    if (clientSize === 0) {
      clientSize = rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const min3 = paddingObject[minProp];
    const max3 = clientSize - arrowDimensions[length] - paddingObject[maxProp];
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset2 = within(min3, center, max3);
    const alignmentPadding = alignment === "start" ? paddingObject[minProp] : paddingObject[maxProp];
    const shouldAddOffset = alignmentPadding > 0 && center !== offset2 && rects.reference[length] <= rects.floating[length];
    const alignmentOffset = shouldAddOffset ? center < min3 ? min3 - center : max3 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2
      }
    };
  }
});
var hash$1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (matched) => hash$1[matched]);
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  let mainAlignmentSide = mainAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}
var hash = {
  start: "end",
  end: "start"
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (matched) => hash[matched]);
}
var sides = ["top", "right", "bottom", "left"];
var allPlacements = sides.reduce((acc, side) => acc.concat(side, side + "-start", side + "-end"), []);
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(middlewareArguments) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = middlewareArguments;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        flipAlignment = true,
        ...detectOverflowOptions
      } = options;
      const side = getSide(placement);
      const isBasePlacement = side === initialPlacement;
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const {
          main,
          cross
        } = getAlignmentSides(placement, rects, await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)));
        overflows.push(overflow[main], overflow[cross]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip$, _middlewareData$flip2;
        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = "bottom";
        switch (fallbackStrategy) {
          case "bestFit": {
            var _overflowsData$map$so;
            const placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;
            if (placement2) {
              resetPlacement = placement2;
            }
            break;
          }
          case "initialPlacement":
            resetPlacement = initialPlacement;
            break;
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(_temp) {
  let {
    strategy = "referenceHidden",
    ...detectOverflowOptions
  } = _temp === void 0 ? {} : _temp;
  return {
    name: "hide",
    async fn(middlewareArguments) {
      const {
        rects
      } = middlewareArguments;
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(middlewareArguments, {
            ...detectOverflowOptions,
            elementContext: "reference"
          });
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(middlewareArguments, {
            ...detectOverflowOptions,
            altBoundary: true
          });
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(middlewareArguments, value) {
  const {
    placement,
    platform: platform2,
    elements
  } = middlewareArguments;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getMainAxisFromPlacement(placement) === "x";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = typeof value === "function" ? value(middlewareArguments) : value;
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(value) {
  if (value === void 0) {
    value = 0;
  }
  return {
    name: "offset",
    options: value,
    async fn(middlewareArguments) {
      const {
        x,
        y
      } = middlewareArguments;
      const diffCoords = await convertValueToCoords(middlewareArguments, value);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
function getCrossAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(middlewareArguments) {
      const {
        x,
        y,
        placement
      } = middlewareArguments;
      const {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        },
        ...detectOverflowOptions
      } = options;
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const mainAxis = getMainAxisFromPlacement(getSide(placement));
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min3 = mainAxisCoord + overflow[minSide];
        const max3 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min3, mainAxisCoord, max3);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min3 = crossAxisCoord + overflow[minSide];
        const max3 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min3, crossAxisCoord, max3);
      }
      const limitedCoords = limiter.fn({
        ...middlewareArguments,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      };
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(middlewareArguments) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = middlewareArguments;
      const {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = options;
      const coords = {
        x,
        y
      };
      const mainAxis = getMainAxisFromPlacement(placement);
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = typeof offset2 === "function" ? offset2({
        ...rects,
        placement
      }) : offset2;
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};

// node_modules/@radix-ui/react-popper/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs
function isWindow(value) {
  return value && value.document && value.location && value.alert && value.setInterval;
}
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (!isWindow(node)) {
    const ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeName(node) {
  return isWindow(node) ? "" : node ? (node.nodeName || "").toLowerCase() : "";
}
function getUAString() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands) {
    return uaData.brands.map((item) => item.brand + "/" + item.version).join(" ");
  }
  return navigator.userAgent;
}
function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const isFirefox = /firefox/i.test(getUAString());
  const css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || // @ts-ignore (TS 4.1 compat)
  css.contain === "paint" || ["transform", "perspective"].includes(css.willChange) || isFirefox && css.willChange === "filter" || isFirefox && (css.filter ? css.filter !== "none" : false);
}
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
var min2 = Math.min;
var max2 = Math.max;
var round = Math.round;
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  let scaleX = 1;
  let scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  const win = isElement(element) ? getWindow(element) : window;
  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;
  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;
  const width = clientRect.width / scaleX;
  const height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function isScaled(element) {
  const rect = getBoundingClientRect(element);
  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const rect = getBoundingClientRect(
    element,
    // @ts-ignore - checked above (TS 4.1 compat)
    isOffsetParentAnElement && isScaled(offsetParent),
    strategy === "fixed"
  );
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  return (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // @ts-ignore
    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    node.parentNode || // DOM Element detected
    (isShadowRoot(node) ? node.host : null) || // ShadowRoot detected
    getDocumentElement(node)
  );
}
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && !["html", "body"].includes(getNodeName(currentNode))) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  const window2 = getWindow(element);
  let offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
function getDimensions(element) {
  if (isHTMLElement(element)) {
    return {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
  }
  const rect = getBoundingClientRect(element);
  return {
    width: rect.width,
    height: rect.height
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return {
    ...rect,
    x: rect.x - scroll.scrollLeft + offsets.x,
    y: rect.y - scroll.scrollTop + offsets.y
  };
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getDocumentRect(element) {
  var _element$ownerDocumen;
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  const width = max2(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  const height = max2(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body || html).direction === "rtl") {
    x += max2(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (["html", "body", "#document"].includes(getNodeName(parentNode))) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list3) {
  var _node$ownerDocument;
  if (list3 === void 0) {
    list3 = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollableAncestor);
  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;
  const updatedList = list3.concat(target);
  return isBody ? updatedList : (
    // @ts-ignore: isBody tells us target will be an HTMLElement here
    updatedList.concat(getOverflowAncestors(target))
  );
}
function contains(parent, child) {
  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    let next = child;
    do {
      if (next && parent === next) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, false, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  return {
    top,
    left,
    x: left,
    y: top,
    right: left + element.clientWidth,
    bottom: top + element.clientHeight,
    width: element.clientWidth,
    height: element.clientHeight
  };
}
function getClientRectFromClippingAncestor(element, clippingParent, strategy) {
  if (clippingParent === "viewport") {
    return rectToClientRect(getViewportRect(element, strategy));
  }
  if (isElement(clippingParent)) {
    return getInnerBoundingClientRect(clippingParent, strategy);
  }
  return rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingAncestors(element) {
  const clippingAncestors = getOverflowAncestors(element);
  const canEscapeClipping = ["absolute", "fixed"].includes(getComputedStyle$1(element).position);
  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingAncestors.filter((clippingAncestors2) => isElement(clippingAncestors2) && contains(clippingAncestors2, clipperElement) && getNodeName(clippingAncestors2) !== "body");
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const mainClippingAncestors = boundary === "clippingAncestors" ? getClippingAncestors(element) : [].concat(boundary);
  const clippingAncestors = [...mainClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max2(rect.top, accRect.top);
    accRect.right = min2(rect.right, accRect.right);
    accRect.bottom = min2(rect.bottom, accRect.bottom);
    accRect.left = max2(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
var platform = {
  getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement,
  getDimensions,
  getOffsetParent,
  getDocumentElement,
  getElementRects: (_ref) => {
    let {
      reference,
      floating,
      strategy
    } = _ref;
    return {
      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),
      floating: {
        ...getDimensions(floating),
        x: 0,
        y: 0
      }
    };
  },
  getClientRects: (element) => Array.from(element.getClientRects()),
  isRTL: (element) => getComputedStyle$1(element).direction === "rtl"
};
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll: _ancestorScroll = true,
    ancestorResize: _ancestorResize = true,
    elementResize = true,
    animationFrame = false
  } = options;
  const ancestorScroll = _ancestorScroll && !animationFrame;
  const ancestorResize = _ancestorResize && !animationFrame;
  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  let observer = null;
  if (elementResize) {
    let initialUpdate = true;
    observer = new ResizeObserver(() => {
      if (!initialUpdate) {
        update();
      }
      initialUpdate = false;
    });
    isElement(reference) && !animationFrame && observer.observe(reference);
    observer.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  update();
  return () => {
    var _observer;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    (_observer = observer) == null ? void 0 : _observer.disconnect();
    observer = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var computePosition2 = (reference, floating, options) => computePosition(reference, floating, {
  platform,
  ...options
});

// node_modules/@radix-ui/react-popper/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js
var React84 = __toESM(require_react());
var import_react16 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var index = typeof document !== "undefined" ? import_react16.useLayoutEffect : import_react16.useEffect;
function deepEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (typeof a !== typeof b) {
    return false;
  }
  if (typeof a === "function" && a.toString() === b.toString()) {
    return true;
  }
  let length, i, keys;
  if (a && b && typeof a == "object") {
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length)
        return false;
      for (i = length; i-- !== 0; ) {
        if (!deepEqual(a[i], b[i])) {
          return false;
        }
      }
      return true;
    }
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) {
      return false;
    }
    for (i = length; i-- !== 0; ) {
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {
        return false;
      }
    }
    for (i = length; i-- !== 0; ) {
      const key = keys[i];
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!deepEqual(a[key], b[key])) {
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}
function useLatestRef(value) {
  const ref = React84.useRef(value);
  index(() => {
    ref.current = value;
  });
  return ref;
}
function useFloating(_temp) {
  let {
    middleware,
    placement = "bottom",
    strategy = "absolute",
    whileElementsMounted
  } = _temp === void 0 ? {} : _temp;
  const reference = React84.useRef(null);
  const floating = React84.useRef(null);
  const whileElementsMountedRef = useLatestRef(whileElementsMounted);
  const cleanupRef = React84.useRef(null);
  const [data, setData] = React84.useState({
    // Setting these to `null` will allow the consumer to determine if
    // `computePosition()` has run yet
    x: null,
    y: null,
    strategy,
    placement,
    middlewareData: {}
  });
  const [latestMiddleware, setLatestMiddleware] = React84.useState(middleware);
  if (!deepEqual(latestMiddleware == null ? void 0 : latestMiddleware.map((_ref) => {
    let {
      options
    } = _ref;
    return options;
  }), middleware == null ? void 0 : middleware.map((_ref2) => {
    let {
      options
    } = _ref2;
    return options;
  }))) {
    setLatestMiddleware(middleware);
  }
  const update = React84.useCallback(() => {
    if (!reference.current || !floating.current) {
      return;
    }
    computePosition2(reference.current, floating.current, {
      middleware: latestMiddleware,
      placement,
      strategy
    }).then((data2) => {
      if (isMountedRef.current) {
        ReactDOM.flushSync(() => {
          setData(data2);
        });
      }
    });
  }, [latestMiddleware, placement, strategy]);
  index(() => {
    if (isMountedRef.current) {
      update();
    }
  }, [update]);
  const isMountedRef = React84.useRef(false);
  index(() => {
    isMountedRef.current = true;
    return () => {
      isMountedRef.current = false;
    };
  }, []);
  const runElementMountCallback = React84.useCallback(() => {
    if (typeof cleanupRef.current === "function") {
      cleanupRef.current();
      cleanupRef.current = null;
    }
    if (reference.current && floating.current) {
      if (whileElementsMountedRef.current) {
        const cleanupFn = whileElementsMountedRef.current(reference.current, floating.current, update);
        cleanupRef.current = cleanupFn;
      } else {
        update();
      }
    }
  }, [update, whileElementsMountedRef]);
  const setReference = React84.useCallback((node) => {
    reference.current = node;
    runElementMountCallback();
  }, [runElementMountCallback]);
  const setFloating = React84.useCallback((node) => {
    floating.current = node;
    runElementMountCallback();
  }, [runElementMountCallback]);
  const refs = React84.useMemo(() => ({
    reference,
    floating
  }), []);
  return React84.useMemo(() => ({
    ...data,
    update,
    refs,
    reference: setReference,
    floating: setFloating
  }), [data, update, refs, setReference, setFloating]);
}
var arrow2 = (options) => {
  const {
    element,
    padding
  } = options;
  function isRef(value) {
    return Object.prototype.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(args) {
      if (isRef(element)) {
        if (element.current != null) {
          return arrow({
            element: element.current,
            padding
          }).fn(args);
        }
        return {};
      } else if (element) {
        return arrow({
          element,
          padding
        }).fn(args);
      }
      return {};
    }
  };
};

// node_modules/@radix-ui/react-arrow/dist/index.module.js
var import_react17 = __toESM(require_react());
var $7e8f5cd07187803e$var$NAME = "Arrow";
var $7e8f5cd07187803e$export$21b07c8f274aebd5 = (0, import_react17.forwardRef)((props, forwardedRef) => {
  const { children, width = 10, height = 5, ...arrowProps } = props;
  return (0, import_react17.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.svg, _extends({}, arrowProps, {
    ref: forwardedRef,
    width,
    height,
    viewBox: "0 0 30 10",
    preserveAspectRatio: "none"
  }), props.asChild ? children : (0, import_react17.createElement)("polygon", {
    points: "0,0 30,0 15,10"
  }));
});
Object.assign($7e8f5cd07187803e$export$21b07c8f274aebd5, {
  displayName: $7e8f5cd07187803e$var$NAME
});
var $7e8f5cd07187803e$export$be92b6f5f03c0fe9 = $7e8f5cd07187803e$export$21b07c8f274aebd5;

// node_modules/@radix-ui/react-use-size/dist/index.module.js
var import_react18 = __toESM(require_react());
function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {
  const [size2, setSize] = (0, import_react18.useState)(void 0);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (element) {
      setSize({
        width: element.offsetWidth,
        height: element.offsetHeight
      });
      const resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries))
          return;
        if (!entries.length)
          return;
        const entry = entries[0];
        let width;
        let height;
        if ("borderBoxSize" in entry) {
          const borderSizeEntry = entry["borderBoxSize"];
          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize["inlineSize"];
          height = borderSize["blockSize"];
        } else {
          width = element.offsetWidth;
          height = element.offsetHeight;
        }
        setSize({
          width,
          height
        });
      });
      resizeObserver.observe(element, {
        box: "border-box"
      });
      return () => resizeObserver.unobserve(element);
    } else
      setSize(void 0);
  }, [
    element
  ]);
  return size2;
}

// node_modules/@radix-ui/react-popper/dist/index.module.js
var $cf1ac5d9fe0e8206$var$POPPER_NAME = "Popper";
var [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cf1ac5d9fe0e8206$var$POPPER_NAME);
var [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME);
var $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props) => {
  const { __scopePopper, children } = props;
  const [anchor, setAnchor] = (0, import_react19.useState)(null);
  return (0, import_react19.createElement)($cf1ac5d9fe0e8206$var$PopperProvider, {
    scope: __scopePopper,
    anchor,
    onAnchorChange: setAnchor
  }, children);
};
Object.assign($cf1ac5d9fe0e8206$export$badac9ada3a0bdf9, {
  displayName: $cf1ac5d9fe0e8206$var$POPPER_NAME
});
var $cf1ac5d9fe0e8206$var$ANCHOR_NAME = "PopperAnchor";
var $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = (0, import_react19.forwardRef)((props, forwardedRef) => {
  const { __scopePopper, virtualRef, ...anchorProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper);
  const ref = (0, import_react19.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react19.useEffect)(() => {
    context.onAnchorChange((virtualRef === null || virtualRef === void 0 ? void 0 : virtualRef.current) || ref.current);
  });
  return virtualRef ? null : (0, import_react19.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, anchorProps, {
    ref: composedRefs
  }));
});
Object.assign($cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d, {
  displayName: $cf1ac5d9fe0e8206$var$ANCHOR_NAME
});
var $cf1ac5d9fe0e8206$var$CONTENT_NAME = "PopperContent";
var [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME);
var [$cf1ac5d9fe0e8206$var$PositionContextProvider, $cf1ac5d9fe0e8206$var$usePositionContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, {
  hasParent: false,
  positionUpdateFns: /* @__PURE__ */ new Set()
});
var $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = (0, import_react19.forwardRef)((props, forwardedRef) => {
  var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$hide, _middlewareData$trans, _middlewareData$trans2;
  const { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = false, avoidCollisions = true, ...contentProps } = props;
  const context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);
  const [content, setContent] = (0, import_react19.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  );
  const [arrow3, setArrow] = (0, import_react19.useState)(null);
  const arrowSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(arrow3);
  const arrowWidth = (_arrowSize$width = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0;
  const arrowHeight = (_arrowSize$height = arrowSize === null || arrowSize === void 0 ? void 0 : arrowSize.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0;
  const desiredPlacement = side + (align !== "center" ? "-" + align : "");
  const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...collisionPaddingProp
  };
  const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
    collisionBoundary
  ];
  const hasExplicitBoundaries = boundary.length > 0;
  const detectOverflowOptions = {
    padding: collisionPadding,
    boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),
    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
    altBoundary: hasExplicitBoundaries
  };
  const { reference, floating, strategy, x, y, placement, middlewareData, update } = useFloating({
    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
    strategy: "fixed",
    placement: desiredPlacement,
    whileElementsMounted: autoUpdate,
    middleware: [
      offset({
        mainAxis: sideOffset + arrowHeight,
        alignmentAxis: alignOffset
      }),
      avoidCollisions ? shift({
        mainAxis: true,
        crossAxis: false,
        limiter: sticky === "partial" ? limitShift() : void 0,
        ...detectOverflowOptions
      }) : void 0,
      arrow3 ? arrow2({
        element: arrow3,
        padding: arrowPadding
      }) : void 0,
      avoidCollisions ? flip({
        ...detectOverflowOptions
      }) : void 0,
      $cf1ac5d9fe0e8206$var$transformOrigin({
        arrowWidth,
        arrowHeight
      }),
      hideWhenDetached ? hide({
        strategy: "referenceHidden"
      }) : void 0
    ].filter($cf1ac5d9fe0e8206$var$isDefined)
  });
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    reference(context.anchor);
  }, [
    reference,
    context.anchor
  ]);
  const isPlaced = x !== null && y !== null;
  const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
  const arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x;
  const arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y;
  const cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0;
  const [contentZIndex, setContentZIndex] = (0, import_react19.useState)();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (content)
      setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]);
  const { hasParent, positionUpdateFns } = $cf1ac5d9fe0e8206$var$usePositionContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper);
  const isRoot = !hasParent;
  (0, import_react19.useLayoutEffect)(() => {
    if (!isRoot) {
      positionUpdateFns.add(update);
      return () => {
        positionUpdateFns.delete(update);
      };
    }
  }, [
    isRoot,
    positionUpdateFns,
    update
  ]);
  (0, import_react19.useLayoutEffect)(() => {
    if (isRoot && isPlaced)
      Array.from(positionUpdateFns).reverse().forEach(
        (fn) => requestAnimationFrame(fn)
      );
  }, [
    isRoot,
    isPlaced,
    positionUpdateFns
  ]);
  const commonProps = {
    "data-side": placedSide,
    "data-align": placedAlign,
    ...contentProps,
    ref: composedRefs,
    style: {
      ...contentProps.style,
      // if the PopperContent hasn't been placed yet (not all measurements done)
      // we prevent animations so that users's animation don't kick in too early referring wrong sides
      animation: !isPlaced ? "none" : void 0,
      // hide the content if using the hide middleware and should be hidden
      opacity: (_middlewareData$hide = middlewareData.hide) !== null && _middlewareData$hide !== void 0 && _middlewareData$hide.referenceHidden ? 0 : void 0
    }
  };
  return (0, import_react19.createElement)("div", {
    ref: floating,
    "data-radix-popper-content-wrapper": "",
    style: {
      position: strategy,
      left: 0,
      top: 0,
      transform: isPlaced ? `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)` : "translate3d(0, -200%, 0)",
      // keep off the page when measuring
      minWidth: "max-content",
      zIndex: contentZIndex,
      ["--radix-popper-transform-origin"]: [
        (_middlewareData$trans = middlewareData.transformOrigin) === null || _middlewareData$trans === void 0 ? void 0 : _middlewareData$trans.x,
        (_middlewareData$trans2 = middlewareData.transformOrigin) === null || _middlewareData$trans2 === void 0 ? void 0 : _middlewareData$trans2.y
      ].join(" ")
    }
  }, (0, import_react19.createElement)($cf1ac5d9fe0e8206$var$PopperContentProvider, {
    scope: __scopePopper,
    placedSide,
    onArrowChange: setArrow,
    arrowX,
    arrowY,
    shouldHideArrow: cannotCenterArrow
  }, isRoot ? (0, import_react19.createElement)($cf1ac5d9fe0e8206$var$PositionContextProvider, {
    scope: __scopePopper,
    hasParent: true,
    positionUpdateFns
  }, (0, import_react19.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, commonProps)) : (0, import_react19.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, commonProps)));
});
Object.assign($cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc, {
  displayName: $cf1ac5d9fe0e8206$var$CONTENT_NAME
});
var $cf1ac5d9fe0e8206$var$ARROW_NAME = "PopperArrow";
var $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
};
var $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0 = (0, import_react19.forwardRef)(function $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd02(props, forwardedRef) {
  const { __scopePopper, ...arrowProps } = props;
  const contentContext = $cf1ac5d9fe0e8206$var$useContentContext($cf1ac5d9fe0e8206$var$ARROW_NAME, __scopePopper);
  const baseSide = $cf1ac5d9fe0e8206$var$OPPOSITE_SIDE[contentContext.placedSide];
  return (
    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
    // doesn't report size as we'd expect on SVG elements.
    // it reports their bounding box which is effectively the largest path inside the SVG.
    (0, import_react19.createElement)("span", {
      ref: contentContext.onArrowChange,
      style: {
        position: "absolute",
        left: contentContext.arrowX,
        top: contentContext.arrowY,
        [baseSide]: 0,
        transformOrigin: {
          top: "",
          right: "0 0",
          bottom: "center 0",
          left: "100% 0"
        }[contentContext.placedSide],
        transform: {
          top: "translateY(100%)",
          right: "translateY(50%) rotate(90deg) translateX(-50%)",
          bottom: `rotate(180deg)`,
          left: "translateY(50%) rotate(-90deg) translateX(50%)"
        }[contentContext.placedSide],
        visibility: contentContext.shouldHideArrow ? "hidden" : void 0
      }
    }, (0, import_react19.createElement)($7e8f5cd07187803e$export$be92b6f5f03c0fe9, _extends({}, arrowProps, {
      ref: forwardedRef,
      style: {
        ...arrowProps.style,
        // ensures the element can be measured correctly (mostly for if SVG)
        display: "block"
      }
    })))
  );
});
Object.assign($cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0, {
  displayName: $cf1ac5d9fe0e8206$var$ARROW_NAME
});
function $cf1ac5d9fe0e8206$var$isDefined(value) {
  return value !== void 0;
}
function $cf1ac5d9fe0e8206$var$isNotNull(value) {
  return value !== null;
}
var $cf1ac5d9fe0e8206$var$transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data) {
    var _middlewareData$arrow4, _middlewareData$arrow5, _middlewareData$arrow6, _middlewareData$arrow7, _middlewareData$arrow8;
    const { placement, rects, middlewareData } = data;
    const cannotCenterArrow = ((_middlewareData$arrow4 = middlewareData.arrow) === null || _middlewareData$arrow4 === void 0 ? void 0 : _middlewareData$arrow4.centerOffset) !== 0;
    const isArrowHidden = cannotCenterArrow;
    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
    const [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement);
    const noArrowAlign = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[placedAlign];
    const arrowXCenter = ((_middlewareData$arrow5 = (_middlewareData$arrow6 = middlewareData.arrow) === null || _middlewareData$arrow6 === void 0 ? void 0 : _middlewareData$arrow6.x) !== null && _middlewareData$arrow5 !== void 0 ? _middlewareData$arrow5 : 0) + arrowWidth / 2;
    const arrowYCenter = ((_middlewareData$arrow7 = (_middlewareData$arrow8 = middlewareData.arrow) === null || _middlewareData$arrow8 === void 0 ? void 0 : _middlewareData$arrow8.y) !== null && _middlewareData$arrow7 !== void 0 ? _middlewareData$arrow7 : 0) + arrowHeight / 2;
    let x = "";
    let y = "";
    if (placedSide === "bottom") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${-arrowHeight}px`;
    } else if (placedSide === "top") {
      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
      y = `${rects.floating.height + arrowHeight}px`;
    } else if (placedSide === "right") {
      x = `${-arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    } else if (placedSide === "left") {
      x = `${rects.floating.width + arrowHeight}px`;
      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
    }
    return {
      data: {
        x,
        y
      }
    };
  }
});
function $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement) {
  const [side, align = "center"] = placement.split("-");
  return [
    side,
    align
  ];
}
var $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9 = $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9;
var $cf1ac5d9fe0e8206$export$b688253958b8dfe7 = $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d;
var $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2 = $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc;
var $cf1ac5d9fe0e8206$export$21b07c8f274aebd5 = $cf1ac5d9fe0e8206$export$79d62cd4e10a3fd0;

// node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react20 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var $f1701beae083dbae$var$PORTAL_NAME = "Portal";
var $f1701beae083dbae$export$602eac185826482c = (0, import_react20.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  const { container = globalThis === null || globalThis === void 0 ? void 0 : (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? import_react_dom3.default.createPortal((0, import_react20.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});
Object.assign($f1701beae083dbae$export$602eac185826482c, {
  displayName: $f1701beae083dbae$var$PORTAL_NAME
});

// node_modules/@radix-ui/react-presence/dist/index.module.js
var import_react21 = __toESM(require_react());
var import_react_dom4 = __toESM(require_react_dom());
function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
  return (0, import_react21.useReducer)((state, event) => {
    const nextState = machine[state][event];
    return nextState !== null && nextState !== void 0 ? nextState : state;
  }, initialState);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  const { present, children } = props;
  const presence = $921a889cee6df7e8$var$usePresence(present);
  const child = typeof children === "function" ? children({
    present: presence.isPresent
  }) : import_react21.Children.only(children);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  const forceMount = typeof children === "function";
  return forceMount || presence.isPresent ? (0, import_react21.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  const [node1, setNode] = (0, import_react21.useState)();
  const stylesRef = (0, import_react21.useRef)({});
  const prevPresentRef = (0, import_react21.useRef)(present);
  const prevAnimationNameRef = (0, import_react21.useRef)("none");
  const initialState = present ? "mounted" : "unmounted";
  const [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  (0, import_react21.useEffect)(() => {
    const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    const styles = stylesRef.current;
    const wasPresent = prevPresentRef.current;
    const hasPresentChanged = wasPresent !== present;
    if (hasPresentChanged) {
      const prevAnimationName = prevAnimationNameRef.current;
      const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      if (present)
        send("MOUNT");
      else if (currentAnimationName === "none" || (styles === null || styles === void 0 ? void 0 : styles.display) === "none")
        send("UNMOUNT");
      else {
        const isAnimating = prevAnimationName !== currentAnimationName;
        if (wasPresent && isAnimating)
          send("ANIMATION_OUT");
        else
          send("UNMOUNT");
      }
      prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      const handleAnimationEnd = (event) => {
        const currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
        const isCurrentAnimation = currentAnimationName.includes(event.animationName);
        if (event.target === node1 && isCurrentAnimation)
          (0, import_react_dom4.flushSync)(
            () => send("ANIMATION_END")
          );
      };
      const handleAnimationStart = (event) => {
        if (event.target === node1)
          prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
      };
      node1.addEventListener("animationstart", handleAnimationStart);
      node1.addEventListener("animationcancel", handleAnimationEnd);
      node1.addEventListener("animationend", handleAnimationEnd);
      return () => {
        node1.removeEventListener("animationstart", handleAnimationStart);
        node1.removeEventListener("animationcancel", handleAnimationEnd);
        node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]);
  return {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react21.useCallback)((node) => {
      if (node)
        stylesRef.current = getComputedStyle(node);
      setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return (styles === null || styles === void 0 ? void 0 : styles.animationName) || "none";
}

// node_modules/@radix-ui/react-roving-focus/dist/index.module.js
var import_react22 = __toESM(require_react());
var $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
var $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {
  bubbles: false,
  cancelable: true
};
var $d7bdfb9eb0fdf311$var$GROUP_NAME = "RovingFocusGroup";
var [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($d7bdfb9eb0fdf311$var$GROUP_NAME);
var [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d7bdfb9eb0fdf311$var$GROUP_NAME, [
  $d7bdfb9eb0fdf311$var$createCollectionScope
]);
var [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME);
var $d7bdfb9eb0fdf311$export$8699f7c8af148338 = (0, import_react22.forwardRef)((props, forwardedRef) => {
  return (0, import_react22.createElement)($d7bdfb9eb0fdf311$var$Collection.Provider, {
    scope: props.__scopeRovingFocusGroup
  }, (0, import_react22.createElement)($d7bdfb9eb0fdf311$var$Collection.Slot, {
    scope: props.__scopeRovingFocusGroup
  }, (0, import_react22.createElement)($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, _extends({}, props, {
    ref: forwardedRef
  }))));
});
Object.assign($d7bdfb9eb0fdf311$export$8699f7c8af148338, {
  displayName: $d7bdfb9eb0fdf311$var$GROUP_NAME
});
var $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = (0, import_react22.forwardRef)((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, orientation, loop = false, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, ...groupProps } = props;
  const ref = (0, import_react22.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const [currentTabStopId = null, setCurrentTabStopId] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  });
  const [isTabbingBackOut, setIsTabbingBackOut] = (0, import_react22.useState)(false);
  const handleEntryFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEntryFocus);
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  const isClickFocusRef = (0, import_react22.useRef)(false);
  (0, import_react22.useEffect)(() => {
    const node = ref.current;
    if (node) {
      node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
      return () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
    }
  }, [
    handleEntryFocus
  ]);
  return (0, import_react22.createElement)($d7bdfb9eb0fdf311$var$RovingFocusProvider, {
    scope: __scopeRovingFocusGroup,
    orientation,
    dir: direction,
    loop,
    currentTabStopId,
    onItemFocus: (0, import_react22.useCallback)(
      (tabStopId) => setCurrentTabStopId(tabStopId),
      [
        setCurrentTabStopId
      ]
    ),
    onItemShiftTab: (0, import_react22.useCallback)(
      () => setIsTabbingBackOut(true),
      []
    )
  }, (0, import_react22.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    tabIndex: isTabbingBackOut ? -1 : 0,
    "data-orientation": orientation
  }, groupProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...props.style
    },
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, () => {
      isClickFocusRef.current = true;
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, (event) => {
      const isKeyboardFocus = !isClickFocusRef.current;
      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
        const entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);
        event.currentTarget.dispatchEvent(entryFocusEvent);
        if (!entryFocusEvent.defaultPrevented) {
          const items = getItems().filter(
            (item) => item.focusable
          );
          const activeItem = items.find(
            (item) => item.active
          );
          const currentItem = items.find(
            (item) => item.id === currentTabStopId
          );
          const candidateItems = [
            activeItem,
            currentItem,
            ...items
          ].filter(Boolean);
          const candidateNodes = candidateItems.map(
            (item) => item.ref.current
          );
          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);
        }
      }
      isClickFocusRef.current = false;
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsTabbingBackOut(false)
    )
  })));
});
var $d7bdfb9eb0fdf311$var$ITEM_NAME = "RovingFocusGroupItem";
var $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = (0, import_react22.forwardRef)((props, forwardedRef) => {
  const { __scopeRovingFocusGroup, focusable = true, active = false, ...itemProps } = props;
  const id = $1746a345f3d73bb7$export$f680877a34711e37();
  const context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup);
  const isCurrentTabStop = context.currentTabStopId === id;
  const getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup);
  return (0, import_react22.createElement)($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {
    scope: __scopeRovingFocusGroup,
    id,
    focusable,
    active
  }, (0, import_react22.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    tabIndex: isCurrentTabStop ? 0 : -1,
    "data-orientation": context.orientation
  }, itemProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      if (!focusable)
        event.preventDefault();
      else
        context.onItemFocus(id);
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => context.onItemFocus(id)
    ),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        context.onItemShiftTab();
        return;
      }
      if (event.target !== event.currentTarget)
        return;
      const focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);
      if (focusIntent !== void 0) {
        event.preventDefault();
        const items = getItems().filter(
          (item) => item.focusable
        );
        let candidateNodes = items.map(
          (item) => item.ref.current
        );
        if (focusIntent === "last")
          candidateNodes.reverse();
        else if (focusIntent === "prev" || focusIntent === "next") {
          if (focusIntent === "prev")
            candidateNodes.reverse();
          const currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes)
        );
      }
    })
  })));
});
Object.assign($d7bdfb9eb0fdf311$export$ab9df7c53fe8454, {
  displayName: $d7bdfb9eb0fdf311$var$ITEM_NAME
});
var $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {
  if (dir !== "rtl")
    return key;
  return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {
  const key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);
  if (orientation === "vertical" && [
    "ArrowLeft",
    "ArrowRight"
  ].includes(key))
    return void 0;
  if (orientation === "horizontal" && [
    "ArrowUp",
    "ArrowDown"
  ].includes(key))
    return void 0;
  return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];
}
function $d7bdfb9eb0fdf311$var$focusFirst(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
      return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
      return;
  }
}
function $d7bdfb9eb0fdf311$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index2) => array[(startIndex + index2) % array.length]
  );
}
var $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338;
var $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;

// node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document === "undefined") {
    return null;
  }
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
};
var counterMap = /* @__PURE__ */ new WeakMap();
var uncontrolledNodes = /* @__PURE__ */ new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target)) {
      return target;
    }
    var correctedTarget = unwrapHost(target);
    if (correctedTarget && parent.contains(correctedTarget)) {
      return correctedTarget;
    }
    console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing");
    return null;
  }).filter(function(x) {
    return Boolean(x);
  });
};
var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  if (!markerMap[markerName]) {
    markerMap[markerName] = /* @__PURE__ */ new WeakMap();
  }
  var markerCounter = markerMap[markerName];
  var hiddenNodes = [];
  var elementsToKeep = /* @__PURE__ */ new Set();
  var elementsToStop = new Set(targets);
  var keep = function(el) {
    if (!el || elementsToKeep.has(el)) {
      return;
    }
    elementsToKeep.add(el);
    keep(el.parentNode);
  };
  targets.forEach(keep);
  var deep = function(parent) {
    if (!parent || elementsToStop.has(parent)) {
      return;
    }
    Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node)) {
        deep(node);
      } else {
        try {
          var attr = node.getAttribute(controlAttribute);
          var alreadyHidden = attr !== null && attr !== "false";
          var counterValue = (counterMap.get(node) || 0) + 1;
          var markerValue = (markerCounter.get(node) || 0) + 1;
          counterMap.set(node, counterValue);
          markerCounter.set(node, markerValue);
          hiddenNodes.push(node);
          if (counterValue === 1 && alreadyHidden) {
            uncontrolledNodes.set(node, true);
          }
          if (markerValue === 1) {
            node.setAttribute(markerName, "true");
          }
          if (!alreadyHidden) {
            node.setAttribute(controlAttribute, "true");
          }
        } catch (e) {
          console.error("aria-hidden: cannot operate on ", node, e);
        }
      }
    });
  };
  deep(parentNode);
  elementsToKeep.clear();
  lockCount++;
  return function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1;
      var markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue);
      markerCounter.set(node, markerValue);
      if (!counterValue) {
        if (!uncontrolledNodes.has(node)) {
          node.removeAttribute(controlAttribute);
        }
        uncontrolledNodes.delete(node);
      }
      if (!markerValue) {
        node.removeAttribute(markerName);
      }
    });
    lockCount--;
    if (!lockCount) {
      counterMap = /* @__PURE__ */ new WeakMap();
      counterMap = /* @__PURE__ */ new WeakMap();
      uncontrolledNodes = /* @__PURE__ */ new WeakMap();
      markerMap = {};
    }
  };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
  if (markerName === void 0) {
    markerName = "data-aria-hidden";
  }
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  var activeParentNode = parentNode || getDefaultParent(originalTarget);
  if (!activeParentNode) {
    return function() {
      return null;
    };
  }
  targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]")));
  return applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden");
};

// node_modules/react-remove-scroll/dist/es2015/Combination.js
init_tslib_es6();
var React93 = __toESM(require_react());

// node_modules/react-remove-scroll/dist/es2015/UI.js
init_tslib_es6();
var React89 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position";
var fullWidthClassName = "width-before-scroll-bar";
var noScrollbarsClassName = "with-scroll-bars-hidden";
var removedBarSizeVariable = "--removed-body-scroll-bar-size";

// node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
  return ref;
}

// node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react23 = __toESM(require_react());
function useCallbackRef(initialValue, callback) {
  var ref = (0, import_react23.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          if (last !== value) {
            ref.value = value;
            ref.callback(value, last);
          }
        }
      }
    };
  })[0];
  ref.callback = callback;
  return ref.facade;
}

// node_modules/use-callback-ref/dist/es2015/useMergeRef.js
var React85 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? React85.useLayoutEffect : React85.useEffect;
var currentValues = /* @__PURE__ */ new WeakMap();
function useMergeRefs(refs, defaultValue2) {
  var callbackRef = useCallbackRef(defaultValue2 || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
  useIsomorphicLayoutEffect(function() {
    var oldValue = currentValues.get(callbackRef);
    if (oldValue) {
      var prevRefs_1 = new Set(oldValue);
      var nextRefs_1 = new Set(refs);
      var current_1 = callbackRef.current;
      prevRefs_1.forEach(function(ref) {
        if (!nextRefs_1.has(ref)) {
          assignRef(ref, null);
        }
      });
      nextRefs_1.forEach(function(ref) {
        if (!prevRefs_1.has(ref)) {
          assignRef(ref, current_1);
        }
      });
    }
    currentValues.set(callbackRef, refs);
  }, [refs]);
  return callbackRef;
}

// node_modules/use-sidecar/dist/es2015/hoc.js
init_tslib_es6();
var React86 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/hook.js
var import_react24 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/medium.js
init_tslib_es6();
function ItoI(a) {
  return a;
}
function innerCreateMedium(defaults, middleware) {
  if (middleware === void 0) {
    middleware = ItoI;
  }
  var buffer = [];
  var assigned = false;
  var medium = {
    read: function() {
      if (assigned) {
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      }
      if (buffer.length) {
        return buffer[buffer.length - 1];
      }
      return defaults;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      buffer.push(item);
      return function() {
        buffer = buffer.filter(function(x) {
          return x !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      assigned = true;
      while (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
      }
      buffer = {
        push: function(x) {
          return cb(x);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = true;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [];
        cbs.forEach(cb);
        pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [];
        cbs2.forEach(cb);
      };
      var cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle();
      buffer = {
        push: function(x) {
          pendingQueue.push(x);
          cycle();
        },
        filter: function(filter) {
          pendingQueue = pendingQueue.filter(filter);
          return buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  if (options === void 0) {
    options = {};
  }
  var medium = innerCreateMedium(null);
  medium.options = __assign({ async: true, ssr: false }, options);
  return medium;
}

// node_modules/use-sidecar/dist/es2015/renderProp.js
init_tslib_es6();
var React87 = __toESM(require_react());
var import_react25 = __toESM(require_react());

// node_modules/use-sidecar/dist/es2015/exports.js
init_tslib_es6();
var React88 = __toESM(require_react());
var SideCar = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar) {
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  }
  var Target = sideCar.read();
  if (!Target) {
    throw new Error("Sidecar medium not found");
  }
  return React88.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
  medium.useMedium(exported);
  return SideCar;
}

// node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
  return;
};
var RemoveScroll = React89.forwardRef(function(props, parentRef) {
  var ref = React89.useRef(null);
  var _a = React89.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1];
  var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container2 = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]);
  var SideCar2 = sideCar;
  var containerRef = useMergeRefs([ref, parentRef]);
  var containerProps = __assign(__assign({}, rest), callbacks);
  return React89.createElement(
    React89.Fragment,
    null,
    enabled && React89.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? React89.cloneElement(React89.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React89.createElement(Container2, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: true,
  removeScrollBar: true,
  inert: false
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
init_tslib_es6();
var React92 = __toESM(require_react());

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React91 = __toESM(require_react());

// node_modules/react-style-singleton/dist/es2015/hook.js
var React90 = __toESM(require_react());

// node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce) {
    return currentNonce;
  }
  if (typeof __webpack_nonce__ !== "undefined") {
    return __webpack_nonce__;
  }
  return void 0;
};

// node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  if (nonce) {
    tag.setAttribute("nonce", nonce);
  }
  return tag;
}
function injectStyles(tag, css) {
  if (tag.styleSheet) {
    tag.styleSheet.cssText = css;
  } else {
    tag.appendChild(document.createTextNode(css));
  }
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0;
  var stylesheet = null;
  return {
    add: function(style) {
      if (counter == 0) {
        if (stylesheet = makeStyleTag()) {
          injectStyles(stylesheet, style);
          insertStyleTag(stylesheet);
        }
      }
      counter++;
    },
    remove: function() {
      counter--;
      if (!counter && stylesheet) {
        stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
        stylesheet = null;
      }
    }
  };
};

// node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    React90.useEffect(function() {
      sheet.add(styles);
      return function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};

// node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle = styleHookSingleton();
  var Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    useStyle(styles, dynamic);
    return null;
  };
  return Sheet;
};

// node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
};
var parse = function(x) {
  return parseInt(x || "", 10) || 0;
};
var getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body);
  var left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"];
  var top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"];
  var right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse(left), parse(top), parse(right)];
};
var getGapWidth = function(gapMode) {
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  if (typeof window === "undefined") {
    return zeroGap;
  }
  var offsets = getOffset(gapMode);
  var documentWidth = document.documentElement.clientWidth;
  var windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton();
var lockAttribute = "data-scroll-locked";
var getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  if (gapMode === void 0) {
    gapMode = "margin";
  }
  return "\n  .".concat(noScrollbarsClassName, " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), "\n  }\n  \n  .").concat(zeroRightClassName, " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat(zeroRightClassName, " .").concat(zeroRightClassName, " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat(fullWidthClassName, " .").concat(fullWidthClassName, " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat(removedBarSizeVariable, ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
  var counter = parseInt(document.body.getAttribute(lockAttribute) || "0", 10);
  return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
  React91.useEffect(function() {
    document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
    return function() {
      var newCounter = getCurrentUseCounter() - 1;
      if (newCounter <= 0) {
        document.body.removeAttribute(lockAttribute);
      } else {
        document.body.setAttribute(lockAttribute, newCounter.toString());
      }
    };
  }, []);
};
var RemoveScrollBar = function(_a) {
  var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? "margin" : _b;
  useLockAttribute();
  var gap = React91.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React91.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? "!important" : "") });
};

// node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = false;
if (typeof window !== "undefined") {
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        passiveSupported = true;
        return true;
      }
    });
    window.addEventListener("test", options, options);
    window.removeEventListener("test", options, options);
  } catch (err) {
    passiveSupported = false;
  }
}
var options;
var nonPassive = passiveSupported ? { passive: false } : false;

// node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var elementCouldBeVScrolled = function(node) {
  var styles = window.getComputedStyle(node);
  return styles.overflowY !== "hidden" && // not-not-scrollable
  !(styles.overflowY === styles.overflowX && styles.overflowY === "visible");
};
var elementCouldBeHScrolled = function(node) {
  var styles = window.getComputedStyle(node);
  return styles.overflowX !== "hidden" && // not-not-scrollable
  !(styles.overflowY === styles.overflowX && styles.overflowX === "visible");
};
var locationCouldBeScrolled = function(axis, node) {
  var current = node;
  do {
    if (typeof ShadowRoot !== "undefined" && current instanceof ShadowRoot) {
      current = current.host;
    }
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), s = _a[1], d = _a[2];
      if (s > d) {
        return true;
      }
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return false;
};
var getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
};
var getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
};
var elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
  var delta = directionFactor * sourceDelta;
  var target = event.target;
  var targetInLock = endTarget.contains(target);
  var shouldCancelScroll = false;
  var isDeltaPositive = delta > 0;
  var availableScroll = 0;
  var availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
    var elementScroll = scroll_1 - capacity - directionFactor * position;
    if (position || elementScroll) {
      if (elementCouldBeScrolled(axis, target)) {
        availableScroll += elementScroll;
        availableScrollTop += position;
      }
    }
    target = target.parentNode;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  if (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll)) {
    shouldCancelScroll = true;
  } else if (!isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) {
    shouldCancelScroll = true;
  }
  return shouldCancelScroll;
};

// node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
};
var getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
};
var extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
  return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id) {
  return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React92.useRef([]);
  var touchStartRef = React92.useRef([0, 0]);
  var activeAxis = React92.useRef();
  var id = React92.useState(idCounter++)[0];
  var Style2 = React92.useState(function() {
    return styleSingleton();
  })[0];
  var lastProps = React92.useRef(props);
  React92.useEffect(function() {
    lastProps.current = props;
  }, [props]);
  React92.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);
      allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id));
      });
      return function() {
        document.body.classList.remove("block-interactivity-".concat(id));
        allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id));
        });
      };
    }
    return;
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React92.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2) {
      return !lastProps.current.allowPinchZoom;
    }
    var touch = getTouchXY(event);
    var touchStart = touchStartRef.current;
    var deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0];
    var deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1];
    var currentAxis;
    var target = event.target;
    var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range") {
      return false;
    }
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection) {
      return true;
    }
    if (canBeScrolledInMainDirection) {
      currentAxis = moveDirection;
    } else {
      currentAxis = moveDirection === "v" ? "h" : "v";
      canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    }
    if (!canBeScrolledInMainDirection) {
      return false;
    }
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY)) {
      activeAxis.current = currentAxis;
    }
    if (!currentAxis) {
      return true;
    }
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, true);
  }, []);
  var shouldPrevent = React92.useCallback(function(_event) {
    var event = _event;
    if (!lockStack.length || lockStack[lockStack.length - 1] !== Style2) {
      return;
    }
    var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event);
    var sourceEvent = shouldPreventQueue.current.filter(function(e) {
      return e.name === event.type && e.target === event.target && deltaCompare(e.delta, delta);
    })[0];
    if (sourceEvent && sourceEvent.should) {
      event.preventDefault();
      return;
    }
    if (!sourceEvent) {
      var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
        return node.contains(event.target);
      });
      var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
      if (shouldStop) {
        event.preventDefault();
      }
    }
  }, []);
  var shouldCancel = React92.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event);
    setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
        return e !== event;
      });
    }, 1);
  }, []);
  var scrollTouchStart = React92.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event);
    activeAxis.current = void 0;
  }, []);
  var scrollWheel = React92.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  var scrollTouchMove = React92.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React92.useEffect(function() {
    lockStack.push(Style2);
    props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    });
    document.addEventListener("wheel", shouldPrevent, nonPassive);
    document.addEventListener("touchmove", shouldPrevent, nonPassive);
    document.addEventListener("touchstart", scrollTouchStart, nonPassive);
    return function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      });
      document.removeEventListener("wheel", shouldPrevent, nonPassive);
      document.removeEventListener("touchmove", shouldPrevent, nonPassive);
      document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React92.createElement(
    React92.Fragment,
    null,
    inert ? React92.createElement(Style2, { styles: generateStyle(id) }) : null,
    removeScrollBar ? React92.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}

// node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React93.forwardRef(function(props, ref) {
  return React93.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// node_modules/@radix-ui/react-menu/dist/index.module.js
var $6cc32821e9371a1c$var$SELECTION_KEYS = [
  "Enter",
  " "
];
var $6cc32821e9371a1c$var$FIRST_KEYS = [
  "ArrowDown",
  "PageUp",
  "Home"
];
var $6cc32821e9371a1c$var$LAST_KEYS = [
  "ArrowUp",
  "PageDown",
  "End"
];
var $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [
  ...$6cc32821e9371a1c$var$FIRST_KEYS,
  ...$6cc32821e9371a1c$var$LAST_KEYS
];
var $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {
  ltr: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowRight"
  ],
  rtl: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowLeft"
  ]
};
var $6cc32821e9371a1c$var$SUB_CLOSE_KEYS = {
  ltr: [
    "ArrowLeft"
  ],
  rtl: [
    "ArrowRight"
  ]
};
var $6cc32821e9371a1c$var$MENU_NAME = "Menu";
var [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($6cc32821e9371a1c$var$MENU_NAME);
var [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6cc32821e9371a1c$var$MENU_NAME, [
  $6cc32821e9371a1c$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]);
var $6cc32821e9371a1c$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
var $6cc32821e9371a1c$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4();
var [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);
var [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME);
var $6cc32821e9371a1c$export$d9b273488cd8ce6f = (props) => {
  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const [content, setContent] = (0, import_react26.useState)(null);
  const isUsingKeyboardRef = (0, import_react26.useRef)(false);
  const handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange);
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  (0, import_react26.useEffect)(() => {
    const handleKeyDown = () => {
      isUsingKeyboardRef.current = true;
      document.addEventListener("pointerdown", handlePointer, {
        capture: true,
        once: true
      });
      document.addEventListener("pointermove", handlePointer, {
        capture: true,
        once: true
      });
    };
    const handlePointer = () => isUsingKeyboardRef.current = false;
    document.addEventListener("keydown", handleKeyDown, {
      capture: true
    });
    return () => {
      document.removeEventListener("keydown", handleKeyDown, {
        capture: true
      });
      document.removeEventListener("pointerdown", handlePointer, {
        capture: true
      });
      document.removeEventListener("pointermove", handlePointer, {
        capture: true
      });
    };
  }, []);
  return (0, import_react26.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuRootProvider, {
    scope: __scopeMenu,
    onClose: (0, import_react26.useCallback)(
      () => handleOpenChange(false),
      [
        handleOpenChange
      ]
    ),
    isUsingKeyboardRef,
    dir: direction,
    modal
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$d9b273488cd8ce6f, {
  displayName: $6cc32821e9371a1c$var$MENU_NAME
});
var $6cc32821e9371a1c$var$ANCHOR_NAME = "MenuAnchor";
var $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...anchorProps } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return (0, import_react26.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({}, popperScope, anchorProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$9fa5ebd18bee4d43, {
  displayName: $6cc32821e9371a1c$var$ANCHOR_NAME
});
var $6cc32821e9371a1c$var$PORTAL_NAME = "MenuPortal";
var [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {
  forceMount: void 0
});
var $6cc32821e9371a1c$export$793392f970497feb = (props) => {
  const { __scopeMenu, forceMount, children, container } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$PortalProvider, {
    scope: __scopeMenu,
    forceMount
  }, (0, import_react26.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react26.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true,
    container
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$793392f970497feb, {
  displayName: $6cc32821e9371a1c$var$PORTAL_NAME
});
var $6cc32821e9371a1c$var$CONTENT_NAME = "MenuContent";
var [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME);
var $6cc32821e9371a1c$export$479f0f2f71193efe = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, (0, import_react26.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react26.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, rootContext.modal ? (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuRootContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuRootContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })))));
});
var $6cc32821e9371a1c$var$MenuRootContentModal = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const ref = (0, import_react26.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  (0, import_react26.useEffect)(() => {
    const content = ref.current;
    if (content)
      return hideOthers(content);
  }, []);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: context.open,
    disableOutsideScroll: true,
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault(),
      {
        checkForDefaultPrevented: false
      }
    ),
    onDismiss: () => context.onOpenChange(false)
  }));
});
var $6cc32821e9371a1c$var$MenuRootContentNonModal = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    disableOutsideScroll: false,
    onDismiss: () => context.onOpenChange(false)
  }));
});
var $6cc32821e9371a1c$var$MenuContentImpl = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, loop = false, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, disableOutsideScroll, ...contentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu);
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);
  const getItems = $6cc32821e9371a1c$var$useCollection(__scopeMenu);
  const [currentItemId, setCurrentItemId] = (0, import_react26.useState)(null);
  const contentRef = (0, import_react26.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef, context.onContentChange);
  const timerRef = (0, import_react26.useRef)(0);
  const searchRef = (0, import_react26.useRef)("");
  const pointerGraceTimerRef = (0, import_react26.useRef)(0);
  const pointerGraceIntentRef = (0, import_react26.useRef)(null);
  const pointerDirRef = (0, import_react26.useRef)("right");
  const lastPointerXRef = (0, import_react26.useRef)(0);
  const ScrollLockWrapper = disableOutsideScroll ? Combination_default : import_react26.Fragment;
  const scrollLockWrapperProps = disableOutsideScroll ? {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: true
  } : void 0;
  const handleTypeaheadSearch = (key) => {
    var _items$find, _items$find2;
    const search = searchRef.current + key;
    const items = getItems().filter(
      (item) => !item.disabled
    );
    const currentItem = document.activeElement;
    const currentMatch = (_items$find = items.find(
      (item) => item.ref.current === currentItem
    )) === null || _items$find === void 0 ? void 0 : _items$find.textValue;
    const values = items.map(
      (item) => item.textValue
    );
    const nextMatch = $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch);
    const newItem = (_items$find2 = items.find(
      (item) => item.textValue === nextMatch
    )) === null || _items$find2 === void 0 ? void 0 : _items$find2.ref.current;
    (function updateSearch(value) {
      searchRef.current = value;
      window.clearTimeout(timerRef.current);
      if (value !== "")
        timerRef.current = window.setTimeout(
          () => updateSearch(""),
          1e3
        );
    })(search);
    if (newItem)
      setTimeout(
        () => newItem.focus()
      );
  };
  (0, import_react26.useEffect)(() => {
    return () => window.clearTimeout(timerRef.current);
  }, []);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  const isPointerMovingToSubmenu = (0, import_react26.useCallback)((event) => {
    var _pointerGraceIntentRe, _pointerGraceIntentRe2;
    const isMovingTowards = pointerDirRef.current === ((_pointerGraceIntentRe = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe === void 0 ? void 0 : _pointerGraceIntentRe.side);
    return isMovingTowards && $6cc32821e9371a1c$var$isPointerInGraceArea(event, (_pointerGraceIntentRe2 = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe2 === void 0 ? void 0 : _pointerGraceIntentRe2.area);
  }, []);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuContentProvider, {
    scope: __scopeMenu,
    searchRef,
    onItemEnter: (0, import_react26.useCallback)((event) => {
      if (isPointerMovingToSubmenu(event))
        event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    onItemLeave: (0, import_react26.useCallback)((event) => {
      var _contentRef$current;
      if (isPointerMovingToSubmenu(event))
        return;
      (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus();
      setCurrentItemId(null);
    }, [
      isPointerMovingToSubmenu
    ]),
    onTriggerLeave: (0, import_react26.useCallback)((event) => {
      if (isPointerMovingToSubmenu(event))
        event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    pointerGraceTimerRef,
    onPointerGraceIntentChange: (0, import_react26.useCallback)((intent) => {
      pointerGraceIntentRef.current = intent;
    }, [])
  }, (0, import_react26.createElement)(ScrollLockWrapper, scrollLockWrapperProps, (0, import_react26.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    trapped: trapFocus,
    onMountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onOpenAutoFocus, (event) => {
      var _contentRef$current2;
      event.preventDefault();
      (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 || _contentRef$current2.focus();
    }),
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react26.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside,
    onInteractOutside,
    onDismiss
  }, (0, import_react26.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    dir: rootContext.dir,
    orientation: "vertical",
    loop,
    currentTabStopId: currentItemId,
    onCurrentTabStopIdChange: setCurrentItemId,
    onEntryFocus: (event) => {
      if (!rootContext.isUsingKeyboardRef.current)
        event.preventDefault();
    }
  }), (0, import_react26.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    role: "menu",
    "aria-orientation": "vertical",
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open),
    dir: rootContext.dir
  }, popperScope, contentProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      const target = event.target;
      const isKeyDownInside = target.closest('[role="menu"]') === event.currentTarget;
      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
      const isCharacterKey = event.key.length === 1;
      if (isKeyDownInside) {
        if (event.key === "Tab")
          event.preventDefault();
        if (!isModifierKey && isCharacterKey)
          handleTypeaheadSearch(event.key);
      }
      const content = contentRef.current;
      if (event.target !== content)
        return;
      if (!$6cc32821e9371a1c$var$FIRST_LAST_KEYS.includes(event.key))
        return;
      event.preventDefault();
      const items = getItems().filter(
        (item) => !item.disabled
      );
      const candidateNodes = items.map(
        (item) => item.ref.current
      );
      if ($6cc32821e9371a1c$var$LAST_KEYS.includes(event.key))
        candidateNodes.reverse();
      $6cc32821e9371a1c$var$focusFirst(candidateNodes);
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, (event) => {
      if (!event.currentTarget.contains(event.target)) {
        window.clearTimeout(timerRef.current);
        searchRef.current = "";
      }
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      const target = event.target;
      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;
      if (event.currentTarget.contains(target) && pointerXHasChanged) {
        const newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
        pointerDirRef.current = newDir;
        lastPointerXRef.current = event.clientX;
      }
    }))
  })))))));
});
Object.assign($6cc32821e9371a1c$export$479f0f2f71193efe, {
  displayName: $6cc32821e9371a1c$var$CONTENT_NAME
});
var $6cc32821e9371a1c$var$GROUP_NAME = "MenuGroup";
var $6cc32821e9371a1c$export$22a631d1f72787bb = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...groupProps } = props;
  return (0, import_react26.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "group"
  }, groupProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$22a631d1f72787bb, {
  displayName: $6cc32821e9371a1c$var$GROUP_NAME
});
var $6cc32821e9371a1c$var$LABEL_NAME = "MenuLabel";
var $6cc32821e9371a1c$export$dd37bec0e8a99143 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...labelProps } = props;
  return (0, import_react26.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({}, labelProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$dd37bec0e8a99143, {
  displayName: $6cc32821e9371a1c$var$LABEL_NAME
});
var $6cc32821e9371a1c$var$ITEM_NAME = "MenuItem";
var $6cc32821e9371a1c$var$ITEM_SELECT = "menu.itemSelect";
var $6cc32821e9371a1c$export$2ce376c2cc3355c8 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { disabled = false, onSelect, ...itemProps } = props;
  const ref = (0, import_react26.useRef)(null);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const isPointerDownRef = (0, import_react26.useRef)(false);
  const handleSelect = () => {
    const menuItem = ref.current;
    if (!disabled && menuItem) {
      const itemSelectEvent = new CustomEvent($6cc32821e9371a1c$var$ITEM_SELECT, {
        bubbles: true,
        cancelable: true
      });
      menuItem.addEventListener(
        $6cc32821e9371a1c$var$ITEM_SELECT,
        (event) => onSelect === null || onSelect === void 0 ? void 0 : onSelect(event),
        {
          once: true
        }
      );
      $8927f6f2acc4f386$export$6d1a0317bde7de7f(menuItem, itemSelectEvent);
      if (itemSelectEvent.defaultPrevented)
        isPointerDownRef.current = false;
      else
        rootContext.onClose();
    }
  };
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends({}, itemProps, {
    ref: composedRefs,
    disabled,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, handleSelect),
    onPointerDown: (event) => {
      var _props$onPointerDown;
      (_props$onPointerDown = props.onPointerDown) === null || _props$onPointerDown === void 0 || _props$onPointerDown.call(props, event);
      isPointerDownRef.current = true;
    },
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      var _event$currentTarget;
      if (!isPointerDownRef.current)
        (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || _event$currentTarget.click();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isTypingAhead = contentContext.searchRef.current !== "";
      if (disabled || isTypingAhead && event.key === " ")
        return;
      if ($6cc32821e9371a1c$var$SELECTION_KEYS.includes(event.key)) {
        event.currentTarget.click();
        event.preventDefault();
      }
    })
  }));
});
Object.assign($6cc32821e9371a1c$export$2ce376c2cc3355c8, {
  displayName: $6cc32821e9371a1c$var$ITEM_NAME
});
var $6cc32821e9371a1c$var$MenuItemImpl = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, __scopeMenu);
  const rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu);
  const ref = (0, import_react26.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [isFocused, setIsFocused] = (0, import_react26.useState)(false);
  const [textContent, setTextContent] = (0, import_react26.useState)("");
  (0, import_react26.useEffect)(() => {
    const menuItem = ref.current;
    if (menuItem) {
      var _menuItem$textContent;
      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : "").trim());
    }
  }, [
    itemProps.children
  ]);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$Collection.ItemSlot, {
    scope: __scopeMenu,
    disabled,
    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent
  }, (0, import_react26.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends({
    asChild: true
  }, rovingFocusGroupScope, {
    focusable: !disabled
  }), (0, import_react26.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "menuitem",
    "data-highlighted": isFocused ? "" : void 0,
    "aria-disabled": disabled || void 0,
    "data-disabled": disabled ? "" : void 0
  }, itemProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      if (disabled)
        contentContext.onItemLeave(event);
      else {
        contentContext.onItemEnter(event);
        if (!event.defaultPrevented) {
          const item = event.currentTarget;
          item.focus();
        }
      }
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(
      (event) => contentContext.onItemLeave(event)
    )),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => setIsFocused(true)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsFocused(false)
    )
  }))));
});
var $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME = "MenuCheckboxItem";
var $6cc32821e9371a1c$export$f6f243521332502d = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { checked = false, onCheckedChange, ...checkboxItemProps } = props;
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, (0, import_react26.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemcheckbox",
    "aria-checked": checked
  }, checkboxItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      checkboxItemProps.onSelect,
      () => onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange(!checked),
      {
        checkForDefaultPrevented: false
      }
    )
  })));
});
Object.assign($6cc32821e9371a1c$export$f6f243521332502d, {
  displayName: $6cc32821e9371a1c$var$CHECKBOX_ITEM_NAME
});
var $6cc32821e9371a1c$var$RADIO_GROUP_NAME = "MenuRadioGroup";
var [$6cc32821e9371a1c$var$RadioGroupProvider, $6cc32821e9371a1c$var$useRadioGroupContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$RADIO_GROUP_NAME, {
  value: void 0,
  onValueChange: () => {
  }
});
var $6cc32821e9371a1c$export$ea2200c9eee416b3 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { value, onValueChange, ...groupProps } = props;
  const handleValueChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onValueChange);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$RadioGroupProvider, {
    scope: props.__scopeMenu,
    value,
    onValueChange: handleValueChange
  }, (0, import_react26.createElement)($6cc32821e9371a1c$export$22a631d1f72787bb, _extends({}, groupProps, {
    ref: forwardedRef
  })));
});
Object.assign($6cc32821e9371a1c$export$ea2200c9eee416b3, {
  displayName: $6cc32821e9371a1c$var$RADIO_GROUP_NAME
});
var $6cc32821e9371a1c$var$RADIO_ITEM_NAME = "MenuRadioItem";
var $6cc32821e9371a1c$export$69bd225e9817f6d0 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { value, ...radioItemProps } = props;
  const context = $6cc32821e9371a1c$var$useRadioGroupContext($6cc32821e9371a1c$var$RADIO_ITEM_NAME, props.__scopeMenu);
  const checked = value === context.value;
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, (0, import_react26.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends({
    role: "menuitemradio",
    "aria-checked": checked
  }, radioItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(radioItemProps.onSelect, () => {
      var _context$onValueChang;
      return (_context$onValueChang = context.onValueChange) === null || _context$onValueChang === void 0 ? void 0 : _context$onValueChang.call(context, value);
    }, {
      checkForDefaultPrevented: false
    })
  })));
});
Object.assign($6cc32821e9371a1c$export$69bd225e9817f6d0, {
  displayName: $6cc32821e9371a1c$var$RADIO_ITEM_NAME
});
var $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME = "MenuItemIndicator";
var [$6cc32821e9371a1c$var$ItemIndicatorProvider, $6cc32821e9371a1c$var$useItemIndicatorContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, {
  checked: false
});
var $6cc32821e9371a1c$export$a2593e23056970a3 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;
  const indicatorContext = $6cc32821e9371a1c$var$useItemIndicatorContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, __scopeMenu);
  return (0, import_react26.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || indicatorContext.checked
  }, (0, import_react26.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, itemIndicatorProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(indicatorContext.checked)
  })));
});
Object.assign($6cc32821e9371a1c$export$a2593e23056970a3, {
  displayName: $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME
});
var $6cc32821e9371a1c$var$SEPARATOR_NAME = "MenuSeparator";
var $6cc32821e9371a1c$export$1cec7dcdd713e220 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...separatorProps } = props;
  return (0, import_react26.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
    role: "separator",
    "aria-orientation": "horizontal"
  }, separatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$1cec7dcdd713e220, {
  displayName: $6cc32821e9371a1c$var$SEPARATOR_NAME
});
var $6cc32821e9371a1c$var$ARROW_NAME = "MenuArrow";
var $6cc32821e9371a1c$export$bcdda4773debf5fa = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const { __scopeMenu, ...arrowProps } = props;
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return (0, import_react26.createElement)($cf1ac5d9fe0e8206$export$21b07c8f274aebd5, _extends({}, popperScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($6cc32821e9371a1c$export$bcdda4773debf5fa, {
  displayName: $6cc32821e9371a1c$var$ARROW_NAME
});
var $6cc32821e9371a1c$var$SUB_NAME = "MenuSub";
var [$6cc32821e9371a1c$var$MenuSubProvider, $6cc32821e9371a1c$var$useMenuSubContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$SUB_NAME);
var $6cc32821e9371a1c$export$71bdb9d1e2909932 = (props) => {
  const { __scopeMenu, children, open = false, onOpenChange } = props;
  const parentMenuContext = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_NAME, __scopeMenu);
  const popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  const [trigger, setTrigger] = (0, import_react26.useState)(null);
  const [content, setContent] = (0, import_react26.useState)(null);
  const handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange);
  (0, import_react26.useEffect)(() => {
    if (parentMenuContext.open === false)
      handleOpenChange(false);
    return () => handleOpenChange(false);
  }, [
    parentMenuContext.open,
    handleOpenChange
  ]);
  return (0, import_react26.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuSubProvider, {
    scope: __scopeMenu,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    trigger,
    onTriggerChange: setTrigger
  }, children)));
};
Object.assign($6cc32821e9371a1c$export$71bdb9d1e2909932, {
  displayName: $6cc32821e9371a1c$var$SUB_NAME
});
var $6cc32821e9371a1c$var$SUB_TRIGGER_NAME = "MenuSubTrigger";
var $6cc32821e9371a1c$export$5fbbb3ba7297405f = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu);
  const openTimerRef = (0, import_react26.useRef)(null);
  const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;
  const scope = {
    __scopeMenu: props.__scopeMenu
  };
  const clearOpenTimer = (0, import_react26.useCallback)(() => {
    if (openTimerRef.current)
      window.clearTimeout(openTimerRef.current);
    openTimerRef.current = null;
  }, []);
  (0, import_react26.useEffect)(
    () => clearOpenTimer,
    [
      clearOpenTimer
    ]
  );
  (0, import_react26.useEffect)(() => {
    const pointerGraceTimer = pointerGraceTimerRef.current;
    return () => {
      window.clearTimeout(pointerGraceTimer);
      onPointerGraceIntentChange(null);
    };
  }, [
    pointerGraceTimerRef,
    onPointerGraceIntentChange
  ]);
  return (0, import_react26.createElement)($6cc32821e9371a1c$export$9fa5ebd18bee4d43, _extends({
    asChild: true
  }, scope), (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends({
    id: subContext.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": subContext.contentId,
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open)
  }, props, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, subContext.onTriggerChange),
    onClick: (event) => {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event);
      if (props.disabled || event.defaultPrevented)
        return;
      event.currentTarget.focus();
      if (!context.open)
        context.onOpenChange(true);
    },
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      contentContext.onItemEnter(event);
      if (event.defaultPrevented)
        return;
      if (!props.disabled && !context.open && !openTimerRef.current) {
        contentContext.onPointerGraceIntentChange(null);
        openTimerRef.current = window.setTimeout(() => {
          context.onOpenChange(true);
          clearOpenTimer();
        }, 100);
      }
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse((event) => {
      var _context$content;
      clearOpenTimer();
      const contentRect = (_context$content = context.content) === null || _context$content === void 0 ? void 0 : _context$content.getBoundingClientRect();
      if (contentRect) {
        var _context$content2;
        const side = (_context$content2 = context.content) === null || _context$content2 === void 0 ? void 0 : _context$content2.dataset.side;
        const rightSide = side === "right";
        const bleed = rightSide ? -5 : 5;
        const contentNearEdge = contentRect[rightSide ? "left" : "right"];
        const contentFarEdge = contentRect[rightSide ? "right" : "left"];
        contentContext.onPointerGraceIntentChange({
          area: [
            // consistently within polygon bounds
            {
              x: event.clientX + bleed,
              y: event.clientY
            },
            {
              x: contentNearEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.bottom
            },
            {
              x: contentNearEdge,
              y: contentRect.bottom
            }
          ],
          side
        });
        window.clearTimeout(pointerGraceTimerRef.current);
        pointerGraceTimerRef.current = window.setTimeout(
          () => contentContext.onPointerGraceIntentChange(null),
          300
        );
      } else {
        contentContext.onTriggerLeave(event);
        if (event.defaultPrevented)
          return;
        contentContext.onPointerGraceIntentChange(null);
      }
    })),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isTypingAhead = contentContext.searchRef.current !== "";
      if (props.disabled || isTypingAhead && event.key === " ")
        return;
      if ($6cc32821e9371a1c$var$SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
        var _context$content3;
        context.onOpenChange(true);
        (_context$content3 = context.content) === null || _context$content3 === void 0 || _context$content3.focus();
        event.preventDefault();
      }
    })
  })));
});
Object.assign($6cc32821e9371a1c$export$5fbbb3ba7297405f, {
  displayName: $6cc32821e9371a1c$var$SUB_TRIGGER_NAME
});
var $6cc32821e9371a1c$var$SUB_CONTENT_NAME = "MenuSubContent";
var $6cc32821e9371a1c$export$e7142ab31822bde6 = (0, import_react26.forwardRef)((props, forwardedRef) => {
  const portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const { forceMount = portalContext.forceMount, ...subContentProps } = props;
  const context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  const subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_CONTENT_NAME, props.__scopeMenu);
  const ref = (0, import_react26.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react26.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, (0, import_react26.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react26.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, (0, import_react26.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends({
    id: subContext.contentId,
    "aria-labelledby": subContext.triggerId
  }, subContentProps, {
    ref: composedRefs,
    align: "start",
    side: rootContext.dir === "rtl" ? "left" : "right",
    disableOutsidePointerEvents: false,
    disableOutsideScroll: false,
    trapFocus: false,
    onOpenAutoFocus: (event) => {
      var _ref$current;
      if (rootContext.isUsingKeyboardRef.current)
        (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();
      event.preventDefault();
    },
    onCloseAutoFocus: (event) => event.preventDefault(),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusOutside, (event) => {
      if (event.target !== subContext.trigger)
        context.onOpenChange(false);
    }),
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onEscapeKeyDown, rootContext.onClose),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      const isKeyDownInside = event.currentTarget.contains(event.target);
      const isCloseKey = $6cc32821e9371a1c$var$SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
      if (isKeyDownInside && isCloseKey) {
        var _subContext$trigger;
        context.onOpenChange(false);
        (_subContext$trigger = subContext.trigger) === null || _subContext$trigger === void 0 || _subContext$trigger.focus();
        event.preventDefault();
      }
    })
  })))));
});
Object.assign($6cc32821e9371a1c$export$e7142ab31822bde6, {
  displayName: $6cc32821e9371a1c$var$SUB_CONTENT_NAME
});
function $6cc32821e9371a1c$var$getOpenState(open) {
  return open ? "open" : "closed";
}
function $6cc32821e9371a1c$var$getCheckedState(checked) {
  return checked ? "checked" : "unchecked";
}
function $6cc32821e9371a1c$var$focusFirst(candidates) {
  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (const candidate of candidates) {
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)
      return;
    candidate.focus();
    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT)
      return;
  }
}
function $6cc32821e9371a1c$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index2) => array[(startIndex + index2) % array.length]
  );
}
function $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch) {
  const isRepeated = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  );
  const normalizedSearch = isRepeated ? search[0] : search;
  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;
  let wrappedValues = $6cc32821e9371a1c$var$wrapArray(values, Math.max(currentMatchIndex, 0));
  const excludeCurrentMatch = normalizedSearch.length === 1;
  if (excludeCurrentMatch)
    wrappedValues = wrappedValues.filter(
      (v) => v !== currentMatch
    );
  const nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function $6cc32821e9371a1c$var$isPointInPolygon(point, polygon) {
  const { x, y } = point;
  let inside = false;
  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {
    const xi = polygon[i].x;
    const yi = polygon[i].y;
    const xj = polygon[j].x;
    const yj = polygon[j].y;
    const intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $6cc32821e9371a1c$var$isPointerInGraceArea(event, area) {
  if (!area)
    return false;
  const cursorPos = {
    x: event.clientX,
    y: event.clientY
  };
  return $6cc32821e9371a1c$var$isPointInPolygon(cursorPos, area);
}
function $6cc32821e9371a1c$var$whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var $6cc32821e9371a1c$export$be92b6f5f03c0fe9 = $6cc32821e9371a1c$export$d9b273488cd8ce6f;
var $6cc32821e9371a1c$export$b688253958b8dfe7 = $6cc32821e9371a1c$export$9fa5ebd18bee4d43;
var $6cc32821e9371a1c$export$602eac185826482c = $6cc32821e9371a1c$export$793392f970497feb;
var $6cc32821e9371a1c$export$7c6e2c02157bb7d2 = $6cc32821e9371a1c$export$479f0f2f71193efe;
var $6cc32821e9371a1c$export$eb2fcfdbd7ba97d4 = $6cc32821e9371a1c$export$22a631d1f72787bb;
var $6cc32821e9371a1c$export$b04be29aa201d4f5 = $6cc32821e9371a1c$export$dd37bec0e8a99143;
var $6cc32821e9371a1c$export$6d08773d2e66f8f2 = $6cc32821e9371a1c$export$2ce376c2cc3355c8;
var $6cc32821e9371a1c$export$16ce288f89fa631c = $6cc32821e9371a1c$export$f6f243521332502d;
var $6cc32821e9371a1c$export$a98f0dcb43a68a25 = $6cc32821e9371a1c$export$ea2200c9eee416b3;
var $6cc32821e9371a1c$export$371ab307eab489c0 = $6cc32821e9371a1c$export$69bd225e9817f6d0;
var $6cc32821e9371a1c$export$c3468e2714d175fa = $6cc32821e9371a1c$export$a2593e23056970a3;
var $6cc32821e9371a1c$export$1ff3c3f08ae963c0 = $6cc32821e9371a1c$export$1cec7dcdd713e220;
var $6cc32821e9371a1c$export$21b07c8f274aebd5 = $6cc32821e9371a1c$export$bcdda4773debf5fa;
var $6cc32821e9371a1c$export$d7a01e11500dfb6f = $6cc32821e9371a1c$export$71bdb9d1e2909932;
var $6cc32821e9371a1c$export$2ea8a7a591ac5eac = $6cc32821e9371a1c$export$5fbbb3ba7297405f;
var $6cc32821e9371a1c$export$6d4de93b380beddf = $6cc32821e9371a1c$export$e7142ab31822bde6;

// node_modules/@radix-ui/react-dropdown-menu/dist/index.module.js
var $d08ef79370b62062$var$DROPDOWN_MENU_NAME = "DropdownMenu";
var [$d08ef79370b62062$var$createDropdownMenuContext, $d08ef79370b62062$export$c0623cd925aeb687] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d08ef79370b62062$var$DROPDOWN_MENU_NAME, [
  $6cc32821e9371a1c$export$4027731b685e72eb
]);
var $d08ef79370b62062$var$useMenuScope = $6cc32821e9371a1c$export$4027731b685e72eb();
var [$d08ef79370b62062$var$DropdownMenuProvider, $d08ef79370b62062$var$useDropdownMenuContext] = $d08ef79370b62062$var$createDropdownMenuContext($d08ef79370b62062$var$DROPDOWN_MENU_NAME);
var $d08ef79370b62062$export$e44a253a59704894 = (props) => {
  const { __scopeDropdownMenu, children, dir, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  const triggerRef = (0, import_react27.useRef)(null);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react27.createElement)($d08ef79370b62062$var$DropdownMenuProvider, {
    scope: __scopeDropdownMenu,
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react27.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, (0, import_react27.createElement)($6cc32821e9371a1c$export$be92b6f5f03c0fe9, _extends({}, menuScope, {
    open,
    onOpenChange: setOpen,
    dir,
    modal
  }), children));
};
Object.assign($d08ef79370b62062$export$e44a253a59704894, {
  displayName: $d08ef79370b62062$var$DROPDOWN_MENU_NAME
});
var $d08ef79370b62062$var$TRIGGER_NAME = "DropdownMenuTrigger";
var $d08ef79370b62062$export$d2469213b3befba9 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;
  const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$TRIGGER_NAME, __scopeDropdownMenu);
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$b688253958b8dfe7, _extends({
    asChild: true
  }, menuScope), (0, import_react27.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    id: context.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open ? true : void 0,
    "aria-controls": context.open ? context.contentId : void 0,
    "data-state": context.open ? "open" : "closed",
    "data-disabled": disabled ? "" : void 0,
    disabled
  }, triggerProps, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, context.triggerRef),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      if (!disabled && event.button === 0 && event.ctrlKey === false) {
        context.onOpenToggle();
        if (!context.open)
          event.preventDefault();
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (disabled)
        return;
      if ([
        "Enter",
        " "
      ].includes(event.key))
        context.onOpenToggle();
      if (event.key === "ArrowDown")
        context.onOpenChange(true);
      if ([
        " ",
        "ArrowDown"
      ].includes(event.key))
        event.preventDefault();
    })
  })));
});
Object.assign($d08ef79370b62062$export$d2469213b3befba9, {
  displayName: $d08ef79370b62062$var$TRIGGER_NAME
});
var $d08ef79370b62062$var$PORTAL_NAME = "DropdownMenuPortal";
var $d08ef79370b62062$export$cd369b4d4d54efc9 = (props) => {
  const { __scopeDropdownMenu, ...portalProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$602eac185826482c, _extends({}, menuScope, portalProps));
};
Object.assign($d08ef79370b62062$export$cd369b4d4d54efc9, {
  displayName: $d08ef79370b62062$var$PORTAL_NAME
});
var $d08ef79370b62062$var$CONTENT_NAME = "DropdownMenuContent";
var $d08ef79370b62062$export$6e76d93a37c01248 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...contentProps } = props;
  const context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$CONTENT_NAME, __scopeDropdownMenu);
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  const hasInteractedOutsideRef = (0, import_react27.useRef)(false);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$7c6e2c02157bb7d2, _extends({
    id: context.contentId,
    "aria-labelledby": context.triggerId
  }, menuScope, contentProps, {
    ref: forwardedRef,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      if (!hasInteractedOutsideRef.current)
        (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
      hasInteractedOutsideRef.current = false;
      event.preventDefault();
    }),
    onInteractOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onInteractOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (!context.modal || isRightClick)
        hasInteractedOutsideRef.current = true;
    }),
    style: {
      ...props.style,
      // re-namespace exposed content custom property
      ["--radix-dropdown-menu-content-transform-origin"]: "var(--radix-popper-transform-origin)"
    }
  }));
});
Object.assign($d08ef79370b62062$export$6e76d93a37c01248, {
  displayName: $d08ef79370b62062$var$CONTENT_NAME
});
var $d08ef79370b62062$var$GROUP_NAME = "DropdownMenuGroup";
var $d08ef79370b62062$export$246bebaba3a2f70e = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...groupProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$eb2fcfdbd7ba97d4, _extends({}, menuScope, groupProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$246bebaba3a2f70e, {
  displayName: $d08ef79370b62062$var$GROUP_NAME
});
var $d08ef79370b62062$var$LABEL_NAME = "DropdownMenuLabel";
var $d08ef79370b62062$export$76e48c5b57f24495 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...labelProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$b04be29aa201d4f5, _extends({}, menuScope, labelProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$76e48c5b57f24495, {
  displayName: $d08ef79370b62062$var$LABEL_NAME
});
var $d08ef79370b62062$var$ITEM_NAME = "DropdownMenuItem";
var $d08ef79370b62062$export$ed97964d1871885d = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$6d08773d2e66f8f2, _extends({}, menuScope, itemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$ed97964d1871885d, {
  displayName: $d08ef79370b62062$var$ITEM_NAME
});
var $d08ef79370b62062$var$CHECKBOX_ITEM_NAME = "DropdownMenuCheckboxItem";
var $d08ef79370b62062$export$53a69729da201fa9 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...checkboxItemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$16ce288f89fa631c, _extends({}, menuScope, checkboxItemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$53a69729da201fa9, {
  displayName: $d08ef79370b62062$var$CHECKBOX_ITEM_NAME
});
var $d08ef79370b62062$var$RADIO_GROUP_NAME = "DropdownMenuRadioGroup";
var $d08ef79370b62062$export$3323ad73d55f587e = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioGroupProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$a98f0dcb43a68a25, _extends({}, menuScope, radioGroupProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$3323ad73d55f587e, {
  displayName: $d08ef79370b62062$var$RADIO_GROUP_NAME
});
var $d08ef79370b62062$var$RADIO_ITEM_NAME = "DropdownMenuRadioItem";
var $d08ef79370b62062$export$e4f69b41b1637536 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...radioItemProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$371ab307eab489c0, _extends({}, menuScope, radioItemProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$e4f69b41b1637536, {
  displayName: $d08ef79370b62062$var$RADIO_ITEM_NAME
});
var $d08ef79370b62062$var$INDICATOR_NAME = "DropdownMenuItemIndicator";
var $d08ef79370b62062$export$42355ae145153fb6 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$c3468e2714d175fa, _extends({}, menuScope, itemIndicatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$42355ae145153fb6, {
  displayName: $d08ef79370b62062$var$INDICATOR_NAME
});
var $d08ef79370b62062$var$SEPARATOR_NAME = "DropdownMenuSeparator";
var $d08ef79370b62062$export$da160178fd3bc7e9 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...separatorProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$1ff3c3f08ae963c0, _extends({}, menuScope, separatorProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$da160178fd3bc7e9, {
  displayName: $d08ef79370b62062$var$SEPARATOR_NAME
});
var $d08ef79370b62062$var$ARROW_NAME = "DropdownMenuArrow";
var $d08ef79370b62062$export$34b8980744021ec5 = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...arrowProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$21b07c8f274aebd5, _extends({}, menuScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$34b8980744021ec5, {
  displayName: $d08ef79370b62062$var$ARROW_NAME
});
var $d08ef79370b62062$export$2f307d81a64f5442 = (props) => {
  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$d7a01e11500dfb6f, _extends({}, menuScope, {
    open,
    onOpenChange: setOpen
  }), children);
};
var $d08ef79370b62062$var$SUB_TRIGGER_NAME = "DropdownMenuSubTrigger";
var $d08ef79370b62062$export$21dcb7ec56f874cf = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subTriggerProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$2ea8a7a591ac5eac, _extends({}, menuScope, subTriggerProps, {
    ref: forwardedRef
  }));
});
Object.assign($d08ef79370b62062$export$21dcb7ec56f874cf, {
  displayName: $d08ef79370b62062$var$SUB_TRIGGER_NAME
});
var $d08ef79370b62062$var$SUB_CONTENT_NAME = "DropdownMenuSubContent";
var $d08ef79370b62062$export$f34ec8bc2482cc5f = (0, import_react27.forwardRef)((props, forwardedRef) => {
  const { __scopeDropdownMenu, ...subContentProps } = props;
  const menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return (0, import_react27.createElement)($6cc32821e9371a1c$export$6d4de93b380beddf, _extends({}, menuScope, subContentProps, {
    ref: forwardedRef,
    style: {
      ...props.style,
      // re-namespace exposed content custom property
      ["--radix-dropdown-menu-content-transform-origin"]: "var(--radix-popper-transform-origin)"
    }
  }));
});
Object.assign($d08ef79370b62062$export$f34ec8bc2482cc5f, {
  displayName: $d08ef79370b62062$var$SUB_CONTENT_NAME
});
var $d08ef79370b62062$export$be92b6f5f03c0fe9 = $d08ef79370b62062$export$e44a253a59704894;
var $d08ef79370b62062$export$41fb9f06171c75f4 = $d08ef79370b62062$export$d2469213b3befba9;
var $d08ef79370b62062$export$602eac185826482c = $d08ef79370b62062$export$cd369b4d4d54efc9;
var $d08ef79370b62062$export$7c6e2c02157bb7d2 = $d08ef79370b62062$export$6e76d93a37c01248;
var $d08ef79370b62062$export$eb2fcfdbd7ba97d4 = $d08ef79370b62062$export$246bebaba3a2f70e;
var $d08ef79370b62062$export$b04be29aa201d4f5 = $d08ef79370b62062$export$76e48c5b57f24495;
var $d08ef79370b62062$export$6d08773d2e66f8f2 = $d08ef79370b62062$export$ed97964d1871885d;
var $d08ef79370b62062$export$16ce288f89fa631c = $d08ef79370b62062$export$53a69729da201fa9;
var $d08ef79370b62062$export$a98f0dcb43a68a25 = $d08ef79370b62062$export$3323ad73d55f587e;
var $d08ef79370b62062$export$371ab307eab489c0 = $d08ef79370b62062$export$e4f69b41b1637536;
var $d08ef79370b62062$export$c3468e2714d175fa = $d08ef79370b62062$export$42355ae145153fb6;
var $d08ef79370b62062$export$1ff3c3f08ae963c0 = $d08ef79370b62062$export$da160178fd3bc7e9;
var $d08ef79370b62062$export$21b07c8f274aebd5 = $d08ef79370b62062$export$34b8980744021ec5;
var $d08ef79370b62062$export$d7a01e11500dfb6f = $d08ef79370b62062$export$2f307d81a64f5442;
var $d08ef79370b62062$export$2ea8a7a591ac5eac = $d08ef79370b62062$export$21dcb7ec56f874cf;
var $d08ef79370b62062$export$6d4de93b380beddf = $d08ef79370b62062$export$f34ec8bc2482cc5f;

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconMenu.mjs
var React94 = __toESM(require_react(), 1);
var IconMenu = (props) => {
  const { className, ...rest } = props;
  return React94.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React94.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React94.createElement("path", { d: "M3 18H21V16H3V18ZM3 13H21V11H3V13ZM3 6V8H21V6H3Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Menu/MenuButton.mjs
var React95 = __toESM(require_react(), 1);
var MenuButtonPrimitive = ({ ariaLabel, className, children, isDisabled, isLoading, size: size2, style, type = "button", variation, testId, ...rest }, ref) => {
  const { propStyles, nonStyleProps } = useStyles(rest, style);
  const componentClasses = classNames(ComponentClassName.Button, classNameModifier(ComponentClassName.Button, size2), classNameModifier(ComponentClassName.Button, variation), className);
  return React95.createElement(Button, { ref, className: componentClasses, disabled: isDisabled ?? isLoading, type, testId, "aria-label": ariaLabel, style: propStyles, ...nonStyleProps }, children);
};
var MenuButton = primitiveWithForwardRef(MenuButtonPrimitive);
MenuButton.displayName = "MenuButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Menu/Menu.mjs
var { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent } = sanitizeNamespaceImport(index_module_exports2);
var MENU_TRIGGER_TEST_ID = "amplify-menu-trigger-test-id";
var MENU_ITEMS_GROUP_TEST_ID = "amplify-menu-items-group-test-id";
var MenuPrimitive = ({ menuAlign = "start", children, className, isOpen, size: size2, trigger, triggerClassName, ariaLabel, onOpenChange, ...rest }, ref) => {
  const icons = useIcons("menu");
  return React96.createElement(
    DropdownMenu,
    { onOpenChange, open: isOpen },
    React96.createElement(DropdownMenuTrigger, { asChild: true }, trigger ?? React96.createElement(MenuButton, { ariaLabel, size: size2, testId: MENU_TRIGGER_TEST_ID, className: classNames(ComponentClassName.MenuTrigger, triggerClassName) }, (icons == null ? void 0 : icons.menu) ?? React96.createElement(IconMenu, null))),
    React96.createElement(
      DropdownMenuContent,
      { align: menuAlign, className: ComponentClassName.MenuWrapper },
      React96.createElement(ButtonGroup, { className: classNames(ComponentClassName.MenuContent, className), ref, size: size2, testId: MENU_ITEMS_GROUP_TEST_ID, ...rest }, children)
    )
  );
};
var Menu = primitiveWithForwardRef(MenuPrimitive);
Menu.displayName = "Menu";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Menu/MenuItem.mjs
var React97 = __toESM(require_react(), 1);
var { DropdownMenuItem } = sanitizeNamespaceImport(index_module_exports2);
var MENU_ITEM_TEST_ID = "amplify-menu-item-test-id";
var MenuItemPrimitive = ({ children, className, ...rest }, ref) => {
  return React97.createElement(
    DropdownMenuItem,
    { asChild: true, ref },
    React97.createElement(MenuButton, {
      className: classNames(ComponentClassName.MenuItem, className),
      testId: MENU_ITEM_TEST_ID,
      ...rest,
      variation: "menu"
      // ensures `menu` variation is not overwritten
    }, children)
  );
};
var MenuItem = primitiveWithForwardRef(MenuItemPrimitive);
MenuItem.displayName = "MenuItem";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/Message.mjs
var React104 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageHeading.mjs
var React98 = __toESM(require_react(), 1);
var MessageHeadingPrimitive = ({ children, className, ...rest }, ref) => {
  return React98.createElement(Flex, { className: classNames(ComponentClassName.MessageHeading, className), ref, ...rest }, children);
};
var MessageHeading = primitiveWithForwardRef(MessageHeadingPrimitive);
MessageHeading.displayName = "MessageHeading";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageIcon.mjs
var React100 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/useMessage.mjs
var React99 = __toESM(require_react(), 1);
var MessageContext = React99.createContext({
  dismissed: false,
  setDismissed: () => {
  }
});
var useMessage = () => React99.useContext(MessageContext);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageIcon.mjs
var MessageIconPrimitive = ({ className, ...rest }, ref) => {
  const icons = useIcons("message");
  const { colorTheme } = useMessage();
  let icon;
  switch (colorTheme) {
    case "info":
      icon = (icons == null ? void 0 : icons.info) ?? React100.createElement(IconInfo, null);
      break;
    case "error":
      icon = (icons == null ? void 0 : icons.error) ?? React100.createElement(IconError, null);
      break;
    case "warning":
      icon = (icons == null ? void 0 : icons.warning) ?? React100.createElement(IconWarning, null);
      break;
    case "success":
      icon = (icons == null ? void 0 : icons.success) ?? React100.createElement(IconCheckCircle, null);
      break;
  }
  return icon ? React100.createElement(View, { className: classNames(ComponentClassName.MessageIcon, className), "aria-hidden": "true", ref, ...rest }, icon) : null;
};
var MessageIcon = primitiveWithForwardRef(MessageIconPrimitive);
MessageIcon.displayName = "MessageIcon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageDismiss.mjs
var React101 = __toESM(require_react(), 1);
var MessageDismissPrimitive = ({ onDismiss, dismissLabel, hasIcon = true, children, className, ...rest }, ref) => {
  const { setDismissed } = useMessage();
  const icons = useIcons("message");
  const dismissMessage = React101.useCallback(() => {
    setDismissed(true);
    if (isFunction(onDismiss)) {
      onDismiss();
    }
  }, [setDismissed, onDismiss]);
  return React101.createElement(
    Button,
    { variation: "link", colorTheme: "overlay", className: classNames(ComponentClassName.MessageDismiss, className), ref, onClick: dismissMessage, ...rest },
    hasIcon ? (icons == null ? void 0 : icons.close) ?? React101.createElement(IconClose, { "aria-hidden": "true" }) : null,
    children ? children : React101.createElement(VisuallyHidden, null, dismissLabel ? dismissLabel : ComponentText.Message.dismissLabel)
  );
};
var MessageDismiss = primitiveWithForwardRef(MessageDismissPrimitive);
MessageDismiss.displayName = "MessageContent";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageContent.mjs
var React102 = __toESM(require_react(), 1);
var MessageContentPrimitive = ({ children, className, ...rest }, ref) => {
  return React102.createElement(Flex, { className: classNames(ComponentClassName.MessageContent, className), ref, ...rest }, children);
};
var MessageContent = primitiveWithForwardRef(MessageContentPrimitive);
MessageContent.displayName = "MessageContent";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/MessageContainer.mjs
var React103 = __toESM(require_react(), 1);
var MessageContainerPrimitive = ({ children, className, colorTheme = "neutral", variation = "filled", ...rest }, ref) => {
  const [dismissed, setDismissed] = React103.useState(false);
  const value = React103.useMemo(() => ({
    colorTheme,
    dismissed,
    setDismissed
  }), [colorTheme, dismissed]);
  return React103.createElement(MessageContext.Provider, { value }, !dismissed ? React103.createElement(Flex, { className: classNames(ComponentClassName.Message, classNameModifier(ComponentClassName.Message, variation), classNameModifier(ComponentClassName.Message, colorTheme), className), ref, ...rest }, children) : null);
};
var MessageContainer = primitiveWithForwardRef(MessageContainerPrimitive);
MessageContainer.displayName = "MessageContainer";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Message/Message.mjs
var MessagePrimitive = ({ children, heading, dismissLabel, isDismissible, onDismiss, hasIcon = true, colorTheme = "neutral", variation = "filled", ...rest }, ref) => {
  return React104.createElement(
    MessageContainer,
    { colorTheme, variation, ref, ...rest },
    hasIcon ? React104.createElement(MessageIcon, null) : null,
    React104.createElement(
      MessageContent,
      null,
      heading ? React104.createElement(MessageHeading, null, heading) : null,
      children
    ),
    isDismissible ? React104.createElement(MessageDismiss, { onDismiss, dismissLabel }) : null
  );
};
var Message = primitiveWithForwardRef(MessagePrimitive);
Message.displayName = "Message";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PasswordField/PasswordField.mjs
var React108 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PasswordField/ShowPasswordButton.mjs
var React107 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconVisibilityOff.mjs
var React105 = __toESM(require_react(), 1);
var IconVisibilityOff = (props) => {
  const { className, ...rest } = props;
  return React105.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React105.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React105.createElement("path", { d: "M12 6.0002C15.79 6.0002 19.17 8.1302 20.82 11.5002C20.23 12.7202 19.4 13.7702 18.41 14.6202L19.82 16.0302C21.21 14.8002 22.31 13.2602 23 11.5002C21.27 7.1102 17 4.0002 12 4.0002C10.73 4.0002 9.51 4.2002 8.36 4.5702L10.01 6.2202C10.66 6.0902 11.32 6.0002 12 6.0002ZM10.93 7.14019L13 9.2102C13.57 9.4602 14.03 9.9202 14.28 10.4902L16.35 12.5602C16.43 12.2202 16.49 11.8602 16.49 11.4902C16.5 9.0102 14.48 7.0002 12 7.0002C11.63 7.0002 11.28 7.05019 10.93 7.14019ZM2.01 3.8702L4.69 6.5502C3.06 7.8302 1.77 9.5302 1 11.5002C2.73 15.8902 7 19.0002 12 19.0002C13.52 19.0002 14.98 18.7102 16.32 18.1802L19.74 21.6002L21.15 20.1902L3.42 2.4502L2.01 3.8702ZM9.51 11.3702L12.12 13.9802C12.08 13.9902 12.04 14.0002 12 14.0002C10.62 14.0002 9.5 12.8802 9.5 11.5002C9.5 11.4502 9.51 11.4202 9.51 11.3702V11.3702ZM6.11 7.97019L7.86 9.7202C7.63 10.2702 7.5 10.8702 7.5 11.5002C7.5 13.9802 9.52 16.0002 12 16.0002C12.63 16.0002 13.23 15.8702 13.77 15.6402L14.75 16.6202C13.87 16.8602 12.95 17.0002 12 17.0002C8.21 17.0002 4.83 14.8702 3.18 11.5002C3.88 10.0702 4.9 8.89019 6.11 7.97019Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconVisibility.mjs
var React106 = __toESM(require_react(), 1);
var IconVisibility = (props) => {
  const { className, ...rest } = props;
  return React106.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React106.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React106.createElement("path", { d: "M12 6C15.79 6 19.17 8.13 20.82 11.5C19.17 14.87 15.79 17 12 17C8.21 17 4.83 14.87 3.18 11.5C4.83 8.13 8.21 6 12 6ZM12 4C7 4 2.73 7.11 1 11.5C2.73 15.89 7 19 12 19C17 19 21.27 15.89 23 11.5C21.27 7.11 17 4 12 4ZM12 9C13.38 9 14.5 10.12 14.5 11.5C14.5 12.88 13.38 14 12 14C10.62 14 9.5 12.88 9.5 11.5C9.5 10.12 10.62 9 12 9ZM12 7C9.52 7 7.5 9.02 7.5 11.5C7.5 13.98 9.52 16 12 16C14.48 16 16.5 13.98 16.5 11.5C16.5 9.02 14.48 7 12 7Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PasswordField/ShowPasswordButton.mjs
var { passwordIsHidden, passwordIsShown, showPassword } = ComponentText.PasswordField;
var ShowPasswordButtonPrimitive = ({ fieldType, passwordIsHiddenLabel = passwordIsHidden, passwordIsShownLabel = passwordIsShown, showPasswordButtonLabel = showPassword, size: size2, hasError, ...rest }, ref) => {
  const icons = useIcons("passwordField");
  const showPasswordButtonClass = classNames(ComponentClassName.FieldShowPassword, classNameModifierByFlag(ComponentClassName.FieldShowPassword, "error", hasError));
  const icon = fieldType === "password" ? (icons == null ? void 0 : icons.visibility) ?? React107.createElement(IconVisibility, { "aria-hidden": "true" }) : (icons == null ? void 0 : icons.visibilityOff) ?? React107.createElement(IconVisibilityOff, { "aria-hidden": "true" });
  return React107.createElement(
    Button,
    { "aria-checked": fieldType !== "password", ariaLabel: showPasswordButtonLabel, className: showPasswordButtonClass, colorTheme: hasError ? "error" : void 0, ref, role: "switch", size: size2, ...rest },
    React107.createElement(VisuallyHidden, { "aria-live": "polite" }, fieldType === "password" ? passwordIsHiddenLabel : passwordIsShownLabel),
    icon
  );
};
var ShowPasswordButton = primitiveWithForwardRef(ShowPasswordButtonPrimitive);
ShowPasswordButton.displayName = "ShowPasswordButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PasswordField/PasswordField.mjs
var PasswordFieldPrimitive = ({ autoComplete = "current-password", label, className, hideShowPassword = false, passwordIsHiddenLabel, passwordIsShownLabel, showPasswordButtonLabel, showPasswordButtonRef, size: size2, hasError, ...rest }, ref) => {
  const [type, setType] = React108.useState("password");
  const showPasswordOnClick = React108.useCallback(() => {
    if (type === "password") {
      setType("text");
    } else {
      setType("password");
    }
  }, [setType, type]);
  return React108.createElement(TextField, { autoComplete, outerEndComponent: hideShowPassword ? null : React108.createElement(ShowPasswordButton, { fieldType: type, onClick: showPasswordOnClick, passwordIsHiddenLabel, passwordIsShownLabel, ref: showPasswordButtonRef, size: size2, showPasswordButtonLabel, hasError }), size: size2, type, label, className: classNames(ComponentClassName.PasswordField, className), ref, hasError, ...rest });
};
var PasswordField = primitiveWithForwardRef(PasswordFieldPrimitive);
PasswordField.displayName = "PasswordField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/PhoneNumberField.mjs
var React112 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/DialCodeSelect.mjs
var React111 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SelectField/SelectField.mjs
var React110 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Select/Select.mjs
var React109 = __toESM(require_react(), 1);
var SelectPrimitive = ({ autoComplete, className, size: size2, variation, value, defaultValue: defaultValue2, hasError, icon, iconColor, children, placeholder, isDisabled, isRequired, isMultiple = false, selectSize = 1, ...rest }, ref) => {
  const DEFAULT_PLACEHOLDER_VALUE = "";
  const shouldSetDefaultPlaceholderValue = value === void 0 && defaultValue2 === void 0 && placeholder;
  const isExpanded = isMultiple || selectSize > 1;
  const componentClasses = classNames(ComponentClassName.Select, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Select, size2), classNameModifier(ComponentClassName.Select, variation), classNameModifierByFlag(ComponentClassName.Select, "error", hasError), classNameModifierByFlag(ComponentClassName.Select, "expanded", isExpanded), className);
  const icons = useIcons("select");
  const { isFieldsetDisabled } = useFieldset();
  return React109.createElement(
    View,
    { className: ComponentClassName.SelectWrapper },
    React109.createElement(
      View,
      { "aria-invalid": hasError, as: "select", autoComplete, value, defaultValue: shouldSetDefaultPlaceholderValue ? DEFAULT_PLACEHOLDER_VALUE : defaultValue2, isDisabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, multiple: isMultiple, size: selectSize, required: isRequired, className: componentClasses, ref, ...rest },
      placeholder && React109.createElement("option", { value: "" }, placeholder),
      children
    ),
    isExpanded ? null : React109.createElement(Flex, { className: classNames(ComponentClassName.SelectIcon, classNameModifier(ComponentClassName.SelectIcon, size2)), color: iconColor }, icon ?? (icons == null ? void 0 : icons.expand) ?? React109.createElement(IconExpandMore, null))
  );
};
var Select = primitiveWithForwardRef(SelectPrimitive);
Select.displayName = "Select";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SelectField/SelectField.mjs
var selectFieldChildren = ({ children, options }) => {
  if (children) {
    if (options == null ? void 0 : options.length) {
      console.warn("Amplify UI: <SelectField> component  defaults to rendering children over `options`. When using the `options` prop, omit children.");
    }
    return children;
  }
  return options == null ? void 0 : options.map((option, index2) => React110.createElement("option", { label: option, value: option, key: `${option}-${index2}` }, option));
};
var SelectFieldPrimitive = (props, ref) => {
  const { children, className, descriptiveText, errorMessage, hasError = false, id, label, labelHidden = false, options, size: size2, testId, inputStyles, ..._rest } = props;
  const fieldId = useStableId(id);
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  return React110.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.SelectField, className), testId, ...styleProps },
    React110.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),
    React110.createElement(FieldDescription, { id: descriptionId, labelHidden, descriptiveText }),
    React110.createElement(Select, { "aria-describedby": ariaDescribedBy, hasError, id: fieldId, ref, size: size2, ...rest, ...inputStyles }, selectFieldChildren({ children, options })),
    React110.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var SelectField = primitiveWithForwardRef(SelectFieldPrimitive);
SelectField.displayName = "SelectField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/DialCodeSelect.mjs
var DialCodeSelectPrimitive = ({ className, dialCodeList, isReadOnly, ...props }, ref) => {
  const dialList = dialCodeList ?? countryDialCodes;
  const dialCodeOptions = React111.useMemo(() => dialList.map((dialCode) => (
    // Regarding the `disabled` attribute, see comment in SelectField below
    React111.createElement("option", { key: dialCode, value: dialCode, disabled: isReadOnly }, dialCode)
  )), [dialList, isReadOnly]);
  return React111.createElement(
    SelectField,
    { "aria-disabled": isReadOnly, autoComplete: "tel-country-code", className: classNames(ComponentClassName.CountryCodeSelect, ComponentClassName.DialCodeSelect, className), labelHidden: true, ref, ...props },
    dialCodeOptions
  );
};
var DialCodeSelect = primitiveWithForwardRef(DialCodeSelectPrimitive);
DialCodeSelect.displayName = "DialCodeSelect";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/PhoneNumberField/PhoneNumberField.mjs
var PhoneNumberFieldPrimitive = ({ autoComplete = "tel-national", className, defaultDialCode, dialCodeLabel = ComponentText.PhoneNumberField.countryCodeLabel, dialCodeList, dialCodeName, dialCodeRef, hasError, isDisabled, isReadOnly, onDialCodeChange, onInput, size: size2, variation, ...rest }, ref) => {
  return React112.createElement(TextField, { outerStartComponent: React112.createElement(DialCodeSelect, { defaultValue: defaultDialCode, dialCodeList, className, hasError, isDisabled, isReadOnly, label: dialCodeLabel, name: dialCodeName, onChange: onDialCodeChange, ref: dialCodeRef, size: size2, variation }), autoComplete, className: classNames(ComponentClassName.PhoneNumberField, className), hasError, isDisabled, isReadOnly, onInput, ref, size: size2, type: "tel", variation, ...rest });
};
var PhoneNumberField = primitiveWithForwardRef(PhoneNumberFieldPrimitive);
PhoneNumberField.displayName = "PhoneNumberField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Placeholder/Placeholder.mjs
var React113 = __toESM(require_react(), 1);
var PlaceholderPrimitive = ({ className, children, isLoaded, size: size2, ...rest }, ref) => {
  if (isLoaded) {
    return React113.createElement(React113.Fragment, null, children);
  }
  return React113.createElement(View, { className: classNames(ComponentClassName.Placeholder, classNameModifier(ComponentClassName.Placeholder, size2), className), ref, ...rest });
};
var Placeholder = primitiveWithForwardRef(PlaceholderPrimitive);
Placeholder.displayName = "Placeholder";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Radio/Radio.mjs
var React114 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/RadioGroupField/context.mjs
var import_react28 = __toESM(require_react(), 1);
var defaultValue = { name: "default" };
var RadioGroupContext = import_react28.default.createContext(defaultValue);
var useRadioGroupContext = () => {
  return (0, import_react28.useContext)(RadioGroupContext);
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Radio/Radio.mjs
var RadioPrimitive = ({ children, className, id, isDisabled = false, testId, value, labelPosition: radioLabelPosition, ...rest }, ref) => {
  const { currentValue, defaultValue: defaultValue2, name, hasError, isGroupDisabled = false, isRequired, isReadOnly, onChange, size: size2, labelPosition: groupLabelPosition } = useRadioGroupContext();
  const { isFieldsetDisabled } = useFieldset();
  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isGroupDisabled || isDisabled || isReadOnly && defaultValue2 !== value;
  const checked = currentValue !== void 0 ? value === currentValue : void 0;
  const defaultChecked = defaultValue2 !== void 0 ? value === defaultValue2 : void 0;
  const labelPosition = radioLabelPosition ? radioLabelPosition : groupLabelPosition;
  return React114.createElement(
    Flex,
    { as: "label", className: classNames(ComponentClassName.Radio, classNameModifierByFlag(ComponentClassName.Radio, `disabled`, shouldBeDisabled), labelPosition ? `amplify-label-${labelPosition}` : null, className) },
    children && React114.createElement(Text, { as: "span", className: classNames(ComponentClassName.RadioLabel, classNameModifierByFlag(ComponentClassName.RadioLabel, `disabled`, shouldBeDisabled)) }, children),
    React114.createElement(Input, { checked, className: classNames(ComponentClassName.VisuallyHidden, ComponentClassName.RadioInput), defaultChecked, hasError, id, isDisabled: shouldBeDisabled, isReadOnly, isRequired, onChange, ref, type: "radio", name, value, ...rest }),
    React114.createElement(Flex, { "aria-hidden": "true", as: "span", className: classNames(ComponentClassName.RadioButton, classNameModifier(ComponentClassName.RadioButton, size2)), testId })
  );
};
var Radio = primitiveWithForwardRef(RadioPrimitive);
Radio.displayName = "Radio";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/RadioGroupField/RadioGroupField.mjs
var React115 = __toESM(require_react(), 1);
var RadioGroupFieldPrimitive = ({ children, className, defaultValue: defaultValue2, descriptiveText, errorMessage, hasError = false, id, isDisabled, isRequired, isReadOnly, legend, legendHidden = false, labelPosition, onChange, name, size: size2, testId, value, variation, ...rest }, ref) => {
  const fieldId = useStableId(id);
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const radioGroupTestId = getTestId(testId, ComponentClassName.RadioGroup);
  const radioGroupContextValue = React115.useMemo(() => ({
    currentValue: value,
    defaultValue: defaultValue2,
    hasError,
    isRequired,
    isReadOnly,
    isGroupDisabled: isDisabled,
    onChange,
    size: size2,
    name,
    labelPosition
  }), [
    defaultValue2,
    hasError,
    isDisabled,
    isRequired,
    isReadOnly,
    onChange,
    size2,
    name,
    value,
    labelPosition
  ]);
  return React115.createElement(
    Fieldset,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.RadioGroupField, className), isDisabled, legend, legendHidden, ref, role: "radiogroup", size: size2, testId, variation, ...rest },
    React115.createElement(FieldDescription, { id: descriptionId, labelHidden: legendHidden, descriptiveText }),
    React115.createElement(
      Flex,
      { "aria-describedby": ariaDescribedBy, className: ComponentClassName.RadioGroup, id: fieldId, testId: radioGroupTestId },
      React115.createElement(RadioGroupContext.Provider, { value: radioGroupContextValue }, children)
    ),
    React115.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var RadioGroupField = primitiveWithForwardRef(RadioGroupFieldPrimitive);
RadioGroupField.displayName = "RadioGroupField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Rating/Rating.mjs
var React119 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconStar.mjs
var React116 = __toESM(require_react(), 1);
var IconStar = (props) => {
  const { className, ...rest } = props;
  return React116.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React116.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React116.createElement("path", { d: "M12 17.27L18.18 21L16.54 13.97L22 9.24L14.81 8.63L12 2L9.19 8.63L2 9.24L7.46 13.97L5.82 21L12 17.27Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Rating/utils.mjs
var isIconFilled = (currentIconIndex, ratingValue) => {
  if (currentIconIndex <= ratingValue)
    return true;
  return false;
};
var isIconEmpty = (currentIconIndex, ratingValue) => {
  if (currentIconIndex - 1 >= ratingValue)
    return true;
  return false;
};
var isIconMixed = (currentIconIndex, ratingValue) => {
  if (currentIconIndex > ratingValue && currentIconIndex - 1 < ratingValue) {
    return true;
  }
  return false;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Rating/RatingIcon.mjs
var React117 = __toESM(require_react(), 1);
var RatingIcon = ({ icon, fill, className }) => {
  return React117.createElement(
    View,
    { as: "span", className: ComponentClassName.RatingItem, "aria-hidden": "true" },
    React117.createElement(View, { as: "span", className: classNames(className), color: fill }, icon)
  );
};
RatingIcon.displayName = "RatingIcon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Rating/RatingMixedIcon.mjs
var React118 = __toESM(require_react(), 1);
var RatingMixedIcon = ({ emptyColor, emptyIcon, fillColor, fillIcon, value }) => {
  const widthPercentage = `${value % 1 * 100}%`;
  return React118.createElement(
    View,
    { as: "span", className: ComponentClassName.RatingItem, "aria-hidden": "true" },
    React118.createElement(View, { as: "span", className: classNames(ComponentClassName.RatingIcon, classNameModifier(ComponentClassName.RatingIcon, "empty")), color: emptyColor }, emptyIcon),
    React118.createElement(View, { as: "span", className: classNames(ComponentClassName.RatingIcon, classNameModifier(ComponentClassName.RatingIcon, "filled")), width: widthPercentage, color: fillColor }, fillIcon)
  );
};
RatingMixedIcon.displayName = "RatingMixedIcon";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Rating/Rating.mjs
var RATING_DEFAULT_MAX_VALUE = 5;
var RATING_DEFAULT_VALUE = 0;
var RatingPrimitive = ({ className, emptyColor, emptyIcon, fillColor, icon, maxValue = RATING_DEFAULT_MAX_VALUE, size: size2, value = RATING_DEFAULT_VALUE, ...rest }, ref) => {
  const icons = useIcons("rating");
  const filledIcon = icon ?? (icons == null ? void 0 : icons.filled) ?? React119.createElement(IconStar, null);
  const _emptyIcon = emptyIcon ?? icon ?? (icons == null ? void 0 : icons.empty) ?? React119.createElement(IconStar, null);
  const items = new Array(Math.ceil(maxValue)).fill(1).map((_, index2) => {
    const currentIconIndex = index2 + 1;
    if (isIconFilled(currentIconIndex, value))
      return React119.createElement(RatingIcon, { key: index2.toString(), icon: filledIcon, fill: fillColor, className: classNameModifier(ComponentClassName.RatingIcon, "filled") });
    if (isIconEmpty(currentIconIndex, value))
      return React119.createElement(RatingIcon, { key: index2.toString(), icon: _emptyIcon, fill: emptyColor, className: classNameModifier(ComponentClassName.RatingIcon, "empty") });
    if (isIconMixed(currentIconIndex, value))
      return React119.createElement(RatingMixedIcon, { key: index2.toString(), fillIcon: filledIcon, emptyIcon: _emptyIcon, value, fillColor, emptyColor });
  });
  return React119.createElement(
    Flex,
    { className: classNames(ComponentClassName.Rating, classNameModifier(ComponentClassName.Rating, size2), className), ref, ...rest },
    items,
    React119.createElement(
      VisuallyHidden,
      null,
      value,
      " out of ",
      maxValue,
      " rating"
    )
  );
};
var Rating = primitiveWithForwardRef(RatingPrimitive);
Rating.displayName = "Rating";

// node_modules/@radix-ui/react-slider/dist/index.module.js
var index_module_exports3 = {};
__export(index_module_exports3, {
  Range: () => $faa2e61a3361514f$export$9a58ef0d7ad3278c,
  Root: () => $faa2e61a3361514f$export$be92b6f5f03c0fe9,
  Slider: () => $faa2e61a3361514f$export$472062a354075cee,
  SliderRange: () => $faa2e61a3361514f$export$a5cf38a7a000fe77,
  SliderThumb: () => $faa2e61a3361514f$export$2c1b491743890dec,
  SliderTrack: () => $faa2e61a3361514f$export$105594979f116971,
  Thumb: () => $faa2e61a3361514f$export$6521433ed15a34db,
  Track: () => $faa2e61a3361514f$export$13921ac0cc260818,
  createSliderScope: () => $faa2e61a3361514f$export$ef72632d7b901f97
});
var import_react30 = __toESM(require_react());

// node_modules/@radix-ui/number/dist/index.module.js
function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(value, [min3, max3]) {
  return Math.min(max3, Math.max(min3, value));
}

// node_modules/@radix-ui/react-use-previous/dist/index.module.js
var import_react29 = __toESM(require_react());
function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {
  const ref = (0, import_react29.useRef)({
    value,
    previous: value
  });
  return (0, import_react29.useMemo)(() => {
    if (ref.current.value !== value) {
      ref.current.previous = ref.current.value;
      ref.current.value = value;
    }
    return ref.current.previous;
  }, [
    value
  ]);
}

// node_modules/@radix-ui/react-slider/dist/index.module.js
var $faa2e61a3361514f$var$PAGE_KEYS = [
  "PageUp",
  "PageDown"
];
var $faa2e61a3361514f$var$ARROW_KEYS = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
];
var $faa2e61a3361514f$var$BACK_KEYS = {
  ltr: [
    "ArrowDown",
    "Home",
    "ArrowLeft",
    "PageDown"
  ],
  rtl: [
    "ArrowDown",
    "Home",
    "ArrowRight",
    "PageDown"
  ]
};
var $faa2e61a3361514f$var$SLIDER_NAME = "Slider";
var [$faa2e61a3361514f$var$Collection, $faa2e61a3361514f$var$useCollection, $faa2e61a3361514f$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($faa2e61a3361514f$var$SLIDER_NAME);
var [$faa2e61a3361514f$var$createSliderContext, $faa2e61a3361514f$export$ef72632d7b901f97] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($faa2e61a3361514f$var$SLIDER_NAME, [
  $faa2e61a3361514f$var$createCollectionScope
]);
var [$faa2e61a3361514f$var$SliderProvider, $faa2e61a3361514f$var$useSliderContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME);
var $faa2e61a3361514f$export$472062a354075cee = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { name, min: min3 = 0, max: max3 = 100, step = 1, orientation = "horizontal", disabled = false, minStepsBetweenThumbs = 0, defaultValue: defaultValue2 = [
    min3
  ], value: value1, onValueChange = () => {
  }, ...sliderProps } = props;
  const [slider, setSlider] = (0, import_react30.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setSlider(node)
  );
  const thumbRefs = (0, import_react30.useRef)(/* @__PURE__ */ new Set());
  const valueIndexToChangeRef = (0, import_react30.useRef)(0);
  const isHorizontal = orientation === "horizontal";
  const isFormControl = slider ? Boolean(slider.closest("form")) : true;
  const SliderOrientation = isHorizontal ? $faa2e61a3361514f$var$SliderHorizontal : $faa2e61a3361514f$var$SliderVertical;
  const [values = [], setValues] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: value1,
    defaultProp: defaultValue2,
    onChange: (value) => {
      var _thumbs$valueIndexToC;
      const thumbs = [
        ...thumbRefs.current
      ];
      (_thumbs$valueIndexToC = thumbs[valueIndexToChangeRef.current]) === null || _thumbs$valueIndexToC === void 0 || _thumbs$valueIndexToC.focus();
      onValueChange(value);
    }
  });
  function handleSlideStart(value) {
    const closestIndex = $faa2e61a3361514f$var$getClosestValueIndex(values, value);
    updateValues(value, closestIndex);
  }
  function handleSlideMove(value) {
    updateValues(value, valueIndexToChangeRef.current);
  }
  function updateValues(value, atIndex) {
    const decimalCount = $faa2e61a3361514f$var$getDecimalCount(step);
    const snapToStep = $faa2e61a3361514f$var$roundValue(Math.round((value - min3) / step) * step + min3, decimalCount);
    const nextValue = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(snapToStep, [
      min3,
      max3
    ]);
    setValues((prevValues = []) => {
      const nextValues = $faa2e61a3361514f$var$getNextSortedValues(prevValues, nextValue, atIndex);
      if ($faa2e61a3361514f$var$hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {
        valueIndexToChangeRef.current = nextValues.indexOf(nextValue);
        return String(nextValues) === String(prevValues) ? prevValues : nextValues;
      } else
        return prevValues;
    });
  }
  return (0, import_react30.createElement)($faa2e61a3361514f$var$SliderProvider, {
    scope: props.__scopeSlider,
    disabled,
    min: min3,
    max: max3,
    valueIndexToChangeRef,
    thumbs: thumbRefs.current,
    values,
    orientation
  }, (0, import_react30.createElement)($faa2e61a3361514f$var$Collection.Provider, {
    scope: props.__scopeSlider
  }, (0, import_react30.createElement)($faa2e61a3361514f$var$Collection.Slot, {
    scope: props.__scopeSlider
  }, (0, import_react30.createElement)(SliderOrientation, _extends({
    "aria-disabled": disabled,
    "data-disabled": disabled ? "" : void 0
  }, sliderProps, {
    ref: composedRefs,
    min: min3,
    max: max3,
    onSlideStart: disabled ? void 0 : handleSlideStart,
    onSlideMove: disabled ? void 0 : handleSlideMove,
    onHomeKeyDown: () => !disabled && updateValues(min3, 0),
    onEndKeyDown: () => !disabled && updateValues(max3, values.length - 1),
    onStepKeyDown: ({ event, direction: stepDirection }) => {
      if (!disabled) {
        const isPageKey = $faa2e61a3361514f$var$PAGE_KEYS.includes(event.key);
        const isSkipKey = isPageKey || event.shiftKey && $faa2e61a3361514f$var$ARROW_KEYS.includes(event.key);
        const multiplier = isSkipKey ? 10 : 1;
        const atIndex = valueIndexToChangeRef.current;
        const value = values[atIndex];
        const stepInDirection = step * multiplier * stepDirection;
        updateValues(value + stepInDirection, atIndex);
      }
    }
  })))), isFormControl && values.map(
    (value, index2) => (0, import_react30.createElement)($faa2e61a3361514f$var$BubbleInput, {
      key: index2,
      name: name ? name + (values.length > 1 ? "[]" : "") : void 0,
      value
    })
  ));
});
Object.assign($faa2e61a3361514f$export$472062a354075cee, {
  displayName: $faa2e61a3361514f$var$SLIDER_NAME
});
var [$faa2e61a3361514f$var$SliderOrientationProvider, $faa2e61a3361514f$var$useSliderOrientationContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME, {
  startEdge: "left",
  endEdge: "right",
  size: "width",
  direction: 1
});
var $faa2e61a3361514f$var$SliderHorizontal = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { min: min3, max: max3, dir, onSlideStart, onSlideMove, onStepKeyDown, ...sliderProps } = props;
  const [slider, setSlider] = (0, import_react30.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setSlider(node)
  );
  const rectRef = (0, import_react30.useRef)();
  const direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  const isDirectionLTR = direction === "ltr";
  function getValueFromPointer(pointerPosition) {
    const rect = rectRef.current || slider.getBoundingClientRect();
    const input = [
      0,
      rect.width
    ];
    const output = isDirectionLTR ? [
      min3,
      max3
    ] : [
      max3,
      min3
    ];
    const value = $faa2e61a3361514f$var$linearScale(input, output);
    rectRef.current = rect;
    return value(pointerPosition - rect.left);
  }
  return (0, import_react30.createElement)($faa2e61a3361514f$var$SliderOrientationProvider, {
    scope: props.__scopeSlider,
    startEdge: isDirectionLTR ? "left" : "right",
    endEdge: isDirectionLTR ? "right" : "left",
    direction: isDirectionLTR ? 1 : -1,
    size: "width"
  }, (0, import_react30.createElement)($faa2e61a3361514f$var$SliderImpl, _extends({
    dir: direction,
    "data-orientation": "horizontal"
  }, sliderProps, {
    ref: composedRefs,
    style: {
      ...sliderProps.style,
      ["--radix-slider-thumb-transform"]: "translateX(-50%)"
    },
    onSlideStart: (event) => {
      const value = getValueFromPointer(event.clientX);
      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);
    },
    onSlideMove: (event) => {
      const value = getValueFromPointer(event.clientX);
      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);
    },
    onSlideEnd: () => rectRef.current = void 0,
    onStepKeyDown: (event) => {
      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[direction].includes(event.key);
      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({
        event,
        direction: isBackKey ? -1 : 1
      });
    }
  })));
});
var $faa2e61a3361514f$var$SliderVertical = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { min: min3, max: max3, onSlideStart, onSlideMove, onStepKeyDown, ...sliderProps } = props;
  const sliderRef = (0, import_react30.useRef)(null);
  const ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, sliderRef);
  const rectRef = (0, import_react30.useRef)();
  function getValueFromPointer(pointerPosition) {
    const rect = rectRef.current || sliderRef.current.getBoundingClientRect();
    const input = [
      0,
      rect.height
    ];
    const output = [
      max3,
      min3
    ];
    const value = $faa2e61a3361514f$var$linearScale(input, output);
    rectRef.current = rect;
    return value(pointerPosition - rect.top);
  }
  return (0, import_react30.createElement)($faa2e61a3361514f$var$SliderOrientationProvider, {
    scope: props.__scopeSlider,
    startEdge: "bottom",
    endEdge: "top",
    size: "height",
    direction: 1
  }, (0, import_react30.createElement)($faa2e61a3361514f$var$SliderImpl, _extends({
    "data-orientation": "vertical"
  }, sliderProps, {
    ref,
    style: {
      ...sliderProps.style,
      ["--radix-slider-thumb-transform"]: "translateY(50%)"
    },
    onSlideStart: (event) => {
      const value = getValueFromPointer(event.clientY);
      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);
    },
    onSlideMove: (event) => {
      const value = getValueFromPointer(event.clientY);
      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);
    },
    onSlideEnd: () => rectRef.current = void 0,
    onStepKeyDown: (event) => {
      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS.ltr.includes(event.key);
      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({
        event,
        direction: isBackKey ? -1 : 1
      });
    }
  })));
});
var $faa2e61a3361514f$var$SliderImpl = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { __scopeSlider, onSlideStart, onSlideMove, onSlideEnd, onHomeKeyDown, onEndKeyDown, onStepKeyDown, ...sliderProps } = props;
  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$SLIDER_NAME, __scopeSlider);
  return (0, import_react30.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, sliderProps, {
    ref: forwardedRef,
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Home") {
        onHomeKeyDown(event);
        event.preventDefault();
      } else if (event.key === "End") {
        onEndKeyDown(event);
        event.preventDefault();
      } else if ($faa2e61a3361514f$var$PAGE_KEYS.concat($faa2e61a3361514f$var$ARROW_KEYS).includes(event.key)) {
        onStepKeyDown(event);
        event.preventDefault();
      }
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      const target = event.target;
      target.setPointerCapture(event.pointerId);
      event.preventDefault();
      if (context.thumbs.has(target))
        target.focus();
      else
        onSlideStart(event);
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      const target = event.target;
      if (target.hasPointerCapture(event.pointerId))
        onSlideMove(event);
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      const target = event.target;
      if (target.hasPointerCapture(event.pointerId)) {
        target.releasePointerCapture(event.pointerId);
        onSlideEnd(event);
      }
    })
  }));
});
var $faa2e61a3361514f$var$TRACK_NAME = "SliderTrack";
var $faa2e61a3361514f$export$105594979f116971 = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { __scopeSlider, ...trackProps } = props;
  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$TRACK_NAME, __scopeSlider);
  return (0, import_react30.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-disabled": context.disabled ? "" : void 0,
    "data-orientation": context.orientation
  }, trackProps, {
    ref: forwardedRef
  }));
});
Object.assign($faa2e61a3361514f$export$105594979f116971, {
  displayName: $faa2e61a3361514f$var$TRACK_NAME
});
var $faa2e61a3361514f$var$RANGE_NAME = "SliderRange";
var $faa2e61a3361514f$export$a5cf38a7a000fe77 = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { __scopeSlider, ...rangeProps } = props;
  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);
  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);
  const ref = (0, import_react30.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const valuesCount = context.values.length;
  const percentages = context.values.map(
    (value) => $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max)
  );
  const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;
  const offsetEnd = 100 - Math.max(...percentages);
  return (0, import_react30.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    "data-orientation": context.orientation,
    "data-disabled": context.disabled ? "" : void 0
  }, rangeProps, {
    ref: composedRefs,
    style: {
      ...props.style,
      [orientation.startEdge]: offsetStart + "%",
      [orientation.endEdge]: offsetEnd + "%"
    }
  }));
});
Object.assign($faa2e61a3361514f$export$a5cf38a7a000fe77, {
  displayName: $faa2e61a3361514f$var$RANGE_NAME
});
var $faa2e61a3361514f$var$THUMB_NAME = "SliderThumb";
var $faa2e61a3361514f$export$2c1b491743890dec = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const getItems = $faa2e61a3361514f$var$useCollection(props.__scopeSlider);
  const [thumb, setThumb] = (0, import_react30.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setThumb(node)
  );
  const index2 = (0, import_react30.useMemo)(
    () => thumb ? getItems().findIndex(
      (item) => item.ref.current === thumb
    ) : -1,
    [
      getItems,
      thumb
    ]
  );
  return (0, import_react30.createElement)($faa2e61a3361514f$var$SliderThumbImpl, _extends({}, props, {
    ref: composedRefs,
    index: index2
  }));
});
var $faa2e61a3361514f$var$SliderThumbImpl = (0, import_react30.forwardRef)((props, forwardedRef) => {
  const { __scopeSlider, index: index2, ...thumbProps } = props;
  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);
  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);
  const [thumb, setThumb] = (0, import_react30.useState)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setThumb(node)
  );
  const size2 = $db6c3485150b8e66$export$1ab7ae714698c4b8(thumb);
  const value = context.values[index2];
  const percent = value === void 0 ? 0 : $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max);
  const label = $faa2e61a3361514f$var$getLabel(index2, context.values.length);
  const orientationSize = size2 === null || size2 === void 0 ? void 0 : size2[orientation.size];
  const thumbInBoundsOffset = orientationSize ? $faa2e61a3361514f$var$getThumbInBoundsOffset(orientationSize, percent, orientation.direction) : 0;
  (0, import_react30.useEffect)(() => {
    if (thumb) {
      context.thumbs.add(thumb);
      return () => {
        context.thumbs.delete(thumb);
      };
    }
  }, [
    thumb,
    context.thumbs
  ]);
  return (0, import_react30.createElement)("span", {
    style: {
      transform: "var(--radix-slider-thumb-transform)",
      position: "absolute",
      [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`
    }
  }, (0, import_react30.createElement)($faa2e61a3361514f$var$Collection.ItemSlot, {
    scope: props.__scopeSlider
  }, (0, import_react30.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({
    role: "slider",
    "aria-label": props["aria-label"] || label,
    "aria-valuemin": context.min,
    "aria-valuenow": value,
    "aria-valuemax": context.max,
    "aria-orientation": context.orientation,
    "data-orientation": context.orientation,
    "data-disabled": context.disabled ? "" : void 0,
    tabIndex: context.disabled ? void 0 : 0
  }, thumbProps, {
    ref: composedRefs,
    style: value === void 0 ? {
      display: "none"
    } : props.style,
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      context.valueIndexToChangeRef.current = index2;
    })
  }))));
});
Object.assign($faa2e61a3361514f$export$2c1b491743890dec, {
  displayName: $faa2e61a3361514f$var$THUMB_NAME
});
var $faa2e61a3361514f$var$BubbleInput = (props) => {
  const { value, ...inputProps } = props;
  const ref = (0, import_react30.useRef)(null);
  const prevValue = $010c2913dbd2fe3d$export$5cae361ad82dce8b(value);
  (0, import_react30.useEffect)(() => {
    const input = ref.current;
    const inputProto = window.HTMLInputElement.prototype;
    const descriptor = Object.getOwnPropertyDescriptor(inputProto, "value");
    const setValue = descriptor.set;
    if (prevValue !== value && setValue) {
      const event = new Event("input", {
        bubbles: true
      });
      setValue.call(input, value);
      input.dispatchEvent(event);
    }
  }, [
    prevValue,
    value
  ]);
  return (0, import_react30.createElement)("input", _extends({
    style: {
      display: "none"
    }
  }, inputProps, {
    ref,
    defaultValue: value
  }));
};
function $faa2e61a3361514f$var$getNextSortedValues(prevValues = [], nextValue, atIndex) {
  const nextValues = [
    ...prevValues
  ];
  nextValues[atIndex] = nextValue;
  return nextValues.sort(
    (a, b) => a - b
  );
}
function $faa2e61a3361514f$var$convertValueToPercentage(value, min3, max3) {
  const maxSteps = max3 - min3;
  const percentPerStep = 100 / maxSteps;
  return percentPerStep * (value - min3);
}
function $faa2e61a3361514f$var$getLabel(index2, totalValues) {
  if (totalValues > 2)
    return `Value ${index2 + 1} of ${totalValues}`;
  else if (totalValues === 2)
    return [
      "Minimum",
      "Maximum"
    ][index2];
  else
    return void 0;
}
function $faa2e61a3361514f$var$getClosestValueIndex(values, nextValue) {
  if (values.length === 1)
    return 0;
  const distances = values.map(
    (value) => Math.abs(value - nextValue)
  );
  const closestDistance = Math.min(...distances);
  return distances.indexOf(closestDistance);
}
function $faa2e61a3361514f$var$getThumbInBoundsOffset(width, left, direction) {
  const halfWidth = width / 2;
  const halfPercent = 50;
  const offset2 = $faa2e61a3361514f$var$linearScale([
    0,
    halfPercent
  ], [
    0,
    halfWidth
  ]);
  return (halfWidth - offset2(left) * direction) * direction;
}
function $faa2e61a3361514f$var$getStepsBetweenValues(values) {
  return values.slice(0, -1).map(
    (value, index2) => values[index2 + 1] - value
  );
}
function $faa2e61a3361514f$var$hasMinStepsBetweenValues(values, minStepsBetweenValues) {
  if (minStepsBetweenValues > 0) {
    const stepsBetweenValues = $faa2e61a3361514f$var$getStepsBetweenValues(values);
    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);
    return actualMinStepsBetweenValues >= minStepsBetweenValues;
  }
  return true;
}
function $faa2e61a3361514f$var$linearScale(input, output) {
  return (value) => {
    if (input[0] === input[1] || output[0] === output[1])
      return output[0];
    const ratio = (output[1] - output[0]) / (input[1] - input[0]);
    return output[0] + ratio * (value - input[0]);
  };
}
function $faa2e61a3361514f$var$getDecimalCount(value) {
  return (String(value).split(".")[1] || "").length;
}
function $faa2e61a3361514f$var$roundValue(value, decimalCount) {
  const rounder = Math.pow(10, decimalCount);
  return Math.round(value * rounder) / rounder;
}
var $faa2e61a3361514f$export$be92b6f5f03c0fe9 = $faa2e61a3361514f$export$472062a354075cee;
var $faa2e61a3361514f$export$13921ac0cc260818 = $faa2e61a3361514f$export$105594979f116971;
var $faa2e61a3361514f$export$9a58ef0d7ad3278c = $faa2e61a3361514f$export$a5cf38a7a000fe77;
var $faa2e61a3361514f$export$6521433ed15a34db = $faa2e61a3361514f$export$2c1b491743890dec;

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SliderField/SliderField.mjs
var React120 = __toESM(require_react(), 1);
var { Range, Root, Thumb, Track } = sanitizeNamespaceImport(index_module_exports3);
var SLIDER_LABEL_TEST_ID = "slider-label";
var SLIDER_ROOT_TEST_ID = "slider-root";
var SLIDER_TRACK_TEST_ID = "slider-track";
var SLIDER_RANGE_TEST_ID = "slider-range";
var SliderFieldPrimitive = ({ ariaValuetext, className, defaultValue: defaultValue2 = 0, descriptiveText, emptyTrackColor, errorMessage, filledTrackColor, formatValue, hasError = false, id, isDisabled, isValueHidden = false, label, labelHidden = false, onChange, orientation = "horizontal", outerEndComponent, outerStartComponent, testId, thumbColor, trackSize, value, size: size2, ..._rest }, ref) => {
  const { isFieldsetDisabled } = useFieldset();
  const fieldId = useStableId(id);
  const labelId = useStableId();
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const disabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  const isControlled = value !== void 0;
  const [currentValue, setCurrentValue] = React120.useState(isControlled ? value : defaultValue2);
  const values = isControlled ? [value] : void 0;
  const defaultValues = !isControlled ? [defaultValue2] : void 0;
  const onValueChange = React120.useCallback((value2) => {
    setCurrentValue(value2[0]);
    if (isFunction(onChange)) {
      onChange(value2[0]);
    }
  }, [onChange]);
  const renderedValue = React120.useMemo(() => {
    const formattedValue = isFunction(formatValue) ? formatValue(currentValue) : currentValue;
    return typeof formatValue === "string" ? React120.createElement(View, { as: "span" }, formattedValue) : formattedValue;
  }, [currentValue, formatValue]);
  const isVertical = orientation === "vertical";
  const componentClasses = classNames(ComponentClassName.SliderFieldTrack, classNameModifier(ComponentClassName.SliderFieldTrack, orientation), classNameModifier(ComponentClassName.SliderFieldTrack, size2));
  const rootComponentClasses = classNames(ComponentClassName.SliderFieldRoot, classNameModifier(ComponentClassName.SliderFieldRoot, orientation), classNameModifier(ComponentClassName.SliderFieldRoot, size2), classNameModifierByFlag(ComponentClassName.SliderFieldRoot, "disabled", disabled), className);
  return React120.createElement(
    Flex,
    {
      // Custom classnames will be added to Root below
      className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.SliderField),
      testId,
      ...styleProps
    },
    React120.createElement(
      Label,
      { className: ComponentClassName.SliderFieldLabel, id: labelId, testId: SLIDER_LABEL_TEST_ID, visuallyHidden: labelHidden },
      React120.createElement(View, { as: "span" }, label),
      !isValueHidden ? renderedValue : null
    ),
    React120.createElement(FieldDescription, { id: descriptionId, labelHidden, descriptiveText }),
    React120.createElement(
      FieldGroup,
      { className: ComponentClassName.SliderFieldGroup, id: fieldId, orientation, outerStartComponent, outerEndComponent },
      React120.createElement(
        Root,
        { className: rootComponentClasses, "data-testid": SLIDER_ROOT_TEST_ID, disabled, defaultValue: defaultValues, onValueChange, orientation, ref, value: values, ...rest },
        React120.createElement(
          Track,
          { className: componentClasses, "data-testid": SLIDER_TRACK_TEST_ID, style: {
            backgroundColor: String(emptyTrackColor),
            [`${isVertical ? "width" : "height"}`]: trackSize
          } },
          React120.createElement(Range, { className: classNames(ComponentClassName.SliderFieldRange, classNameModifier(ComponentClassName.SliderFieldRange, orientation), classNameModifierByFlag(ComponentClassName.SliderFieldRange, "disabled", disabled)), "data-testid": SLIDER_RANGE_TEST_ID, style: { backgroundColor: String(filledTrackColor) } })
        ),
        React120.createElement(Thumb, { "aria-describedby": ariaDescribedBy, "aria-labelledby": labelId, "aria-valuetext": ariaValuetext, className: classNames(ComponentClassName.SliderFieldThumb, classNameModifier(ComponentClassName.SliderFieldThumb, size2), classNameModifierByFlag(ComponentClassName.SliderFieldThumb, "disabled", disabled)), style: { backgroundColor: String(thumbColor) } })
      )
    ),
    React120.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var SliderField = primitiveWithForwardRef(SliderFieldPrimitive);
SliderField.displayName = "SliderField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/StepperField/StepperField.mjs
var React124 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/StepperField/useStepper.mjs
var React121 = __toESM(require_react(), 1);
var getCorrectSteppingValue = ({ max: max3, min: min3, step, value }) => {
  const remainder = (value - min3) % step;
  value = value - remainder + Math.round(remainder / step) * step;
  value = Math.max(min3, value);
  if (value > max3) {
    value = max3 - (max3 - min3) % step;
  }
  return value;
};
var useStepper = ({ defaultValue: defaultValue2 = 0, value: controlledValue, step = 1, max: max3 = Number.MAX_SAFE_INTEGER, min: min3 = Number.MIN_SAFE_INTEGER, isDisabled, isReadOnly, onChange, onDecrease, onIncrease, onStepChange }) => {
  const isControlled = controlledValue !== void 0;
  max3 = Math.max(min3, max3);
  const [uncontrolledValue, setUncontrolledValue] = React121.useState(() => (
    // This is required for users could provide any defaultValue
    getCorrectSteppingValue({ min: min3, max: max3, step, value: defaultValue2 })
  ));
  const value = isControlled ? getCorrectSteppingValue({ min: min3, max: max3, step, value: controlledValue }) : uncontrolledValue;
  const shouldDisableIncreaseButton = isDisabled ?? isReadOnly ?? value + step > max3;
  const shouldDisableDecreaseButton = isDisabled ?? isReadOnly ?? value - step < min3;
  const [inputValue, setInputValue] = React121.useState(value);
  const handleOnChange = React121.useCallback((event) => {
    setInputValue(event.target.value);
    if (isFunction(onChange)) {
      onChange(event);
    }
  }, [onChange]);
  const handleOnBlur = React121.useCallback((event) => {
    const parsedValue = parseFloat(event.target.value);
    if (isNaN(parsedValue)) {
      return;
    }
    const newValue = getCorrectSteppingValue({
      min: min3,
      max: max3,
      step,
      value: parsedValue
    });
    if (!isControlled) {
      setUncontrolledValue(newValue);
    }
    if (isFunction(onStepChange)) {
      onStepChange(newValue);
    }
    setInputValue(newValue);
  }, [min3, max3, step, isControlled, onStepChange]);
  const handleIncrease = React121.useCallback(() => {
    if (!isControlled) {
      setUncontrolledValue(value + step);
    }
    if (isFunction(onStepChange)) {
      onStepChange(value + step);
    }
    if (isFunction(onIncrease)) {
      onIncrease();
    }
    setInputValue(value + step);
  }, [step, value, isControlled, onIncrease, onStepChange]);
  const handleDecrease = React121.useCallback(() => {
    if (!isControlled) {
      setUncontrolledValue(value - step);
    }
    if (isFunction(onStepChange)) {
      onStepChange(value - step);
    }
    if (isFunction(onDecrease)) {
      onDecrease();
    }
    setInputValue(value - step);
  }, [step, value, isControlled, onDecrease, onStepChange]);
  const handleOnWheel = React121.useCallback((event) => {
    event.currentTarget.blur();
  }, []);
  return {
    step,
    value,
    inputValue,
    handleDecrease,
    handleIncrease,
    handleOnBlur,
    handleOnChange,
    handleOnWheel,
    setInputValue,
    shouldDisableDecreaseButton,
    shouldDisableIncreaseButton
  };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconAdd.mjs
var React122 = __toESM(require_react(), 1);
var IconAdd = (props) => {
  const { className, ...rest } = props;
  return React122.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React122.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React122.createElement("path", { d: "M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconRemove.mjs
var React123 = __toESM(require_react(), 1);
var IconRemove = (props) => {
  const { className, ...rest } = props;
  return React123.createElement(
    View,
    { as: "span", width: "1em", height: "1em", className: classNames(ComponentClassName.Icon, className), ...rest },
    React123.createElement(
      "svg",
      { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
      React123.createElement("path", { d: "M19 13H5V11H19V13Z", fill: "currentColor" })
    )
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/StepperField/StepperField.mjs
var DECREASE_ICON = "decrease-icon";
var INCREASE_ICON = "increase-icon";
var StepperFieldPrimitive = (props, ref) => {
  const {
    className,
    // destructure to prevent `defaultValue` from being passed to underlying `Input` via `_rest`
    defaultValue: defaultValue2,
    descriptiveText,
    errorMessage,
    hasError = false,
    id,
    inputStyles,
    isDisabled,
    isReadOnly,
    isRequired,
    increaseButtonLabel = ComponentText.StepperField.increaseButtonLabel,
    decreaseButtonLabel = ComponentText.StepperField.decreaseButtonLabel,
    label,
    labelHidden = false,
    // destructure to prevent `onStepChange` from being passed to underlying `Input` via `_rest`
    onStepChange,
    size: size2,
    testId,
    // this is only required in useStepper hook but deconstruct here to remove its existence in rest
    value: controlledValue,
    variation,
    ..._rest
  } = props;
  const fieldId = useStableId(id);
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  const icons = useIcons("stepperField");
  const { step, value, inputValue, handleDecrease, handleIncrease, handleOnBlur, handleOnChange, handleOnWheel, setInputValue, shouldDisableDecreaseButton, shouldDisableIncreaseButton } = useStepper({ ...props, defaultValue: defaultValue2, onStepChange });
  React124.useEffect(() => {
    const isControlled = controlledValue !== void 0;
    if (isControlled) {
      setInputValue(controlledValue);
    }
  }, [controlledValue, setInputValue]);
  return React124.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.StepperField, className), testId, ...styleProps },
    React124.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),
    React124.createElement(FieldDescription, { id: descriptionId, labelHidden, descriptiveText }),
    React124.createElement(
      FieldGroup,
      { outerStartComponent: React124.createElement(FieldGroupIconButton, { "aria-controls": fieldId, ariaLabel: `${decreaseButtonLabel} ${value - step}`, className: classNames(ComponentClassName.StepperFieldButtonDecrease, classNameModifier(ComponentClassName.StepperFieldButtonDecrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonDecrease, "disabled", shouldDisableDecreaseButton)), "data-invalid": hasError, isDisabled: shouldDisableDecreaseButton, onClick: handleDecrease, size: size2 }, (icons == null ? void 0 : icons.remove) ?? React124.createElement(IconRemove, { "data-testid": DECREASE_ICON })), outerEndComponent: React124.createElement(FieldGroupIconButton, { "aria-controls": fieldId, ariaLabel: `${increaseButtonLabel} ${value + step}`, className: classNames(ComponentClassName.StepperFieldButtonIncrease, classNameModifier(ComponentClassName.StepperFieldButtonIncrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonIncrease, "disabled", shouldDisableIncreaseButton)), "data-invalid": hasError, isDisabled: shouldDisableIncreaseButton, onClick: handleIncrease, size: size2 }, (icons == null ? void 0 : icons.add) ?? React124.createElement(IconAdd, { "data-testid": INCREASE_ICON })) },
      React124.createElement(Input, { "aria-describedby": ariaDescribedBy, className: ComponentClassName.StepperFieldInput, hasError, id: fieldId, isDisabled, isReadOnly, isRequired, onBlur: handleOnBlur, onChange: handleOnChange, onWheel: handleOnWheel, ref, size: size2, variation, type: "number", value: inputValue, ...inputStyles, ...rest })
    ),
    React124.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var StepperField = primitiveWithForwardRef(StepperFieldPrimitive);
StepperField.displayName = "StepperField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SwitchField/SwitchField.mjs
var React125 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SwitchField/useSwitch.mjs
var import_react31 = __toESM(require_react(), 1);
var useSwitch = (props) => {
  const { onChange, isChecked, defaultChecked, isDisabled } = props;
  const isControlled = typeof isChecked !== "undefined";
  const [isOn, setIsOn] = (0, import_react31.useState)(isControlled ? isChecked : !!defaultChecked);
  const [isFocused, setIsFocused] = (0, import_react31.useState)(false);
  const changeHandler = (0, import_react31.useCallback)((event) => {
    if (isDisabled) {
      event.preventDefault();
      return;
    }
    if (isFunction(onChange)) {
      onChange(event);
    }
    setIsOn(event.target.checked);
  }, [onChange, isDisabled]);
  if (isControlled && isOn !== isChecked) {
    setIsOn(isChecked);
  }
  return {
    isOn,
    changeHandler,
    isFocused,
    setIsFocused
  };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/SwitchField/SwitchField.mjs
var SwitchFieldPrimitive = ({ className, defaultChecked, id, isChecked, isDisabled, isLabelHidden, label, labelPosition, name, onChange, size: size2, thumbColor, trackCheckedColor, trackColor, value, hasError, errorMessage, ...rest }, ref) => {
  const { isOn, changeHandler, isFocused, setIsFocused } = useSwitch({
    onChange,
    isChecked,
    defaultChecked,
    isDisabled
  });
  const { isFieldsetDisabled } = useFieldset();
  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;
  const fieldId = useStableId(id);
  const wrapperClasses = classNames(ComponentClassName.SwitchTrack, classNameModifierByFlag(ComponentClassName.SwitchTrack, "checked", isOn), classNameModifierByFlag(ComponentClassName.SwitchTrack, "disabled", shouldBeDisabled), classNameModifierByFlag(ComponentClassName.SwitchTrack, "focused", isFocused), classNameModifierByFlag(ComponentClassName.SwitchTrack, "error", hasError));
  const componentClasses = classNames(ComponentClassName.SwitchThumb, classNameModifierByFlag(ComponentClassName.SwitchThumb, "checked", isOn), classNameModifierByFlag(ComponentClassName.SwitchThumb, "disabled", shouldBeDisabled));
  return React125.createElement(
    Flex,
    { className: classNames(ComponentClassName.SwitchField, classNameModifier(ComponentClassName.SwitchField, size2), labelPosition ? `amplify-label-${labelPosition}` : null, className), ref, ...rest },
    React125.createElement(
      VisuallyHidden,
      null,
      React125.createElement(Input, { role: "switch", type: "checkbox", id: fieldId, onChange: changeHandler, disabled: isDisabled, name, checked: isOn, value, onFocus: () => {
        setIsFocused(true);
      }, onBlur: () => {
        setIsFocused(false);
      } })
    ),
    React125.createElement(
      Label,
      { htmlFor: fieldId, className: classNames(ComponentClassName.SwitchWrapper, classNameModifier(ComponentClassName.SwitchWrapper, labelPosition)) },
      isLabelHidden ? React125.createElement(VisuallyHidden, { as: "span", className: ComponentClassName.SwitchLabel }, label) : React125.createElement(View, { as: "span", className: ComponentClassName.SwitchLabel }, label),
      React125.createElement(
        View,
        { as: "span", className: wrapperClasses, backgroundColor: isOn ? trackCheckedColor : trackColor },
        React125.createElement(View, { as: "span", className: componentClasses, "data-checked": isOn, "data-disabled": shouldBeDisabled, backgroundColor: thumbColor })
      )
    ),
    React125.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var SwitchField = primitiveWithForwardRef(SwitchFieldPrimitive);
SwitchField.displayName = "SwitchField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/Table.mjs
var React126 = __toESM(require_react(), 1);
var TablePrimitive = ({ caption, children, className, highlightOnHover = false, size: size2, variation, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Table, classNameModifier(ComponentClassName.Table, size2), classNameModifier(ComponentClassName.Table, variation), className);
  return React126.createElement(
    View,
    { as: "table", className: componentClasses, "data-highlightonhover": highlightOnHover, ref, ...rest },
    caption && React126.createElement(View, { as: "caption", className: ComponentClassName.TableCaption }, caption),
    children
  );
};
var Table = primitiveWithForwardRef(TablePrimitive);
Table.displayName = "Table";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/TableBody.mjs
var React127 = __toESM(require_react(), 1);
var TableBodyPrimitive = ({ children, className, ...rest }, ref) => React127.createElement(View, { as: "tbody", className: classNames(ComponentClassName.TableBody, className), ref, ...rest }, children);
var TableBody = primitiveWithForwardRef(TableBodyPrimitive);
TableBody.displayName = "TableBody";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/TableCell.mjs
var React128 = __toESM(require_react(), 1);
var TableCellPrimitive = ({ as: asElementTag = "td", children, className, ...rest }, ref) => React128.createElement(View, { as: asElementTag, className: classNames(asElementTag === "td" ? ComponentClassName.TableTd : ComponentClassName.TableTh, className), ref, ...rest }, children);
var TableCell = primitiveWithForwardRef(TableCellPrimitive);
TableCell.displayName = "TableCell";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/TableFoot.mjs
var React129 = __toESM(require_react(), 1);
var TableFootPrimitive = ({ children, className, ...rest }, ref) => React129.createElement(View, { as: "tfoot", className: classNames(ComponentClassName.TableFoot, className), ref, ...rest }, children);
var TableFoot = primitiveWithForwardRef(TableFootPrimitive);
TableFoot.displayName = "TableFoot";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/TableHead.mjs
var React130 = __toESM(require_react(), 1);
var TableHeadPrimitive = ({ children, className, ...rest }, ref) => React130.createElement(View, { as: "thead", className: classNames(ComponentClassName.TableHead, className), ref, ...rest }, children);
var TableHead = primitiveWithForwardRef(TableHeadPrimitive);
TableHead.displayName = "TableHead";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Table/TableRow.mjs
var React131 = __toESM(require_react(), 1);
var TableRowPrimitive = ({ children, className, ...rest }, ref) => React131.createElement(View, { as: "tr", className: classNames(ComponentClassName.TableRow, className), ref, ...rest }, children);
var TableRow = primitiveWithForwardRef(TableRowPrimitive);
TableRow.displayName = "TableRow";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/Tabs.mjs
var React137 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsItem.mjs
var React133 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsContext.mjs
var React132 = __toESM(require_react(), 1);
var TabsContext = React132.createContext({
  activeTab: "",
  setActiveTab: () => {
  }
});

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsItem.mjs
var TabsItemPrimitive = ({ className, value, children, onClick, as = "button", role = "tab", ...rest }, ref) => {
  const { activeTab, setActiveTab } = React133.useContext(TabsContext);
  const isActive = activeTab === value;
  const handleOnClick = (e) => {
    if (isTypedFunction(onClick)) {
      onClick == null ? void 0 : onClick(e);
    }
    setActiveTab(value);
  };
  return React133.createElement(View, { ...rest, role, as, id: `${value}-tab`, "aria-selected": isActive, "aria-controls": `${value}-panel`, tabIndex: !isActive ? -1 : void 0, className: classNames(ComponentClassName.TabsItem, classNameModifierByFlag(ComponentClassName.TabsItem, "active", activeTab === value), className), ref, onClick: handleOnClick }, children);
};
var TabsItem = primitiveWithForwardRef(TabsItemPrimitive);
TabsItem.displayName = "Tabs.Item";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsList.mjs
var React134 = __toESM(require_react(), 1);
var isValidTab = (child) => React134.isValidElement(child);
var TabListPrimitive = ({ className, children, indicatorPosition, spacing, role = "tablist", ...rest }, ref) => {
  const internalRef = React134.useRef(null);
  const { activeTab, setActiveTab } = React134.useContext(TabsContext);
  React134.useImperativeHandle(ref, () => internalRef.current);
  const values = React134.useMemo(() => React134.Children.toArray(children).map((child) => {
    if (child && isValidTab(child)) {
      return child.props.value;
    }
  }).filter((child) => !!child), [children]);
  const currentIndex = values.indexOf(activeTab);
  const nextTab = React134.useCallback(() => {
    var _a;
    let nextIndex = currentIndex === values.length - 1 ? 0 : currentIndex + 1;
    const elems = ((_a = internalRef.current) == null ? void 0 : _a.querySelectorAll("button")) ?? [];
    while (elems[nextIndex].disabled) {
      if (nextIndex === values.length - 1) {
        nextIndex = 0;
      } else {
        nextIndex++;
      }
    }
    const value = values[nextIndex];
    if (value) {
      setActiveTab(value);
      const elem = elems[nextIndex];
      elem == null ? void 0 : elem.focus();
      elem == null ? void 0 : elem.click();
    }
  }, [currentIndex, setActiveTab, values]);
  const prevTab = React134.useCallback(() => {
    var _a;
    let prevIndex = currentIndex === 0 ? values.length - 1 : currentIndex - 1;
    const elems = ((_a = internalRef.current) == null ? void 0 : _a.querySelectorAll("button")) ?? [];
    while (elems[prevIndex].disabled) {
      if (prevIndex === 0) {
        prevIndex = values.length - 1;
      } else {
        prevIndex--;
      }
    }
    const value = values[prevIndex];
    if (value) {
      setActiveTab(value);
      const elem = elems[prevIndex];
      elem == null ? void 0 : elem.focus();
      elem == null ? void 0 : elem.click();
    }
  }, [currentIndex, setActiveTab, values]);
  const onKeyDown = React134.useCallback((event) => {
    switch (event.key) {
      case "ArrowLeft":
        event.preventDefault();
        event.stopPropagation();
        prevTab();
        break;
      case "ArrowUp":
      case "ArrowRight":
        event.preventDefault();
        event.stopPropagation();
        nextTab();
        break;
    }
  }, [prevTab, nextTab]);
  return React134.createElement(View, { ...rest, role, onKeyDown, className: classNames(ComponentClassName.TabsList, indicatorPosition ? classNameModifier(ComponentClassName.TabsList, indicatorPosition) : null, spacing ? classNameModifier(ComponentClassName.TabsList, spacing) : null, className), ref: internalRef }, children);
};
var TabList = primitiveWithForwardRef(TabListPrimitive);
TabList.displayName = "Tabs.List";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsPanel.mjs
var React135 = __toESM(require_react(), 1);
var TabPanelPrimitive = ({ className, value, children, role = "tabpanel", ...rest }, ref) => {
  const { activeTab, isLazy } = React135.useContext(TabsContext);
  if (isLazy && activeTab !== value)
    return null;
  return React135.createElement(View, { ...rest, role, id: `${value}-panel`, "aria-labelledby": `${value}-tab`, className: classNames(ComponentClassName.TabsPanel, classNameModifierByFlag(ComponentClassName.TabsPanel, "active", activeTab === value), className), ref }, children);
};
var TabPanel = primitiveWithForwardRef(TabPanelPrimitive);
TabPanel.displayName = "Tabs.Panel";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/TabsContainer.mjs
var React136 = __toESM(require_react(), 1);
var TabsContainerPrimitive = ({ children, defaultValue: defaultValue2, className, value: controlledValue, onValueChange, isLazy, ...rest }, ref) => {
  const isControlled = controlledValue !== void 0;
  const [localValue, setLocalValue] = React136.useState(() => isControlled ? controlledValue : defaultValue2);
  const activeTab = isControlled ? controlledValue : localValue ?? "";
  const setActiveTab = React136.useCallback((newValue) => {
    if (isFunction(onValueChange)) {
      onValueChange(newValue);
    }
    if (!isControlled) {
      setLocalValue(newValue);
    }
  }, [onValueChange, isControlled]);
  const _value = React136.useMemo(() => {
    return {
      activeTab,
      isLazy,
      setActiveTab
    };
  }, [activeTab, setActiveTab, isLazy]);
  return React136.createElement(
    TabsContext.Provider,
    { value: _value },
    React136.createElement(View, { ...rest, ref, className: classNames(className, ComponentClassName.Tabs) }, children)
  );
};
var TabsContainer = primitiveWithForwardRef(TabsContainerPrimitive);
TabsContainer.displayName = "Tabs.Container";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Tabs/Tabs.mjs
var TabsPrimitive = ({ items, indicatorPosition, justifyContent, spacing, ...rest }, ref) => {
  return React137.createElement(
    TabsContainer,
    { ...rest, ref },
    React137.createElement(TabList, { indicatorPosition, justifyContent, spacing }, items == null ? void 0 : items.map(({ value, label, content, ...rest2 }) => React137.createElement(TabsItem, { ...rest2, key: value, value }, label))),
    items == null ? void 0 : items.map(({ value, content, isDisabled }) => React137.createElement(TabPanel, { key: value, value, isDisabled }, content))
  );
};
var Tabs = Object.assign(primitiveWithForwardRef(TabsPrimitive), {
  Item: TabsItem,
  List: TabList,
  Panel: TabPanel,
  Container: TabsContainer
});
Tabs.displayName = "Tabs";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextAreaField/TextAreaField.mjs
var React139 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextArea/TextArea.mjs
var React138 = __toESM(require_react(), 1);
var TextAreaPrimitive = ({ className, isDisabled, isReadOnly, isRequired, size: size2, hasError = false, variation, ...rest }, ref) => {
  const componentClasses = classNames(ComponentClassName.Textarea, ComponentClassName.FieldGroupControl, classNameModifier(ComponentClassName.Textarea, variation), classNameModifier(ComponentClassName.Textarea, size2), classNameModifierByFlag(ComponentClassName.Textarea, "error", hasError), className);
  const { isFieldsetDisabled } = useFieldset();
  return React138.createElement(View, { "aria-invalid": hasError, as: "textarea", className: componentClasses, disabled: isFieldsetDisabled ? isFieldsetDisabled : isDisabled, readOnly: isReadOnly, ref, required: isRequired, ...rest });
};
var TextArea = primitiveWithForwardRef(TextAreaPrimitive);
TextArea.displayName = "TextArea";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/TextAreaField/TextAreaField.mjs
var DEFAULT_ROW_COUNT = 3;
var TextAreaFieldPrimitive = (props, ref) => {
  const {
    className,
    descriptiveText,
    errorMessage,
    hasError = false,
    id,
    label,
    labelHidden = false,
    rows,
    size: size2,
    testId,
    inputStyles,
    // Destructuring the 'resize' style prop because while it is a style prop
    // it should go on the textarea element and not the wrapper div.
    resize,
    ..._rest
  } = props;
  const fieldId = useStableId(id);
  const descriptionId = useStableId();
  const ariaDescribedBy = descriptiveText ? descriptionId : void 0;
  const { styleProps, rest } = splitPrimitiveProps(_rest);
  return React139.createElement(
    Flex,
    { className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size2), ComponentClassName.TextAreaField, className), testId, ...styleProps },
    React139.createElement(Label, { htmlFor: fieldId, visuallyHidden: labelHidden }, label),
    React139.createElement(FieldDescription, { id: descriptionId, labelHidden, descriptiveText }),
    React139.createElement(TextArea, { "aria-describedby": ariaDescribedBy, hasError, id: fieldId, ref, rows: rows ?? DEFAULT_ROW_COUNT, size: size2, resize, ...rest, ...inputStyles }),
    React139.createElement(FieldErrorMessage, { hasError, errorMessage })
  );
};
var TextAreaField = primitiveWithForwardRef(TextAreaFieldPrimitive);
TextAreaField.displayName = "TextAreaField";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButton/ToggleButton.mjs
var React141 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButton/useToggleButton.mjs
var React140 = __toESM(require_react(), 1);
var useToggleButton = ({ isPressed, defaultPressed, onClick, onChange, value }) => {
  const isControlled = isPressed !== void 0;
  const [pressed, setPressed] = React140.useState(defaultPressed);
  isPressed = isControlled ? isPressed : pressed;
  const handleClick = React140.useCallback((event) => {
    if (isFunction(onClick)) {
      onClick(event);
    }
    if (!isControlled) {
      setPressed(!pressed);
    }
    if (isControlled && isFunction(onChange)) {
      onChange(value);
    }
  }, [isControlled, onClick, onChange, pressed, value]);
  return { isPressed, handleClick };
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButton/ToggleButton.mjs
var ToggleButtonPrimitive = ({ className, children, defaultPressed = false, isDisabled, isPressed: isPressedProp, onChange, onClick, size: size2, value, variation, ...rest }, ref) => {
  const { isPressed, handleClick } = useToggleButton({
    isPressed: isPressedProp,
    defaultPressed,
    onChange,
    onClick,
    value
  });
  const componentClasses = classNames(ComponentClassName.ToggleButton, classNameModifier(ComponentClassName.ToggleButton, variation), classNameModifierByFlag(ComponentClassName.ToggleButton, "pressed", isPressed), className);
  return React141.createElement(Button, { "aria-pressed": isPressed, className: componentClasses, isDisabled, onClick: handleClick, ref, size: size2, type: "button", variation, ...rest }, children);
};
var ToggleButton = primitiveWithForwardRef(ToggleButtonPrimitive);
ToggleButton.displayName = "ToggleButton";

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButtonGroup/ToggleButtonGroup.mjs
var React143 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButtonGroup/useToggleButtonGroup.mjs
var React142 = __toESM(require_react(), 1);
var useToggleButtonGroup = ({ onChange, value, isExclusive = false, isSelectionRequired = false }) => {
  const handleChange = React142.useCallback((buttonValue) => {
    if (!isFunction(onChange) || !Array.isArray(value)) {
      return;
    }
    const index2 = isString(buttonValue) ? value.indexOf(buttonValue) : -1;
    let newValue;
    const shouldToggleOff = index2 >= 0;
    if (shouldToggleOff) {
      newValue = [...value];
      if (!isSelectionRequired || newValue.length > 1) {
        newValue.splice(index2, 1);
      }
    } else {
      newValue = [...value, buttonValue];
    }
    onChange(newValue);
  }, [onChange, value, isSelectionRequired]);
  const handleExclusiveChange = React142.useCallback((buttonValue) => {
    if (!isFunction(onChange)) {
      return;
    }
    onChange(value === buttonValue && !isSelectionRequired ? void 0 : buttonValue);
  }, [onChange, value, isSelectionRequired]);
  return isExclusive ? handleExclusiveChange : handleChange;
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/ToggleButtonGroup/ToggleButtonGroup.mjs
var ToggleButtonGroupPrimitive = ({ children, className, isExclusive, isSelectionRequired, onChange, size: size2, value, variation, ...rest }, ref) => {
  const handleChange = useToggleButtonGroup({
    onChange,
    value,
    isExclusive,
    isSelectionRequired
  });
  return React143.createElement(Flex, { className: classNames(ComponentClassName.ToggleButtonGroup, className), ref, role: "group", ...rest }, React143.Children.map(children, (child) => {
    if (React143.isValidElement(child)) {
      return React143.cloneElement(child, {
        isPressed: isExclusive ? value === child.props.value : isString(child.props.value) && value.includes(child.props.value),
        onChange: handleChange,
        size: size2,
        variation
      });
    }
    return child;
  }));
};
var ToggleButtonGroup = primitiveWithForwardRef(ToggleButtonGroupPrimitive);
ToggleButtonGroup.displayName = "ToggleButtonGroup";

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/constants.mjs
var ComponentClassName2;
(function(ComponentClassName3) {
  ComponentClassName3["ChangePassword"] = "amplify-accountsettings-changepassword";
  ComponentClassName3["DeleteUser"] = "amplify-accountsettings-deleteuser";
})(ComponentClassName2 || (ComponentClassName2 = {}));

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/ChangePassword/defaults.mjs
var import_react34 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/shared/ValidationErrors.mjs
var import_react32 = __toESM(require_react(), 1);
var ValidationErrors = ({ errors, id, dataAttr }) => {
  if (!((errors == null ? void 0 : errors.length) > 0))
    return null;
  const dataAttrProp = dataAttr ? { [dataAttr]: true } : {};
  return import_react32.default.createElement(View, { ...dataAttrProp, id }, errors.map((error) => {
    return import_react32.default.createElement(Text, { key: error, role: "alert", variation: "error" }, translate(error));
  }));
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/shared/Defaults.mjs
var import_react33 = __toESM(require_react(), 1);
var DefaultErrorMessage = (props) => {
  return import_react33.default.createElement(Alert, { variation: "error", ...props });
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/ChangePassword/defaults.mjs
var DefaultPasswordField = ({ fieldValidationErrors, label, ...rest }) => {
  return import_react34.default.createElement(
    import_react34.default.Fragment,
    null,
    import_react34.default.createElement(PasswordField, { ...rest, label }),
    fieldValidationErrors ? import_react34.default.createElement(ValidationErrors, { errors: fieldValidationErrors }) : null
  );
};
var DEFAULTS = {
  CurrentPasswordField: DefaultPasswordField,
  NewPasswordField: DefaultPasswordField,
  ConfirmPasswordField: DefaultPasswordField,
  SubmitButton: Button,
  ErrorMessage: DefaultErrorMessage
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/utils/displayText.mjs
var defaultChangePasswordDisplayText = {
  confirmPasswordFieldLabel: "Confirm Password",
  currentPasswordFieldLabel: "Current Password",
  newPasswordFieldLabel: "New Password",
  updatePasswordButtonText: "Update password"
};
var defaultDeleteUserDisplayText = {
  cancelButtonText: "Cancel",
  confirmDeleteButtonText: "Delete",
  deleteAccountButtonText: "Delete Account",
  warningText: "Deleting your account is not reversible. You will lose access to your account and all data associated with it."
};

// node_modules/@aws-amplify/ui-react/dist/esm/version.mjs
var VERSION = "6.1.6";

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/ChangePassword/ChangePassword.mjs
var logger3 = getLogger("AccountSettings");
var getIsDisabled = (formValues, validationError) => {
  var _a, _b;
  const { currentPassword, newPassword, confirmPassword } = formValues;
  const hasEmptyField = !currentPassword || !newPassword || !confirmPassword;
  if (hasEmptyField) {
    return true;
  }
  const arePasswordsInvalid = ((_a = validationError.newPassword) == null ? void 0 : _a.length) > 0 || ((_b = validationError.confirmPassword) == null ? void 0 : _b.length) > 0;
  return arePasswordsInvalid;
};
function ChangePassword({ components, displayText: overrideDisplayText, onError, onSuccess, validators }) {
  const [errorMessage, setErrorMessage] = import_react35.default.useState(null);
  const [formValues, setFormValues] = import_react35.default.useState({});
  const [validationError, setValidationError] = import_react35.default.useState({});
  const blurredFields = import_react35.default.useRef([]);
  const { user, isLoading } = useAuth();
  const isDisabled = getIsDisabled(formValues, validationError);
  const passwordValidators = import_react35.default.useMemo(() => {
    return validators ?? getDefaultPasswordValidators();
  }, [validators]);
  useSetUserAgent({
    componentName: "ChangePassword",
    packageName: "react",
    version: VERSION
  });
  const validateNewPassword = import_react35.default.useCallback(({ formValues: formValues2, eventType }) => {
    const { newPassword } = formValues2;
    const hasBlurred = blurredFields.current.includes("newPassword");
    return runFieldValidators({
      value: newPassword,
      validators: passwordValidators,
      eventType,
      hasBlurred
    });
  }, [passwordValidators]);
  const validateConfirmPassword = import_react35.default.useCallback(({ formValues: formValues2, eventType }) => {
    const { newPassword, confirmPassword } = formValues2;
    const hasBlurred = blurredFields.current.includes("confirmPassword");
    const confirmPasswordValidators = getDefaultConfirmPasswordValidators(newPassword);
    return runFieldValidators({
      value: confirmPassword,
      validators: confirmPasswordValidators,
      eventType,
      hasBlurred
    });
  }, []);
  const runValidation = import_react35.default.useCallback((param) => {
    const passwordErrors = validateNewPassword(param);
    const confirmPasswordErrors = validateConfirmPassword(param);
    const newValidationError = {
      newPassword: passwordErrors,
      confirmPassword: confirmPasswordErrors
    };
    if (!(0, import_isEqual.default)(validationError, newValidationError)) {
      setValidationError(newValidationError);
    }
  }, [validateConfirmPassword, validateNewPassword, validationError]);
  const displayText = {
    ...defaultChangePasswordDisplayText,
    ...overrideDisplayText
  };
  const { confirmPasswordFieldLabel, currentPasswordFieldLabel, newPasswordFieldLabel, updatePasswordButtonText } = displayText;
  const { CurrentPasswordField, NewPasswordField, ConfirmPasswordField, SubmitButton, ErrorMessage } = import_react35.default.useMemo(() => ({ ...DEFAULTS, ...components ?? {} }), [components]);
  const handleChange = (event) => {
    event.preventDefault();
    const { name, value } = event.target;
    const newFormValues = { ...formValues, [name]: value };
    runValidation({ formValues: newFormValues, eventType: "change" });
    setFormValues(newFormValues);
  };
  const handleBlur = (event) => {
    event.preventDefault();
    const { name } = event.target;
    if (!blurredFields.current.includes(name)) {
      const newBlurredFields = [...blurredFields.current, name];
      blurredFields.current = newBlurredFields;
      runValidation({ formValues, eventType: "blur" });
    }
  };
  const handleSubmit = (event) => {
    event.preventDefault();
    if (!user) {
      return;
    }
    const { currentPassword, newPassword } = formValues;
    if (errorMessage) {
      setErrorMessage(null);
    }
    changePassword({ currentPassword, newPassword }).then(() => {
      onSuccess == null ? void 0 : onSuccess();
    }).catch((e) => {
      const error = e;
      if (error.message)
        setErrorMessage(error.message);
      onError == null ? void 0 : onError(error);
    });
  };
  if (isLoading) {
    return null;
  }
  if (!user) {
    logger3.warn("<ChangePassword /> requires user to be authenticated.");
    return null;
  }
  return import_react35.default.createElement(
    View,
    { as: "form", className: ComponentClassName2.ChangePassword, onSubmit: handleSubmit },
    import_react35.default.createElement(
      Flex,
      { direction: "column" },
      import_react35.default.createElement(CurrentPasswordField, { autoComplete: "current-password", isRequired: true, label: currentPasswordFieldLabel, name: "currentPassword", onBlur: handleBlur, onChange: handleChange }),
      import_react35.default.createElement(NewPasswordField, { autoComplete: "new-password", fieldValidationErrors: validationError == null ? void 0 : validationError.newPassword, isRequired: true, label: newPasswordFieldLabel, name: "newPassword", onBlur: handleBlur, onChange: handleChange }),
      import_react35.default.createElement(ConfirmPasswordField, { autoComplete: "new-password", fieldValidationErrors: validationError == null ? void 0 : validationError.confirmPassword, isRequired: true, label: confirmPasswordFieldLabel, name: "confirmPassword", onBlur: handleBlur, onChange: handleChange }),
      import_react35.default.createElement(SubmitButton, { isDisabled, type: "submit" }, updatePasswordButtonText),
      errorMessage ? import_react35.default.createElement(ErrorMessage, null, errorMessage) : null
    )
  );
}
ChangePassword.CurrentPasswordField = DEFAULTS.CurrentPasswordField;
ChangePassword.NewPasswordField = DEFAULTS.NewPasswordField;
ChangePassword.ConfirmPasswordField = DEFAULTS.ConfirmPasswordField;
ChangePassword.SubmitButton = DEFAULTS.SubmitButton;
ChangePassword.ErrorMessage = DEFAULTS.ErrorMessage;

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/DeleteUser/DeleteUser.mjs
var import_react37 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/DeleteUser/defaults.mjs
var import_react36 = __toESM(require_react(), 1);
var DefaultWarningView = ({ displayText: overrideDisplayText, isDisabled, onCancel, onConfirm }) => {
  const displayText = {
    ...defaultDeleteUserDisplayText,
    ...overrideDisplayText
  };
  const { cancelButtonText, confirmDeleteButtonText, warningText } = displayText;
  return import_react36.default.createElement(
    Card,
    null,
    import_react36.default.createElement(
      Flex,
      { direction: "column" },
      import_react36.default.createElement(Text, { color: "font.error" }, warningText),
      import_react36.default.createElement(
        Flex,
        null,
        import_react36.default.createElement(Button, { variation: "link", onClick: onCancel, isDisabled }, cancelButtonText),
        import_react36.default.createElement(Button, { variation: "destructive", onClick: onConfirm, isDisabled }, confirmDeleteButtonText)
      )
    )
  );
};
var DefaultDeleteButton = (props) => import_react36.default.createElement(Button, { ...props, variation: "warning" });
var DEFAULTS2 = {
  ErrorMessage: DefaultErrorMessage,
  DeleteButton: DefaultDeleteButton,
  WarningView: DefaultWarningView
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/DeleteUser/DeleteUser.mjs
var logger4 = getLogger("AccountSettings");
function DeleteUser({ components, displayText: overrideDisplayText, handleDelete, onError, onSuccess }) {
  const [state, setState] = import_react37.default.useState("IDLE");
  const [errorMessage, setErrorMessage] = import_react37.default.useState(null);
  useSetUserAgent({
    componentName: "DeleteUser",
    packageName: "react",
    version: VERSION
  });
  const displayText = {
    ...defaultDeleteUserDisplayText,
    ...overrideDisplayText
  };
  const { deleteAccountButtonText } = displayText;
  const { user, isLoading } = useAuth();
  const { ErrorMessage, DeleteButton, WarningView } = import_react37.default.useMemo(() => ({ ...DEFAULTS2, ...components ?? {} }), [components]);
  const startConfirmation = (event) => {
    event.preventDefault();
    setState("CONFIRMATION");
  };
  const runDeleteUser = import_react37.default.useCallback(async () => {
    if (!user) {
      return;
    }
    setState("DELETING");
    if (errorMessage) {
      setErrorMessage(null);
    }
    try {
      if (handleDelete) {
        await handleDelete(user);
      } else {
        await deleteUser();
      }
      setState("DONE");
      onSuccess == null ? void 0 : onSuccess();
    } catch (e) {
      const error = e;
      setState("ERROR");
      setErrorMessage(error.message);
      onError == null ? void 0 : onError(error);
    }
  }, [errorMessage, handleDelete, onError, onSuccess, user]);
  const handleCancel = import_react37.default.useCallback(() => {
    setState("IDLE");
  }, []);
  const handleConfirmDelete = import_react37.default.useCallback(() => {
    runDeleteUser();
  }, [runDeleteUser]);
  if (isLoading) {
    return null;
  }
  if (!user) {
    logger4.warn("<DeleteUser /> requires user to be authenticated.");
    return null;
  }
  if (state === "DONE") {
    return null;
  }
  return import_react37.default.createElement(
    Flex,
    { className: ComponentClassName2.DeleteUser, direction: "column" },
    import_react37.default.createElement(DeleteButton, { isDisabled: state === "CONFIRMATION" || state === "DELETING", onClick: startConfirmation }, deleteAccountButtonText),
    state === "CONFIRMATION" || state === "DELETING" ? import_react37.default.createElement(WarningView, { displayText, isDisabled: state === "DELETING", onCancel: handleCancel, onConfirm: handleConfirmDelete }) : null,
    errorMessage ? import_react37.default.createElement(ErrorMessage, null, errorMessage) : null
  );
}
DeleteUser.ErrorMessage = DEFAULTS2.ErrorMessage;
DeleteUser.DeleteButton = DEFAULTS2.DeleteButton;
DeleteUser.WarningView = DEFAULTS2.WarningView;

// node_modules/@aws-amplify/ui-react/dist/esm/components/AccountSettings/AccountSettings.mjs
var AccountSettings = { ChangePassword, DeleteUser };

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/Authenticator.mjs
var React148 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/hooks/useDeprecationWarning.mjs
var useDeprecationWarning2 = ({ message, shouldWarn: _shouldWarn }) => {
  const shouldWarn = _shouldWarn && // show message on builds without Node `process` polyfill
  // or with process.env.NODE_ENV not production
  (typeof process === "undefined" || process && true);
  useDeprecationWarning({ message, shouldWarn });
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/hooks/useCustomComponents/useCustomComponents.mjs
var React144 = __toESM(require_react(), 1);
var CustomComponentsContext = (
  // @ts-ignore
  React144.createContext(null)
);
var useCustomComponents = () => {
  const context = React144.useContext(CustomComponentsContext);
  if (!context) {
    throw new Error("`useCustomComponents` cannot be used outside of a `CustomComponentsContext.Provider`");
  }
  return context;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/Router/Router.mjs
var import_react55 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ConfirmSignUp/ConfirmSignUp.mjs
var import_react41 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/hooks/useFormHandlers/useFormHandlers.mjs
var import_react38 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/helpers/utils.mjs
var getFormDataFromEvent = (event) => {
  const formData = new FormData(event.target);
  return Object.fromEntries(formData);
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/hooks/useFormHandlers/useFormHandlers.mjs
function useFormHandlers() {
  const { submitForm, updateBlur, updateForm } = useAuthenticator((context) => [
    context.submitForm,
    context.updateBlur,
    context.updateForm
  ]);
  const handleBlur = (0, import_react38.useCallback)(({ target: { name } }) => {
    updateBlur({ name });
  }, [updateBlur]);
  const handleChange = (0, import_react38.useCallback)(({ target: { checked, name, type, value } }) => {
    const isUncheckedCheckbox = type === "checkbox" && !checked;
    updateForm({
      name,
      value: isUncheckedCheckbox ? void 0 : value
    });
  }, [updateForm]);
  const handleSubmit = (0, import_react38.useCallback)((event) => {
    event.preventDefault();
    submitForm(getFormDataFromEvent(event));
  }, [submitForm]);
  return { handleBlur, handleChange, handleSubmit };
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/RemoteErrorMessage.mjs
var import_react39 = __toESM(require_react(), 1);
var RemoteErrorMessage = () => {
  const { error } = useAuthenticator((context) => [context.error]);
  return import_react39.default.createElement(import_react39.default.Fragment, null, error ? import_react39.default.createElement(Alert, { variation: "error", isDismissible: true }, translate(error)) : null);
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/FormFields.mjs
var React146 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/FormField.mjs
var React145 = __toESM(require_react(), 1);
function FormField({ autocomplete: autoComplete, dialCode, name, type, ...props }) {
  const { validationErrors } = useAuthenticator(({ validationErrors: validationErrors2 }) => [
    validationErrors2
  ]);
  const errors = React145.useMemo(() => getErrors(validationErrors[name]), [name, validationErrors]);
  const hasError = (errors == null ? void 0 : errors.length) > 0;
  const errorId = useStableId();
  const ariaDescribedBy = hasError ? errorId : void 0;
  if (type === "tel") {
    return React145.createElement(
      React145.Fragment,
      null,
      React145.createElement(PhoneNumberField, { ...props, name, defaultDialCode: dialCode, dialCodeName: "country_code", autoComplete, hasError, "aria-describedby": ariaDescribedBy }),
      React145.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors, id: errorId })
    );
  } else if (type === "password") {
    return React145.createElement(
      React145.Fragment,
      null,
      React145.createElement(PasswordField, { ...props, name, autoCapitalize: "off", autoComplete, hasError, "aria-describedby": ariaDescribedBy }),
      React145.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors, id: errorId })
    );
  } else {
    return React145.createElement(
      React145.Fragment,
      null,
      React145.createElement(TextField, { ...props, name, autoCapitalize: "off", autoComplete, hasError, type, "aria-describedby": ariaDescribedBy }),
      React145.createElement(ValidationErrors, { dataAttr: "data-amplify-sign-up-errors", errors, id: errorId })
    );
  }
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/FormFields.mjs
function FormFields() {
  const { fields } = useAuthenticator(({ route }) => [route]);
  const formFields = React146.useRef(fields.map((field, index2) => React146.createElement(
    FormField,
    {
      // use index for key, field order is static
      key: index2,
      ...field
    }
  ))).current;
  return React146.createElement(React146.Fragment, null, formFields);
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/RouteContainer/RouteContainer.mjs
var import_react40 = __toESM(require_react(), 1);
var hasTabs = (route) => {
  return route === "signIn" || "signUp";
};
function RouteContainer({ children, className, variation = "default" }) {
  const { route } = useAuthenticator(({ route: route2 }) => [route2]);
  const {
    // @ts-ignore
    components: { Header: Header10, Footer: Footer10 }
  } = useCustomComponents();
  return import_react40.default.createElement(
    View,
    { className, "data-amplify-authenticator": "", "data-variation": variation },
    import_react40.default.createElement(
      View,
      { "data-amplify-container": "" },
      import_react40.default.createElement(Header10, null),
      import_react40.default.createElement(View, { "data-amplify-router": "", "data-amplify-router-content": hasTabs(route) ? void 0 : "" }, children),
      import_react40.default.createElement(Footer10, null)
    )
  );
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ConfirmSignUp/ConfirmSignUp.mjs
var { getDeliveryMessageText, getDeliveryMethodText, getConfirmingText, getConfirmText, getResendCodeText } = authenticatorTextUtil;
function ConfirmSignUp({ className, variation }) {
  const { isPending, resendCode, codeDeliveryDetails } = useAuthenticator((context) => [
    context.isPending,
    context.resendCode,
    context.codeDeliveryDetails
  ]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ConfirmSignUp: { Header: Header10 = ConfirmSignUp.Header, Footer: Footer10 = ConfirmSignUp.Footer }
  } } = useCustomComponents();
  return (
    // TODO Automatically add these namespaces again from `useAmplify`
    import_react41.default.createElement(
      RouteContainer,
      { className, variation },
      import_react41.default.createElement(
        "form",
        { "data-amplify-form": "", "data-amplify-authenticator-confirmsignup": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
        import_react41.default.createElement(
          Flex,
          { as: "fieldset", direction: "column", isDisabled: isPending },
          import_react41.default.createElement(Header10, null),
          import_react41.default.createElement(
            Flex,
            { direction: "column" },
            import_react41.default.createElement(Text, { className: "amplify-authenticator__subtitle" }, getDeliveryMessageText(codeDeliveryDetails)),
            import_react41.default.createElement(FormFields, null),
            import_react41.default.createElement(RemoteErrorMessage, null),
            import_react41.default.createElement(Button, { variation: "primary", isDisabled: isPending, type: "submit", loadingText: getConfirmingText(), isLoading: isPending, fontWeight: "normal" }, getConfirmText()),
            import_react41.default.createElement(Button, { onClick: resendCode, type: "button", fontWeight: "normal" }, getResendCodeText())
          ),
          import_react41.default.createElement(Footer10, null)
        )
      )
    )
  );
}
var DefaultHeader = () => {
  const { codeDeliveryDetails } = useAuthenticator((context) => [
    context.codeDeliveryDetails
  ]);
  return import_react41.default.createElement(Heading, { level: 4 }, getDeliveryMethodText(codeDeliveryDetails));
};
ConfirmSignUp.Header = DefaultHeader;
ConfirmSignUp.Footer = function Footer() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ForceNewPassword/ForceNewPassword.mjs
var import_react42 = __toESM(require_react(), 1);
var { getChangePasswordText, getChangingText, getBackToSignInText } = authenticatorTextUtil;
var ForceNewPassword = ({ className, variation }) => {
  const { isPending, toSignIn } = useAuthenticator((context) => [
    context.isPending,
    context.toSignIn
  ]);
  const { handleBlur, handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ForceNewPassword: { FormFields: FormFields2 = ForceNewPassword.FormFields, Header: Header10 = ForceNewPassword.Header, Footer: Footer10 = ForceNewPassword.Footer }
  } } = useCustomComponents();
  return import_react42.default.createElement(
    RouteContainer,
    { className, variation },
    import_react42.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-forcenewpassword": "", method: "post", onChange: handleChange, onSubmit: handleSubmit, onBlur: handleBlur },
      import_react42.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react42.default.createElement(Header10, null),
        import_react42.default.createElement(FormFields2, null),
        import_react42.default.createElement(RemoteErrorMessage, null),
        import_react42.default.createElement(Button, { isDisabled: isPending, type: "submit", variation: "primary", isLoading: isPending, loadingText: getChangingText(), fontWeight: "normal" }, getChangePasswordText()),
        import_react42.default.createElement(Button, { onClick: toSignIn, type: "button", fontWeight: "normal", variation: "link", size: "small" }, getBackToSignInText()),
        import_react42.default.createElement(Footer10, null)
      )
    )
  );
};
ForceNewPassword.FormFields = function FormFields$1() {
  return import_react42.default.createElement(FormFields, null);
};
ForceNewPassword.Header = function Header() {
  return import_react42.default.createElement(Heading, { level: 4 }, getChangePasswordText());
};
ForceNewPassword.Footer = function Footer2() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/SetupTotp/SetupTotp.mjs
var import_qrcode = __toESM(require_browser(), 1);
var React147 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/ConfirmSignInFooter.mjs
var import_react43 = __toESM(require_react(), 1);
var { getConfirmText: getConfirmText2, getConfirmingText: getConfirmingText2, getBackToSignInText: getBackToSignInText2 } = authenticatorTextUtil;
var ConfirmSignInFooter = () => {
  const { isPending, toSignIn } = useAuthenticator((context) => [
    context.isPending,
    context.toSignIn
  ]);
  return import_react43.default.createElement(
    Flex,
    { direction: "column" },
    import_react43.default.createElement(Button, { isDisabled: isPending, type: "submit", variation: "primary", fontWeight: "normal", isLoading: isPending, loadingText: getConfirmingText2() }, getConfirmText2()),
    import_react43.default.createElement(Button, { onClick: toSignIn, type: "button", variation: "link", fontWeight: "normal", size: "small" }, getBackToSignInText2())
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/SetupTotp/SetupTotp.mjs
var logger5 = new ConsoleLogger("SetupTotp-logger");
var { getSetupTotpText, getCopiedText, getLoadingText } = authenticatorTextUtil;
var SetupTotp = ({ className, variation }) => {
  const { totpSecretCode, isPending, username, QRFields } = useAuthenticator((context) => [context.isPending, context.totpSecretCode, context.username]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    SetupTotp: { Header: Header10 = SetupTotp.Header, Footer: Footer10 = SetupTotp.Footer }
  } } = useCustomComponents();
  const [isLoading, setIsLoading] = React147.useState(true);
  const [qrCode, setQrCode] = React147.useState();
  const [copyTextLabel, setCopyTextLabel] = React147.useState("COPY");
  const { totpIssuer = "AWSCognito", totpUsername = username } = QRFields ?? {};
  const generateQRCode = React147.useCallback(async () => {
    try {
      const totpCode = getTotpCodeURL(totpIssuer, totpUsername, totpSecretCode);
      const qrCodeImageSource = await import_qrcode.default.toDataURL(totpCode);
      setQrCode(qrCodeImageSource);
    } catch (error) {
      logger5.error(error);
    } finally {
      setIsLoading(false);
    }
  }, [totpIssuer, totpUsername, totpSecretCode]);
  React147.useEffect(() => {
    if (!qrCode) {
      generateQRCode();
    }
  }, [generateQRCode, qrCode]);
  const copyText = () => {
    navigator.clipboard.writeText(totpSecretCode);
    setCopyTextLabel(getCopiedText());
  };
  return React147.createElement(
    RouteContainer,
    { className, variation },
    React147.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-setup-totp": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
      React147.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        React147.createElement(Header10, null),
        React147.createElement(
          Flex,
          { direction: "column" },
          isLoading ? React147.createElement(
            "p",
            null,
            getLoadingText(),
            "…"
          ) : React147.createElement("img", { "data-amplify-qrcode": true, src: qrCode, alt: "qr code", width: "228", height: "228" }),
          React147.createElement(
            Flex,
            { "data-amplify-copy": true },
            React147.createElement("div", null, totpSecretCode),
            React147.createElement(
              Flex,
              { "data-amplify-copy-svg": true, onClick: copyText },
              React147.createElement("div", { "data-amplify-copy-tooltip": true }, copyTextLabel),
              React147.createElement(
                "svg",
                { width: "24", height: "24", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg" },
                React147.createElement("path", { d: "M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM15 5H8C6.9 5 6.01 5.9 6.01 7L6 21C6 22.1 6.89 23 7.99 23H19C20.1 23 21 22.1 21 21V11L15 5ZM8 21V7H14V12H19V21H8Z" })
              )
            )
          ),
          React147.createElement(FormFields, null),
          React147.createElement(RemoteErrorMessage, null)
        ),
        React147.createElement(ConfirmSignInFooter, null),
        React147.createElement(Footer10, null)
      )
    )
  );
};
SetupTotp.Header = function Header2() {
  return React147.createElement(Heading, { level: 3 }, getSetupTotpText());
};
SetupTotp.Footer = function Footer3() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/SignInSignUpTabs.mjs
var import_react48 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/SignIn/SignIn.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/FederatedSignIn/FederatedSignIn.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/FederatedSignIn/FederatedSignInButtons/FederatedSignInButton.mjs
var import_react44 = __toESM(require_react(), 1);
var AppleIcon = () => {
  return import_react44.default.createElement(
    "svg",
    { "aria-label": "Apple icon", className: "amplify-icon federated-sign-in-icon", fill: "#000", preserveAspectRatio: "xMidYMid", stroke: "#000", strokeWidth: "0", viewBox: "0 0 1024 1024", xmlns: "http://www.w3.org/2000/svg" },
    import_react44.default.createElement("path", { d: "M747.4 535.7c-.4-68.2 30.5-119.6 92.9-157.5-34.9-50-87.7-77.5-157.3-82.8-65.9-5.2-138 38.4-164.4 38.4-27.9 0-91.7-36.6-141.9-36.6C273.1 298.8 163 379.8 163 544.6c0 48.7 8.9 99 26.7 150.8 23.8 68.2 109.6 235.3 199.1 232.6 46.8-1.1 79.9-33.2 140.8-33.2 59.1 0 89.7 33.2 141.9 33.2 90.3-1.3 167.9-153.2 190.5-221.6-121.1-57.1-114.6-167.2-114.6-170.7zm-105.1-305c50.7-60.2 46.1-115 44.6-134.7-44.8 2.6-96.6 30.5-126.1 64.8-32.5 36.8-51.6 82.3-47.5 133.6 48.4 3.7 92.6-21.2 129-63.7z" })
  );
};
var GoogleIcon = () => {
  return import_react44.default.createElement(
    "svg",
    { "aria-label": "Google icon", className: "amplify-icon federated-sign-in-icon", viewBox: "0 0 256 262", xmlns: "http://www.w3.org/2000/svg", preserveAspectRatio: "xMidYMid" },
    import_react44.default.createElement("path", { d: "M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027", fill: "#4285F4" }),
    import_react44.default.createElement("path", { d: "M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1", fill: "#34A853" }),
    import_react44.default.createElement("path", { d: "M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782", fill: "#FBBC05" }),
    import_react44.default.createElement("path", { d: "M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251", fill: "#EB4335" })
  );
};
var FacebookIcon = () => {
  return import_react44.default.createElement(Icon, { className: "federated-sign-in-icon", ariaLabel: "Facebook icon", viewBox: { minX: 0, minY: 0, width: 279, height: 538 }, pathData: "M82.3409742,538 L82.3409742,292.936652 L0,292.936652 L0,196.990154 L82.2410458,196.990154 L82.2410458,126.4295 C82.2410458,44.575144 132.205229,0 205.252865,0 C240.227794,0 270.306232,2.59855099 279,3.79788222 L279,89.2502322 L228.536175,89.2502322 C188.964542,89.2502322 181.270057,108.139699 181.270057,135.824262 L181.270057,196.89021 L276.202006,196.89021 L263.810888,292.836708 L181.16913,292.836708 L181.16913,538 L82.3409742,538 Z", fill: "#1877F2" });
};
var AmazonIcon = () => {
  return import_react44.default.createElement(
    "svg",
    { "aria-label": "Amazon icon", className: "amplify-icon federated-sign-in-icon", viewBox: "0 0 243 264", xmlns: "http://www.w3.org/2000/svg", preserveAspectRatio: "xMidYMid" },
    import_react44.default.createElement("path", { d: "M230.826 208.039C227.468 203.683 208.551 205.982 200.056 206.998C197.471 207.321 197.076 205.042 199.407 203.405C214.475 192.665 239.201 195.766 242.082 199.364C244.966 202.982 241.337 228.071 227.173 240.049C225.001 241.888 222.93 240.904 223.898 238.468C227.077 230.431 234.205 212.419 230.826 208.039ZM123.769 264C71.0234 264 39.0764 241.955 14.7853 217.542C9.97339 212.706 3.71799 206.296 0.311513 200.691C-1.09773 198.372 2.59096 195.022 5.04421 196.844C35.239 219.268 79.1012 239.538 122.53 239.538C151.82 239.538 188.046 227.47 217.669 214.868C222.147 212.966 222.147 219.18 221.512 221.061C221.183 222.032 206.515 236.221 186.247 247.047C167.304 257.166 143.397 264 123.769 264Z", fill: "#F2541B" }),
    import_react44.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M142.943 111.185C142.943 124.756 143.268 136.054 136.406 148.123C130.856 157.913 122.027 163.95 112.222 163.95C98.8288 163.95 90.9806 153.772 90.9806 138.693C90.9806 109.036 117.677 103.647 142.943 103.647V111.185ZM178.166 196.081C175.858 198.15 171.635 198.22 169.914 196.894C157.974 187.684 149.89 173.688 149.89 173.688C130.706 193.156 117.127 199 92.2879 199C62.8772 199 40 180.905 40 144.729C40 116.461 55.3552 97.2408 77.2563 87.823C96.2094 79.5256 122.684 78.0173 142.943 75.7517C142.943 75.7517 144.633 53.933 138.699 45.9806C134.098 39.8163 126.272 36.9329 119.089 36.9329C106.127 36.8829 93.61 43.9051 91.1262 57.4188C90.4136 61.2829 87.5533 64.5261 84.54 64.206L51.0823 60.5922C48.5156 60.2951 45.0381 57.6639 45.8636 53.3081C53.644 12.3684 90.7373 0 123.989 0C140.983 0 163.21 4.51651 176.608 17.3349C193.597 33.1648 191.969 54.2755 191.969 77.2722V131.51C191.969 147.835 198.768 154.987 205.151 163.775C207.376 166.953 207.886 170.714 205.04 173.032C197.902 178.999 178.166 196.081 178.166 196.081Z", fill: "#F2541B" })
  );
};
var FederatedSignInButton = (props) => {
  const { icon, provider, text } = props;
  const { toFederatedSignIn } = useAuthenticator();
  const handleClick = (event) => {
    event.preventDefault();
    toFederatedSignIn({ provider });
  };
  let iconComponent;
  if (icon === "facebook") {
    iconComponent = import_react44.default.createElement(FacebookIcon, null);
  } else if (icon === "google") {
    iconComponent = import_react44.default.createElement(GoogleIcon, null);
  } else if (icon === "amazon") {
    iconComponent = import_react44.default.createElement(AmazonIcon, null);
  } else if (icon === "apple") {
    iconComponent = import_react44.default.createElement(AppleIcon, null);
  }
  return import_react44.default.createElement(
    Button,
    { onClick: handleClick, className: "federated-sign-in-button", fontWeight: "normal", gap: "1rem" },
    iconComponent,
    import_react44.default.createElement(Text, { as: "span" }, text)
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/FederatedSignIn/FederatedSignIn.mjs
var { getSignInWithFederationText, getOrText } = authenticatorTextUtil;
function FederatedSignIn() {
  const { route, socialProviders } = useAuthenticator(({ route: route2, socialProviders: socialProviders2 }) => [route2, socialProviders2]);
  if (socialProviders.length === 0) {
    return null;
  }
  return import_react45.default.createElement(
    Flex,
    { direction: "column", padding: `0 0 1rem 0`, className: "federated-sign-in-container" },
    socialProviders.map((provider) => {
      switch (provider) {
        case "amazon":
          return import_react45.default.createElement(FederatedSignInButton, { icon: "amazon", key: provider, provider: FederatedIdentityProviders.Amazon, text: getSignInWithFederationText(route, provider) });
        case "apple":
          return import_react45.default.createElement(FederatedSignInButton, { icon: "apple", key: provider, provider: FederatedIdentityProviders.Apple, text: getSignInWithFederationText(route, provider) });
        case "facebook":
          return import_react45.default.createElement(FederatedSignInButton, { icon: "facebook", key: provider, provider: FederatedIdentityProviders.Facebook, text: getSignInWithFederationText(route, provider) });
        case "google":
          return import_react45.default.createElement(FederatedSignInButton, { icon: "google", key: provider, provider: FederatedIdentityProviders.Google, text: getSignInWithFederationText(route, provider) });
        default:
          console.error(`Authenticator does not support ${provider}. Please open an issue: https://github.com/aws-amplify/amplify-ui/issues/choose`);
      }
    }),
    import_react45.default.createElement(Divider, { size: "small", label: getOrText() })
  );
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/SignIn/SignIn.mjs
var { getSignInText, getSigningInText, getForgotPasswordText } = authenticatorTextUtil;
function SignIn() {
  const { isPending } = useAuthenticator((context) => [context.isPending]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    SignIn: { Header: Header10 = SignIn.Header, Footer: Footer10 = SignIn.Footer }
  } } = useCustomComponents();
  return import_react46.default.createElement(
    View,
    null,
    import_react46.default.createElement(Header10, null),
    import_react46.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-signin": "", method: "post", onSubmit: handleSubmit, onChange: handleChange },
      import_react46.default.createElement(FederatedSignIn, null),
      import_react46.default.createElement(
        Flex,
        { direction: "column" },
        import_react46.default.createElement(
          Flex,
          { as: "fieldset", direction: "column", isDisabled: isPending },
          import_react46.default.createElement(
            VisuallyHidden,
            null,
            import_react46.default.createElement("legend", null, getSignInText())
          ),
          import_react46.default.createElement(FormFields, null)
        ),
        import_react46.default.createElement(RemoteErrorMessage, null),
        import_react46.default.createElement(Button, { isDisabled: isPending, isFullWidth: true, type: "submit", variation: "primary", isLoading: isPending, loadingText: getSigningInText() }, getSignInText())
      )
    ),
    import_react46.default.createElement(Footer10, null)
  );
}
var DefaultFooter = () => {
  const { toForgotPassword } = useAuthenticator((context) => [
    context.toForgotPassword
  ]);
  return import_react46.default.createElement(
    View,
    { "data-amplify-footer": "" },
    import_react46.default.createElement(Button, { fontWeight: "normal", onClick: toForgotPassword, size: "small", variation: "link" }, getForgotPasswordText())
  );
};
SignIn.Footer = DefaultFooter;
SignIn.Header = function Header3() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/SignUp/SignUp.mjs
var import_react47 = __toESM(require_react(), 1);
var { getCreateAccountText, getCreatingAccountText } = authenticatorTextUtil;
function SignUp() {
  const { hasValidationErrors, isPending } = useAuthenticator((context) => [
    context.hasValidationErrors,
    context.isPending
  ]);
  const { handleChange, handleBlur, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    SignUp: { Header: Header10 = SignUp.Header, FormFields: FormFields2 = SignUp.FormFields, Footer: Footer10 = SignUp.Footer }
  } } = useCustomComponents();
  return import_react47.default.createElement(
    View,
    null,
    import_react47.default.createElement(Header10, null),
    import_react47.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-signup": "", method: "post", onChange: handleChange, onSubmit: handleSubmit, onBlur: handleBlur },
      import_react47.default.createElement(FederatedSignIn, null),
      import_react47.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react47.default.createElement(
          Flex,
          { direction: "column" },
          import_react47.default.createElement(FormFields2, null),
          import_react47.default.createElement(RemoteErrorMessage, null)
        ),
        import_react47.default.createElement(Button, { isDisabled: hasValidationErrors || isPending, isFullWidth: true, type: "submit", variation: "primary", isLoading: isPending, loadingText: getCreatingAccountText() }, getCreateAccountText())
      )
    ),
    import_react47.default.createElement(Footer10, null)
  );
}
SignUp.Header = function Header4() {
  return null;
};
SignUp.FormFields = function FormFields$12() {
  return import_react47.default.createElement(FormFields, null);
};
SignUp.Footer = function Footer4() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/SignInSignUpTabs.mjs
var { getSignInTabText, getSignUpTabText } = authenticatorTextUtil;
var SignInSignUpTabs = ({ className, hideSignUp, variation }) => {
  const { route, toSignIn, toSignUp } = useAuthenticator((context) => [
    context.route,
    context.toSignIn,
    context.toSignUp
  ]);
  return import_react48.default.createElement(RouteContainer, { className, variation }, hideSignUp ? import_react48.default.createElement(View, { "data-amplify-router-content": "" }, route === "signIn" && import_react48.default.createElement(SignIn, null)) : import_react48.default.createElement(
    Tabs.Container,
    { value: route, isLazy: true, onValueChange: () => route === "signIn" ? toSignUp() : toSignIn() },
    import_react48.default.createElement(
      Tabs.List,
      { spacing: "equal", indicatorPosition: "top" },
      import_react48.default.createElement(Tabs.Item, { value: "signIn" }, getSignInTabText()),
      import_react48.default.createElement(Tabs.Item, { value: "signUp" }, getSignUpTabText())
    ),
    import_react48.default.createElement(
      Tabs.Panel,
      { value: "signIn", "data-amplify-router-content": "" },
      import_react48.default.createElement(SignIn, null)
    ),
    import_react48.default.createElement(
      Tabs.Panel,
      { value: "signUp", "data-amplify-router-content": "" },
      import_react48.default.createElement(SignUp, null)
    )
  ));
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/VerifyUser/ConfirmVerifyUser.mjs
var import_react50 = __toESM(require_react(), 1);

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/shared/TwoButtonSubmitFooter.mjs
var import_react49 = __toESM(require_react(), 1);
var { getSubmitText, getSubmittingText } = authenticatorTextUtil;
var TwoButtonSubmitFooter = (props) => {
  const { cancelButtonSendType, cancelButtonText, submitButtonText } = props;
  const { isPending, resendCode, skipVerification, toSignIn } = useAuthenticator((context) => [context.isPending]);
  const onClick = () => {
    switch (cancelButtonSendType) {
      case "SKIP":
        skipVerification();
        break;
      case "RESEND":
        resendCode();
        break;
      case "SIGN_IN":
        toSignIn();
        break;
      default:
        return;
    }
  };
  const defaultSubmitText = isPending ? import_react49.default.createElement(
    import_react49.default.Fragment,
    null,
    getSubmittingText(),
    "…"
  ) : import_react49.default.createElement(import_react49.default.Fragment, null, getSubmitText());
  const submitText = submitButtonText ?? defaultSubmitText;
  return import_react49.default.createElement(
    Flex,
    { direction: "column" },
    import_react49.default.createElement(Button, { fontWeight: "normal", variation: "primary", isDisabled: isPending, type: "submit" }, submitText),
    import_react49.default.createElement(Button, { onClick, type: "button", variation: "link", fontWeight: "normal", size: "small" }, cancelButtonText)
  );
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/VerifyUser/ConfirmVerifyUser.mjs
var { getAccountRecoveryInfoText, getSkipText } = authenticatorTextUtil;
var ConfirmVerifyUser = ({ className, variation }) => {
  const { isPending } = useAuthenticator((context) => [context.isPending]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ConfirmVerifyUser: { Header: Header10 = ConfirmVerifyUser.Header, Footer: Footer10 = ConfirmVerifyUser.Footer }
  } } = useCustomComponents();
  return import_react50.default.createElement(
    RouteContainer,
    { className, variation },
    import_react50.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-confirmverifyuser": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
      import_react50.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react50.default.createElement(Header10, null),
        import_react50.default.createElement(
          Flex,
          { direction: "column" },
          import_react50.default.createElement(FormFields, null)
        ),
        import_react50.default.createElement(RemoteErrorMessage, null),
        import_react50.default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getSkipText(), cancelButtonSendType: "SKIP" }),
        import_react50.default.createElement(Footer10, null)
      )
    )
  );
};
ConfirmVerifyUser.Header = function Header5() {
  return import_react50.default.createElement(Heading, { level: 3 }, getAccountRecoveryInfoText());
};
ConfirmVerifyUser.Footer = function Footer5() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/VerifyUser/VerifyUser.mjs
var import_react51 = __toESM(require_react(), 1);
var { getSkipText: getSkipText2, getVerifyText, getVerifyContactText, getAccountRecoveryInfoText: getAccountRecoveryInfoText2 } = authenticatorTextUtil;
var generateRadioGroup = (attributes) => {
  return Object.entries(attributes).map(([key, value]) => {
    const verificationType = defaultFormFieldOptions[key].label;
    return import_react51.default.createElement(
      Radio,
      { name: "unverifiedAttr", value: key, key },
      translate(verificationType),
      ":",
      " ",
      censorContactMethod(verificationType, value)
    );
  });
};
var VerifyUser = ({ className, variation }) => {
  const { components: {
    // @ts-ignore
    VerifyUser: { Header: Header10 = VerifyUser.Header, Footer: Footer10 = VerifyUser.Footer }
  } } = useCustomComponents();
  const { isPending, unverifiedUserAttributes } = useAuthenticator(({ isPending: isPending2, unverifiedUserAttributes: unverifiedUserAttributes2 }) => [
    isPending2,
    unverifiedUserAttributes2
  ]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const footerSubmitText = isPending ? import_react51.default.createElement(import_react51.default.Fragment, null, "Verifying…") : import_react51.default.createElement(import_react51.default.Fragment, null, getVerifyText());
  const verificationRadioGroup = import_react51.default.createElement(RadioGroupField, { legend: getVerifyContactText(), name: "verify_context", isDisabled: isPending, legendHidden: true }, generateRadioGroup(unverifiedUserAttributes));
  return import_react51.default.createElement(
    RouteContainer,
    { className, variation },
    import_react51.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-verifyuser": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
      import_react51.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react51.default.createElement(Header10, null),
        verificationRadioGroup,
        import_react51.default.createElement(RemoteErrorMessage, null),
        import_react51.default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getSkipText2(), cancelButtonSendType: "SKIP", submitButtonText: footerSubmitText }),
        import_react51.default.createElement(Footer10, null)
      )
    )
  );
};
VerifyUser.Header = function Header6() {
  return import_react51.default.createElement(Heading, { level: 3 }, getAccountRecoveryInfoText2());
};
VerifyUser.Footer = function Footer6() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ConfirmSignIn/ConfirmSignIn.mjs
var import_react52 = __toESM(require_react(), 1);
var { getChallengeText } = authenticatorTextUtil;
var ConfirmSignIn = ({ className, variation }) => {
  const { isPending } = useAuthenticator((context) => [context.isPending]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ConfirmSignIn: { Header: Header10 = ConfirmSignIn.Header, Footer: Footer10 = ConfirmSignIn.Footer }
  } } = useCustomComponents();
  return import_react52.default.createElement(
    RouteContainer,
    { className, variation },
    import_react52.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-confirmsignin": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
      import_react52.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react52.default.createElement(Header10, null),
        import_react52.default.createElement(
          Flex,
          { direction: "column" },
          import_react52.default.createElement(FormFields, null),
          import_react52.default.createElement(RemoteErrorMessage, null)
        ),
        import_react52.default.createElement(ConfirmSignInFooter, null),
        import_react52.default.createElement(Footer10, null)
      )
    )
  );
};
function Header7() {
  const { challengeName } = useAuthenticator(({ challengeName: challengeName2 }) => [
    challengeName2
  ]);
  return import_react52.default.createElement(Heading, { level: 3 }, getChallengeText(challengeName));
}
ConfirmSignIn.Header = Header7;
ConfirmSignIn.Footer = function Footer7() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ForgotPassword/ConfirmResetPassword.mjs
var import_react53 = __toESM(require_react(), 1);
var { getResendCodeText: getResendCodeText2, getResetYourPasswordText } = authenticatorTextUtil;
var ConfirmResetPassword = ({ className, variation }) => {
  const { isPending } = useAuthenticator((context) => [context.isPending]);
  const { handleBlur, handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ConfirmResetPassword: { Header: Header10 = ConfirmResetPassword.Header, Footer: Footer10 = ConfirmResetPassword.Footer }
  } } = useCustomComponents();
  return import_react53.default.createElement(
    RouteContainer,
    { className, variation },
    import_react53.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-confirmresetpassword": "", method: "post", onSubmit: handleSubmit, onChange: handleChange, onBlur: handleBlur },
      import_react53.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react53.default.createElement(Header10, null),
        import_react53.default.createElement(
          Flex,
          { direction: "column" },
          import_react53.default.createElement(FormFields, null)
        ),
        import_react53.default.createElement(RemoteErrorMessage, null),
        import_react53.default.createElement(TwoButtonSubmitFooter, { cancelButtonSendType: "RESEND", cancelButtonText: getResendCodeText2() }),
        import_react53.default.createElement(Footer10, null)
      )
    )
  );
};
ConfirmResetPassword.Header = function Header8() {
  const headerText = getResetYourPasswordText();
  return import_react53.default.createElement(Heading, { level: 3 }, headerText);
};
ConfirmResetPassword.Footer = function Footer8() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/ForgotPassword/ForgotPassword.mjs
var import_react54 = __toESM(require_react(), 1);
var { getBackToSignInText: getBackToSignInText3, getSendingText, getSendCodeText, getResetYourPasswordText: getResetYourPasswordText2 } = authenticatorTextUtil;
var ForgotPassword = ({ className, variation }) => {
  const { isPending } = useAuthenticator((context) => [context.isPending]);
  const { handleChange, handleSubmit } = useFormHandlers();
  const { components: {
    // @ts-ignore
    ForgotPassword: { Header: Header10 = ForgotPassword.Header, Footer: Footer10 = ForgotPassword.Footer }
  } } = useCustomComponents();
  return import_react54.default.createElement(
    RouteContainer,
    { className, variation },
    import_react54.default.createElement(
      "form",
      { "data-amplify-form": "", "data-amplify-authenticator-forgotpassword": "", method: "post", onChange: handleChange, onSubmit: handleSubmit },
      import_react54.default.createElement(
        Flex,
        { as: "fieldset", direction: "column", isDisabled: isPending },
        import_react54.default.createElement(Header10, null),
        import_react54.default.createElement(
          Flex,
          { direction: "column" },
          import_react54.default.createElement(FormFields, null)
        ),
        import_react54.default.createElement(RemoteErrorMessage, null),
        import_react54.default.createElement(TwoButtonSubmitFooter, { cancelButtonText: getBackToSignInText3(), cancelButtonSendType: "SIGN_IN", submitButtonText: isPending ? import_react54.default.createElement(
          import_react54.default.Fragment,
          null,
          getSendingText(),
          "…"
        ) : import_react54.default.createElement(import_react54.default.Fragment, null, getSendCodeText()) }),
        import_react54.default.createElement(Footer10, null)
      )
    )
  );
};
ForgotPassword.Header = function Header9() {
  return import_react54.default.createElement(Heading, { level: 3 }, getResetYourPasswordText2());
};
ForgotPassword.Footer = function Footer9() {
  return null;
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/utils.mjs
var isSignInOrSignUpRoute = (route) => route === "signIn" || route === "signUp";

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/Router/Router.mjs
function RenderNothing() {
  return null;
}
var getRouteComponent = (route) => {
  switch (route) {
    case "authenticated":
    case "idle":
    case "setup":
    case "transition":
      return RenderNothing;
    case "confirmSignUp":
      return ConfirmSignUp;
    case "confirmSignIn":
      return ConfirmSignIn;
    case "setupTotp":
      return SetupTotp;
    case "signIn":
    case "signUp":
      return SignInSignUpTabs;
    case "forceNewPassword":
      return ForceNewPassword;
    case "forgotPassword":
      return ForgotPassword;
    case "confirmResetPassword":
      return ConfirmResetPassword;
    case "verifyUser":
      return VerifyUser;
    case "confirmVerifyUser":
      return ConfirmVerifyUser;
    default:
      console.warn(`Unhandled Authenticator route - please open an issue: ${route}`);
      return RenderNothing;
  }
};
function Router({ className, hideSignUp, variation }) {
  const { route } = useAuthenticator(({ route: route2 }) => [route2]);
  const RouterChildren = (0, import_react55.useMemo)(() => getRouteComponent(route), [route]);
  return import_react55.default.createElement(RouterChildren, {
    className,
    // @ts-ignore
    hideSignUp: isSignInOrSignUpRoute(route) ? hideSignUp : void 0,
    variation
  });
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/hooks/useCustomComponents/defaultComponents.mjs
var defaultComponents = {
  // @ts-ignore
  Header: () => null,
  SignIn: {
    Header: SignIn.Header,
    Footer: SignIn.Footer
  },
  SignUp: {
    Header: SignUp.Header,
    FormFields: SignUp.FormFields,
    Footer: SignUp.Footer
  },
  ConfirmSignUp: {
    Header: ConfirmSignUp.Header,
    Footer: ConfirmSignUp.Footer
  },
  SetupTotp: {
    Header: SetupTotp.Header,
    Footer: SetupTotp.Footer
  },
  ConfirmResetPassword: {
    Header: ConfirmResetPassword.Header,
    Footer: ConfirmResetPassword.Footer
  },
  ConfirmSignIn: {
    Header: ConfirmSignIn.Header,
    Footer: ConfirmSignIn.Footer
  },
  VerifyUser: {
    Header: VerifyUser.Header,
    Footer: VerifyUser.Footer
  },
  ConfirmVerifyUser: {
    Header: ConfirmVerifyUser.Header,
    // @ts-ignore
    Footer: ConfirmVerifyUser.Footer
  },
  ForceNewPassword: {
    Header: ForceNewPassword.Header,
    Footer: ForceNewPassword.Footer,
    FormFields: ForceNewPassword.FormFields
  },
  ForgotPassword: {
    Header: ForgotPassword.Header,
    Footer: ForgotPassword.Footer
  },
  // @ts-ignore
  Footer: () => null
};

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/Authenticator.mjs
function AuthenticatorInternal({ children, className, components: customComponents, formFields, hideSignUp, initialState, loginMechanisms, passwordSettings, signUpAttributes, services, socialProviders, variation }) {
  useDeprecationWarning2({
    message: "The `passwordSettings` prop has been deprecated and will be removed in a future major version of Amplify UI.",
    // shouldWarn: !!passwordSettings,
    /**
     * @migration turn off until getConfig returns zero config
     */
    shouldWarn: false
  });
  const { route, signOut, user } = useAuthenticator(({ route: route2, signOut: signOut2, user: user2 }) => [route2, signOut2, user2]);
  useAuthenticatorInitMachine({
    initialState,
    loginMechanisms,
    passwordSettings,
    services,
    signUpAttributes,
    socialProviders,
    formFields
  });
  const value = React148.useMemo(() => ({ components: { ...defaultComponents, ...customComponents } }), [customComponents]);
  const isAuthenticatedRoute = route === "authenticated" || route === "signOut";
  if (isAuthenticatedRoute) {
    if (!children) {
      return null;
    }
    return React148.createElement(React148.Fragment, null, isFunction(children) ? children({ signOut, user }) : children);
  }
  return React148.createElement(
    CustomComponentsContext.Provider,
    { value },
    React148.createElement(Router, { className, hideSignUp, variation })
  );
}
function Authenticator(props) {
  useSetUserAgent({
    componentName: "Authenticator",
    packageName: "react",
    version: VERSION
  });
  return React148.createElement(
    AuthenticatorProvider,
    null,
    React148.createElement(AuthenticatorInternal, { ...props })
  );
}
Authenticator.Provider = AuthenticatorProvider;
Authenticator.ForgotPassword = ForgotPassword;
Authenticator.SetupTotp = SetupTotp;
Authenticator.SignIn = SignIn;
Authenticator.SignUp = SignUp;
Authenticator.ForceNewPassword = ForceNewPassword;

// node_modules/@aws-amplify/ui-react/dist/esm/components/Authenticator/withAuthenticator.mjs
var import_react56 = __toESM(require_react(), 1);
function withAuthenticator(Component, options = {}) {
  const { variation = "modal" } = options;
  return function WrappedWithAuthenticator(props) {
    return import_react56.default.createElement(Authenticator, { variation, ...options }, (withAuthenticatorProps) => import_react56.default.createElement(Component, { ...props, ...withAuthenticatorProps }));
  };
}

// node_modules/@aws-amplify/ui-react/dist/esm/components/ThemeProvider/ThemeProvider.mjs
var React149 = __toESM(require_react(), 1);
var { DirectionProvider } = sanitizeNamespaceImport(index_module_exports);
function ThemeProvider({ children, colorMode, direction = "ltr", nonce, theme }) {
  const value = React149.useMemo(() => ({ theme: createTheme(theme), colorMode }), [theme, colorMode]);
  const { theme: { name, cssText } } = value;
  return React149.createElement(
    ThemeContext.Provider,
    { value },
    React149.createElement(
      DirectionProvider,
      { dir: direction },
      React149.createElement("div", { "data-amplify-theme": name, "data-amplify-color-mode": colorMode, dir: direction }, children),
      typeof theme === "undefined" || /<\/style/i.test(cssText) ? null : React149.createElement("style", {
        id: `amplify-theme-${name}`,
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: { __html: cssText },
        nonce
      })
    )
  );
}

// node_modules/@aws-amplify/ui-react/dist/esm/hooks/useBreakpointValue.mjs
var useBreakpointValue = (values, defaultBreakpoint = "base", propKey) => {
  const { breakpoints: { values: breakpoints }, tokens } = useTheme();
  const breakpoint = useBreakpoint({
    breakpoints,
    defaultBreakpoint
  });
  const value = getValueAtCurrentBreakpoint({
    breakpoint,
    breakpoints,
    values
  });
  if (isDesignToken(value) || isString(value)) {
    return getStyleValue({ value, propKey, tokens });
  } else {
    return value;
  }
};

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/index.mjs
var primitives_exports = {};
__export(primitives_exports, {
  Accordion: () => Accordion,
  Alert: () => Alert,
  Autocomplete: () => Autocomplete,
  Badge: () => Badge,
  Breadcrumbs: () => Breadcrumbs,
  Button: () => Button,
  ButtonGroup: () => ButtonGroup,
  Card: () => Card,
  CheckboxField: () => CheckboxField,
  Collection: () => Collection,
  ComponentPropsToStylePropsMap: () => ComponentPropsToStylePropsMap,
  ComponentPropsToStylePropsMapKeys: () => ComponentPropsToStylePropsMapKeys,
  Divider: () => Divider,
  DropZone: () => DropZone,
  FieldGroupIcon: () => FieldGroupIcon,
  FieldGroupIconButton: () => FieldGroupIconButton,
  Fieldset: () => Fieldset,
  Flex: () => Flex,
  Grid: () => Grid,
  Heading: () => Heading,
  HighlightMatch: () => HighlightMatch,
  Icon: () => Icon,
  IconsProvider: () => IconsProvider,
  Image: () => Image,
  Input: () => Input,
  Label: () => Label,
  Link: () => Link,
  Loader: () => Loader,
  Menu: () => Menu,
  MenuButton: () => MenuButton,
  MenuItem: () => MenuItem,
  Message: () => Message,
  Pagination: () => Pagination,
  PasswordField: () => PasswordField,
  PhoneNumberField: () => PhoneNumberField,
  Placeholder: () => Placeholder,
  Radio: () => Radio,
  RadioGroupField: () => RadioGroupField,
  Rating: () => Rating,
  ScrollView: () => ScrollView,
  SearchField: () => SearchField,
  SelectField: () => SelectField,
  SliderField: () => SliderField,
  StepperField: () => StepperField,
  SwitchField: () => SwitchField,
  Table: () => Table,
  TableBody: () => TableBody,
  TableCell: () => TableCell,
  TableFoot: () => TableFoot,
  TableHead: () => TableHead,
  TableRow: () => TableRow,
  Tabs: () => Tabs,
  Text: () => Text,
  TextAreaField: () => TextAreaField,
  TextField: () => TextField,
  ToggleButton: () => ToggleButton,
  ToggleButtonGroup: () => ToggleButtonGroup,
  View: () => View,
  VisuallyHidden: () => VisuallyHidden,
  usePagination: () => usePagination
});

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/Icon/context/IconsProvider.mjs
var React150 = __toESM(require_react(), 1);
function IconsProvider({ children, icons }) {
  return React150.createElement(IconsContext.Provider, { value: icons }, children);
}

// node_modules/@aws-amplify/ui-react/dist/esm/primitives/index.mjs
var import_react57 = __toESM(require_react(), 1);
export {
  Accordion,
  AccountSettings,
  Alert,
  Authenticator,
  Autocomplete,
  Badge,
  Breadcrumbs,
  Button,
  ButtonGroup,
  Card,
  CheckboxField,
  Collection,
  ComponentPropsToStylePropsMap,
  ComponentPropsToStylePropsMapKeys,
  Divider,
  DropZone,
  FieldGroupIcon,
  FieldGroupIconButton,
  Fieldset,
  Flex,
  Grid,
  Heading,
  HighlightMatch,
  Icon,
  IconsProvider,
  Image,
  Input,
  Label,
  Link,
  Loader,
  Menu,
  MenuButton,
  MenuItem,
  Message,
  Pagination,
  PasswordField,
  PhoneNumberField,
  Placeholder,
  Radio,
  RadioGroupField,
  Rating,
  ScrollView,
  SearchField,
  SelectField,
  SliderField,
  StepperField,
  SwitchField,
  Table,
  TableBody,
  TableCell,
  TableFoot,
  TableHead,
  TableRow,
  Tabs,
  Text,
  TextAreaField,
  TextField,
  ThemeProvider,
  ToggleButton,
  ToggleButtonGroup,
  View,
  VisuallyHidden,
  components_exports as components,
  createTheme,
  defaultDarkModeOverride,
  defaultTheme,
  primitives_exports as primitives,
  translations,
  useAuthenticator,
  useBreakpointValue,
  usePagination,
  useTheme,
  withAuthenticator
};
//# sourceMappingURL=@aws-amplify_ui-react.js.map
